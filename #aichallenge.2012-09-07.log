2012-09-07T01:03:12  *** Areks <Areks!~Areks@rs.gridnine.com> has joined #aichallenge
2012-09-07T01:06:34  *** replore <replore!~replore@203.152.213.161.static.zoot.jp> has quit IRC (Remote host closed the connection)
2012-09-07T01:26:54  *** mceier <mceier!~mceier@89-77-239-61.dynamic.chello.pl> has quit IRC (Quit: leaving)
2012-09-07T01:34:49  *** rofer <rofer!javagamer@199.231.209.119> has quit IRC (Ping timeout: 246 seconds)
2012-09-07T01:50:25  <Zannick> yeah, i've been considering that
2012-09-07T02:03:18  *** replore <replore!~replore@203.152.213.161.static.zoot.jp> has joined #aichallenge
2012-09-07T02:24:14  *** mceier <mceier!~mceier@77-252-246-25.ip.netia.com.pl> has joined #aichallenge
2012-09-07T02:28:43  *** replore <replore!~replore@203.152.213.161.static.zoot.jp> has quit IRC (Remote host closed the connection)
2012-09-07T02:53:07  *** kilae <kilae!~chatzilla@109.205.205.99> has joined #aichallenge
2012-09-07T02:55:21  *** epicmonkey_ <epicmonkey_!~epicmonke@188.134.41.211> has joined #aichallenge
2012-09-07T03:07:27  *** epicmonkey_ <epicmonkey_!~epicmonke@188.134.41.211> has quit IRC (Ping timeout: 264 seconds)
2012-09-07T03:12:50  *** Samvara <Samvara!~sabayonus@lnx-bsp.net> has quit IRC (Ping timeout: 260 seconds)
2012-09-07T03:20:26  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-09-07T03:31:46  *** rofer <rofer!javagamer@199.231.209.119> has joined #aichallenge
2012-09-07T03:33:07  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has quit IRC (Quit: Leaving.)
2012-09-07T03:33:49  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-09-07T03:34:19  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has quit IRC (Client Quit)
2012-09-07T03:59:27  *** mcstar <mcstar!~mcstar@adsl-89-134-6-90.monradsl.monornet.hu> has joined #aichallenge
2012-09-07T04:09:15  *** kilae_ <kilae_!~chatzilla@109.205.205.99> has joined #aichallenge
2012-09-07T04:11:38  *** kilae <kilae!~chatzilla@109.205.205.99> has quit IRC (Ping timeout: 246 seconds)
2012-09-07T04:19:41  *** epicmonkey_ <epicmonkey_!~epicmonke@host-224-60.dataart.net> has joined #aichallenge
2012-09-07T04:30:57  *** kilae <kilae!~chatzilla@109.205.205.99> has joined #aichallenge
2012-09-07T04:31:07  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-09-07T04:33:58  *** kilae_ <kilae_!~chatzilla@109.205.205.99> has quit IRC (Ping timeout: 255 seconds)
2012-09-07T04:42:12  *** antimatroidl1 <antimatroidl1!~Adium@49.102.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-09-07T04:42:12  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has quit IRC (Read error: Connection reset by peer)
2012-09-07T05:25:20  <antimatroidl1> mcstar: you there?
2012-09-07T05:25:44  <mcstar> yes
2012-09-07T05:25:54  <mcstar> still no wifi?
2012-09-07T05:26:10  <antimatroidl1> haven't tried again, friend and i have made heaps of progress with diagram stuff
2012-09-07T05:26:15  <antimatroidl1> i will at some point
2012-09-07T05:26:38  <antimatroidl1> so i implemented multiplication of diagrams by edges and i'm curious about that problem for repeatedly taking the union of non pairwise disjoint sets
2012-09-07T05:26:44  <antimatroidl1> do you know what that probem is called?
2012-09-07T05:26:51  <antimatroidl1> it's too obvious not to be well known
2012-09-07T05:27:15  <mcstar> ill have to think
2012-09-07T05:27:40  <mcstar> pairwise non-disjoint?
2012-09-07T05:27:55  <mcstar> or non-pairwise disjoint?
2012-09-07T05:27:59  <antimatroidl1> consider {1,2}, {2,3}. {3,4}
2012-09-07T05:28:09  <antimatroidl1> the intersection of all 3 sets is empty
2012-09-07T05:28:15  <antimatroidl1> but the intersection of pars is not
2012-09-07T05:28:20  <mcstar> yes
2012-09-07T05:28:29  <antimatroidl1> to be unambiguous i say pairwise disjoint rather than disjoint
2012-09-07T05:28:34  <thestinger> antimatroidl1: http://boingboing.net/2012/08/07/what-do-christian-fundamentali.html you'll find this funny
2012-09-07T05:29:34  <thestinger> antimatroidl1: you're doing the devil's work.
2012-09-07T05:29:45  <mcstar> antimatroidl1: i dont think theres a special name for that kind of union, it is basically just a simple union, the order you union sets together doesnt matter
2012-09-07T05:30:11  <mcstar> you just specify the constraints, the sets must follow, and just take the union of them
2012-09-07T05:31:05  <antimatroidl1> mcstar: exactly, the end result is independent of the way you do it (if done properly)
2012-09-07T05:31:05  <mcstar> in this case, as i can see, theres not much constraint either
2012-09-07T05:31:14  <antimatroidl1> so my quesiton is waht's the most efficient way to do it?
2012-09-07T05:31:23  <mcstar> algorithmically?
2012-09-07T05:31:26  <thestinger> in C++?
2012-09-07T05:31:26  <antimatroidl1> and surely that's a problem people have looked at and has a name
2012-09-07T05:31:27  <antimatroidl1> yes
2012-09-07T05:31:35  <antimatroidl1> my friend and i are making a library
2012-09-07T05:31:38  <thestinger> std::set is a tree so stuff like intersections is super fast
2012-09-07T05:31:41  <mcstar> you use the ordering of the elements
2012-09-07T05:31:42  <thestinger> as long as it's an ordered set
2012-09-07T05:32:00  <mcstar> antimatroidl1: you traverse all the sets in ascending order
2012-09-07T05:32:07  <mcstar> i parallel
2012-09-07T05:32:10  <thestinger> unordered_set... would be terrible for actual set operations afaict
2012-09-07T05:32:10  <mcstar> basically, thats it
2012-09-07T05:32:21  <antimatroidl1> thestinger: they're ordered :)
2012-09-07T05:32:23  *** pairofdice <pairofdice!~pod@dsl-hkibrasgw2-fed3df00-232.dhcp.inet.fi> has joined #aichallenge
2012-09-07T05:32:49  <thestinger> would be nice if C++ had the same operator overloads python does for sets
2012-09-07T05:33:06  <mcstar> why?
2012-09-07T05:33:15  <thestinger> because they're intuitive
2012-09-07T05:33:15  <mcstar> an operator is just an ifix function
2012-09-07T05:33:20  <mcstar> infix*
2012-09-07T05:33:25  <thestinger> in haskell
2012-09-07T05:33:28  <thestinger> not so much in C++ :P
2012-09-07T05:33:29  <mcstar> :)
2012-09-07T05:33:43  <thestinger> you can overload the comma operator in C++...
2012-09-07T05:33:47  <antimatroidl1> thestinger: the idea is as follows, you have a set of sets, not all pairwise disjoint, you want to repeatedly take unions of non-pairwise disjoint sets until you have a set of pairwise disjoint sets
2012-09-07T05:34:43  <mcstar> antimatroidl1: so, thats basically, what i wrote in haskell?
2012-09-07T05:34:44  <thestinger> antimatroidl1: well doing unions is fast as hell :P
2012-09-07T05:35:02  <thestinger> and there are really efficient algorithms in the std lib already
2012-09-07T05:35:04  <antimatroidl1> https://gist.github.com/3664627
2012-09-07T05:35:07  <thestinger> http://en.cppreference.com/w/cpp/algorithm/set_union
2012-09-07T05:36:28  <mcstar> this is a kind of clustering problem
2012-09-07T05:36:58  <thestinger> antimatroidl1: how often do you actually make the original sets?
2012-09-07T05:37:00  <mcstar> antimatroidl1: do you actually know, that recursive algorithm i wrote is slow?
2012-09-07T05:37:28  <thestinger> antimatroidl1: using sorted vectors will be faster if you make all the original sets in advance
2012-09-07T05:37:29  <mcstar> i think he wants to enumerate a lot of them
2012-09-07T05:37:58  <thestinger> std::set is only better than a sorted vector if you add elements in between searches/deletes
2012-09-07T05:39:08  <thestinger> and std::set_union will work with (sorted) vectors
2012-09-07T05:39:31  <mcstar> i think what i wrote before, the ascending parallel traversal of the sets will be the best
2012-09-07T05:39:42  <mcstar> it can be tricky to actually write it in c++
2012-09-07T05:40:00  <thestinger> mcstar: of more than 2 sets?
2012-09-07T05:40:06  <mcstar> many more
2012-09-07T05:40:09  <mcstar> all of them at once
2012-09-07T05:40:53  <thestinger> so something like zipWith?
2012-09-07T05:40:58  <mcstar> i just wouldnt want to write it, until im sure, the algorithm i have now is actually slow
2012-09-07T05:41:03  <mcstar> thestinger: no
2012-09-07T05:41:10  <mcstar> that enumerates element by element
2012-09-07T05:41:28  <mcstar> i want to enumerate according to 'value'
2012-09-07T05:41:44  <mcstar> i have trouble explaining myself
2012-09-07T05:42:13  <mcstar> if there are 2 sets, for example, you dont enumerate them 1 by 1 in parallel
2012-09-07T05:42:24  *** Devnix <Devnix!52ea1ea7@gateway/web/freenode/ip.82.234.30.167> has joined #aichallenge
2012-09-07T05:42:26  <Devnix> Hi !
2012-09-07T05:42:35  <mcstar> but you do it, until the lowest element of one will be higher than the other's lowest
2012-09-07T05:42:37  <mcstar> and then change
2012-09-07T05:42:40  <mcstar> and then change
2012-09-07T05:42:50  <Devnix> Does someone know when will the next contest will be ? (and what will it be about ? :)
2012-09-07T05:42:55  <mcstar> so you are always at the lowest elements of all the sets at a given time
2012-09-07T05:43:09  <mcstar> because it will make union and chekcing of intersection easy
2012-09-07T05:43:17  <thestinger> well is the # of sets determined at runtime?
2012-09-07T05:43:22  <antimatroidl1> gah, sorry, brother arrived
2012-09-07T05:43:27  <antimatroidl1> he's gone now
2012-09-07T05:43:28  <mcstar> thestinger: yes, at runtime
2012-09-07T05:43:34  <thestinger> ah, then it's annoying
2012-09-07T05:43:35  <mcstar> when else?
2012-09-07T05:43:58  <mcstar> Devnix: no, sorry, undecided
2012-09-07T05:44:22  <antimatroidl1> thestinger: i don't care that much about speed, but i am interested in the algorithm to do it
2012-09-07T05:44:31  <antimatroidl1> it's already fast enough
2012-09-07T05:44:38  <thestinger> antimatroidl1: well if you need to take the union of 214 sets, you want to do what mcstar said
2012-09-07T05:44:53  <thestinger> iterate over 214 sorted sequences at the same time
2012-09-07T05:45:28  <thestinger> and just write out the results to a single vector
2012-09-07T05:45:35  <antimatroidl1> wait, you're discussing how to take the union of two sets right?
2012-09-07T05:45:40  <antimatroidl1> that's not what i'm interested in atm
2012-09-07T05:45:50  <mcstar> thestinger: it is more complicated than that, since you dont want to take the union if the sets dont have any intersection
2012-09-07T05:45:57  <mcstar> antimatroidl1: no
2012-09-07T05:46:18  <thestinger> mcstar: ah
2012-09-07T05:46:22  <mcstar> antimatroidl1: you are interested in the same algorithm that i showed you in haskell
2012-09-07T05:46:31  <antimatroidl1> i didn't understand your code
2012-09-07T05:46:36  <mcstar> yeah...
2012-09-07T05:46:37  <mcstar> :)
2012-09-07T05:46:38  <antimatroidl1> but i'm pretty sure i'm doing the equivalent thing
2012-09-07T05:47:51  <mcstar> antimatroidl1: have you changed the representation of your diagrams?
2012-09-07T05:48:00  <mcstar> you had a set per node, right?
2012-09-07T05:48:13  <mcstar> but i guess, you did
2012-09-07T05:48:14  <antimatroidl1> yeah
2012-09-07T05:48:16  <antimatroidl1> i changed it to edges
2012-09-07T05:48:47  *** Devnix <Devnix!52ea1ea7@gateway/web/freenode/ip.82.234.30.167> has quit IRC (Quit: Page closed)
2012-09-07T05:50:12  <antimatroidl1> i'm still running on ancient gcc, hence the lack of auto
2012-09-07T05:50:21  <thestinger> use clang.
2012-09-07T05:50:25  <thestinger> silly antimatroidl
2012-09-07T05:50:38  <antimatroidl1> nah, once i fix my wireless the laptop will go back in its case
2012-09-07T05:50:46  <mcstar> well, he is on slow internet
2012-09-07T05:51:03  <mcstar> and tight
2012-09-07T05:51:10  <thestinger> antimatroidl1: don't you already have clang? :P
2012-09-07T05:51:29  <antimatroidl1> not sure haa
2012-09-07T05:51:35  <mcstar> antimatroidl1: theres not much wrong with osx, as i said, you could just install gcc from macports
2012-09-07T05:51:39  <antimatroidl1> i'm not good with computor
2012-09-07T05:51:40  <mcstar> it is almost trivial
2012-09-07T05:51:48  <thestinger> antimatroidl1: just try clang instead of gcc
2012-09-07T05:51:52  <thestinger> same command syntax
2012-09-07T05:51:58  <antimatroidl1> i use code::blocks to compile
2012-09-07T05:52:26  <mcstar> thestinger: he would still need to build clang on osx
2012-09-07T05:52:39  <thestinger> mcstar: clang is essentially an apple project
2012-09-07T05:52:43  <mcstar> so?
2012-09-07T05:52:44  <thestinger> he can get a build
2012-09-07T05:52:48  <mcstar> it not like you have the latest
2012-09-07T05:52:50  <thestinger> it comes with their free tools
2012-09-07T05:52:56  <antimatroidl1> if i was going to spent time doing something, it'd be on fixing my wireless
2012-09-07T05:53:04  <mcstar> thats still possibly a big download
2012-09-07T05:53:36  <antimatroidl1> which i will probably do later tonight
2012-09-07T05:53:40  <antimatroidl1> hopefully aha
2012-09-07T05:53:43  <thestinger> http://itunes.apple.com/us/app/xcode/id497799835?ls=1&mt=12 :P
2012-09-07T05:53:48  <thestinger> Size: 1.46 GB
2012-09-07T05:53:57  <mcstar> start with properly blacklisting b43 :)
2012-09-07T05:53:57  <antimatroidl1> i have 20gb/m
2012-09-07T05:53:59  <antimatroidl1> no thanks
2012-09-07T05:54:02  <thestinger> I think they offer one without xcode
2012-09-07T05:54:29  <mcstar> antimatroidl1: whats the version of python you have instlaled?
2012-09-07T05:54:45  <antimatroidl1> 2.6.1
2012-09-07T05:55:04  <mcstar> not too terrible
2012-09-07T05:55:08  <thestinger> pretty terrible.
2012-09-07T05:55:11  <thestinger> should be 2.7.3
2012-09-07T05:55:18  <mcstar> its osx...
2012-09-07T05:55:22  <thestinger> still.
2012-09-07T05:55:27  <mcstar> thestinger: he has gcc 4.2
2012-09-07T05:55:33  <thestinger> that actually has a reason behind it
2012-09-07T05:55:41  <thestinger> they don't want any GPLv3 software shipped with it
2012-09-07T05:55:51  <mcstar> it is from xcode
2012-09-07T05:56:06  <mcstar> osx doesnt ship with gcc afaik
2012-09-07T05:56:19  <thestinger> mcstar: well if he has xcode he has clang
2012-09-07T05:56:31  <thestinger> xcode uses clang for completion, etc.
2012-09-07T05:56:34  <mcstar> but clang lagged behind gcc in c++11 support
2012-09-07T05:56:39  <thestinger> it's ahead now
2012-09-07T05:56:48  <thestinger> and it's more than gcc 4.2...
2012-09-07T05:56:49  <mcstar> so???
2012-09-07T05:56:52  <mcstar> what he has is not new
2012-09-07T05:57:00  <mcstar> quite old in fact
2012-09-07T05:57:02  <thestinger> newer than gcc from last decade :P
2012-09-07T05:57:22  <thestinger> xcode no longer comes with gcc apparently
2012-09-07T05:57:40  <mcstar> thestinger: anyway i recommended using python, but i was faced with strong opposition
2012-09-07T05:57:43  <mcstar> XD
2012-09-07T05:58:42  <mcstar> iirc he wrote map generators in python for ants
2012-09-07T06:01:13  <antimatroidl1> mcstar: only cause i had to for planet wars
2012-09-07T06:01:23  <antimatroidl1> the only programming i've done in python is map generators
2012-09-07T06:01:35  <mcstar> antimatroidl1: so, you didnt like it?
2012-09-07T06:01:37  <antimatroidl1> i understand c++, it works well for me :P
2012-09-07T06:01:40  <antimatroidl1> nope
2012-09-07T06:01:42  <thestinger> you understand C++?
2012-09-07T06:01:51  <antimatroidl1> i understand it well enough to do what i need to do
2012-09-07T06:01:56  <antimatroidl1> i don't understand c++
2012-09-07T06:02:03  <mcstar> antimatroidl1: did you fell good about, that you didnt need to compile your code to test?
2012-09-07T06:02:06  <mcstar> feel*
2012-09-07T06:02:17  <antimatroidl1> compiling is easy
2012-09-07T06:02:29  <antimatroidl1> i just hit a button in code::blocks and it compiles and runs
2012-09-07T06:02:37  <mcstar> maybe because im on a slow machine, i hate compilation
2012-09-07T06:03:03  <mcstar> ocaml is super fast to compile <3
2012-09-07T06:03:10  <mcstar> less than ass
2012-09-07T06:03:24  <thestinger> I really wish C and C++ didn't lack modules
2012-09-07T06:03:28  <thestinger> even clang compile time is awful
2012-09-07T06:07:22  *** antimatroidl1 <antimatroidl1!~Adium@49.102.dsl.mel.iprimus.net.au> has quit IRC (Ping timeout: 276 seconds)
2012-09-07T06:08:00  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-09-07T06:08:21  <mcstar> thestinger: i dont remember, did i tell you about a 'programmer benchmark' that i read a long time ago? i remember telling it here, but possibly you werent around
2012-09-07T06:08:28  <mcstar> even norving did the test
2012-09-07T06:08:35  <thestinger> don't remember
2012-09-07T06:08:45  <mcstar> let me find it, you will like it
2012-09-07T06:09:24  <aerique> sudoku solver?
2012-09-07T06:09:33  <mcstar> no
2012-09-07T06:09:37  <mcstar> thestinger: http://norvig.com/java-lisp.html
2012-09-07T06:09:44  <mcstar> dont read the code in black
2012-09-07T06:10:08  <mcstar> there are links to the original announcement
2012-09-07T06:10:23  <mcstar> they were trying to compare languages, like c++, java
2012-09-07T06:10:28  <thestinger> it's really fucking hard to write good C++
2012-09-07T06:10:55  <thestinger> I mean, I bet most C++ programmers can't write an equivalent to std::vector with exception-safe copy constructor, assignment and move constructor
2012-09-07T06:11:11  <mcstar> you dont have to
2012-09-07T06:11:17  <mcstar> thats what the experts are for
2012-09-07T06:11:20  <thestinger> you sometimes do need to write classes
2012-09-07T06:11:21  <mcstar> :)
2012-09-07T06:11:28  <thestinger> that manage resources
2012-09-07T06:11:54  <thestinger> for example, what if you need a (fast) ring buffer but don't want to use boost?
2012-09-07T06:12:04  <thestinger> you can't build it on std::vector
2012-09-07T06:12:11  <thestinger> you have to use a raw chunk of memory and placement new
2012-09-07T06:12:36  <mcstar> aerique: i think i told you about this ^^ didnt i?
2012-09-07T06:12:42  <thestinger> anyway fuck C++
2012-09-07T06:12:45  <mcstar> or maybe, it was on #lisp
2012-09-07T06:13:25  * thestinger anxiously awaits rust 0.4
2012-09-07T06:14:52  <mcstar> thestinger: http://www.flownet.com/ron/papers/lisp-java/ this is the problem description
2012-09-07T06:15:12  <mcstar> i did write the program in question
2012-09-07T06:15:16  <mcstar> though, i was pretty slow
2012-09-07T06:15:51  <thestinger> in which language?
2012-09-07T06:15:56  <mcstar> cl
2012-09-07T06:16:09  <aerique> mcstar: i've definitely seen those links before :)
2012-09-07T06:16:38  <thestinger> mcstar: by "slow" I interpret it as meaning you thought it through well and made something beautiful :P
2012-09-07T06:16:57  <mcstar> thestinger: no, it was harder than i expected
2012-09-07T06:17:06  <mcstar> i spent i think 7-8 hours on it
2012-09-07T06:17:11  <mcstar> it was more than a year ago
2012-09-07T06:17:18  <mcstar> when i was 'learning' lisp
2012-09-07T06:17:43  <mcstar> (quoatation marks is because, i obviously still dont know it)
2012-09-07T06:18:07  <thestinger> common lisp is pretty huge though, isn't it?
2012-09-07T06:18:16  <mcstar> well, yeah
2012-09-07T06:18:20  <thestinger> I should go through that remastered SICP
2012-09-07T06:18:23  <mcstar> but not that huge
2012-09-07T06:18:32  <mcstar> i mean there are parts that arent standardized but should have been
2012-09-07T06:18:58  <mcstar> and i think the process happened around 1984
2012-09-07T06:19:05  <mcstar> the language is basically the same since
2012-09-07T06:19:11  <aerique> 1984 to 1994 or so
2012-09-07T06:19:31  <mcstar> but cltl 2 is not implemented right?
2012-09-07T06:19:41  <mcstar> only parts of it
2012-09-07T06:20:42  <aerique> don't know, I don't think it is really relevant anymore.  With quicklisp and the abundance of libraries.
2012-09-07T06:23:18  <mcstar> aerique: well, it makes the task of library writer harder, to adapt to all major implementations
2012-09-07T06:23:42  <mcstar> if they have to do more work than they would have had to, then you see less libraries i think
2012-09-07T06:25:56  <aerique> mcstar: perhaps, but it seems easy enough to write libraries for CL currently and a lot of cross-implementation issues are caught by the trivial-* libraries
2012-09-07T06:27:06  *** kilae_ <kilae_!~chatzilla@109.205.205.99> has joined #aichallenge
2012-09-07T06:27:06  <mcstar> thestinger: http://www.lispworks.com/documentation/HyperSpec/Body/m_defset.htm
2012-09-07T06:27:10  <aerique> mcstar: perhaps SBCL will become a leading implementation that will innovate at some point and that others will have to follow
2012-09-07T06:27:14  <mcstar> this is clhs, the documentation
2012-09-07T06:27:27  <mcstar> quite thorough, and has a vocubulary of its own
2012-09-07T06:27:48  <mcstar> aerique: :) maybe
2012-09-07T06:27:51  *** replore <replore!~replore@EM117-55-65-134.emobile.ad.jp> has joined #aichallenge
2012-09-07T06:28:03  <mcstar> it is certainly cheap
2012-09-07T06:30:07  *** kilae <kilae!~chatzilla@109.205.205.99> has quit IRC (Ping timeout: 256 seconds)
2012-09-07T06:30:45  *** Scooper <Scooper!~Scooper@213.157.251.212.customer.cdi.no> has joined #aichallenge
2012-09-07T06:31:34  <mcstar> yay, i found mine
2012-09-07T06:33:13  <mcstar> third of norvig's solution are comments
2012-09-07T06:33:35  <mcstar> thestinger: will you accept the challenge/
2012-09-07T06:33:36  <mcstar> ?
2012-09-07T06:33:42  <thestinger> too lazy
2012-09-07T06:33:46  <mcstar> haha
2012-09-07T06:33:47  <thestinger> maybe another day
2012-09-07T06:33:50  <mcstar> you could use python
2012-09-07T06:33:55  <thestinger> it's 6:30am
2012-09-07T06:33:57  <thestinger> i didn't sleep :P
2012-09-07T06:34:00  <thestinger> it's a bad day to do it
2012-09-07T06:34:03  <mcstar> oh
2012-09-07T06:34:07  <mcstar> whats wrong with you?
2012-09-07T06:34:10  <thestinger> I have to drive to my dentist's office at 9am
2012-09-07T06:34:24  <mcstar> wo any sleep?
2012-09-07T06:34:36  <thestinger> yep
2012-09-07T06:34:46  <thestinger> don't worry I'll try not to kill too many people
2012-09-07T06:34:53  <mcstar> or yourself
2012-09-07T06:35:47  <thestinger> at least I'd get some sleep
2012-09-07T06:35:59  <mcstar> a long one
2012-09-07T06:36:11  <thestinger> inevitable anyway
2012-09-07T06:36:11  <mcstar> i have to go water the garden
2012-09-07T06:36:20  <thestinger> mcstar: you have a garden? :0
2012-09-07T06:36:25  <thestinger> are there tomatoes?
2012-09-07T06:36:42  <mcstar> yes
2012-09-07T06:36:50  <mcstar> and a lot of other vegetables
2012-09-07T06:36:59  <mcstar> though, its the end of the season
2012-09-07T06:37:16  <thestinger> nom nom cherry tomatoes
2012-09-07T06:37:33  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has quit IRC (Ping timeout: 268 seconds)
2012-09-07T06:37:36  <mcstar> :)
2012-09-07T06:37:50  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-09-07T06:44:52  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has quit IRC (Read error: Connection reset by peer)
2012-09-07T06:45:05  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-09-07T07:02:09  *** replore <replore!~replore@EM117-55-65-134.emobile.ad.jp> has quit IRC (Remote host closed the connection)
2012-09-07T07:10:19  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has quit IRC (Quit: nap)
2012-09-07T07:25:56  *** Scooper <Scooper!~Scooper@213.157.251.212.customer.cdi.no> has quit IRC (Remote host closed the connection)
2012-09-07T07:26:36  *** Scooper <Scooper!~Scooper@213.157.251.212.customer.cdi.no> has joined #aichallenge
2012-09-07T07:34:58  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has joined #aichallenge
2012-09-07T07:35:53  *** antimatroidl <antimatroidl!~Adium@49.102.dsl.mel.iprimus.net.au> has quit IRC (Ping timeout: 252 seconds)
2012-09-07T07:43:42  *** antimatroidl <antimatroidl!~Adium@147.215-50-210.dynamic.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-09-07T07:46:02  *** Garf <Garf!~Garf@78-22-80-252.access.telenet.be> has quit IRC (Quit: Make a new plan, Stan!)
2012-09-07T07:46:13  *** Icebone1000 <Icebone1000!bb6b23d5@gateway/web/freenode/ip.187.107.35.213> has joined #aichallenge
2012-09-07T07:46:36  <Icebone1000> anyone can give me a tip?
2012-09-07T07:47:36  <Icebone1000> how do you keep track of your ants? lets say I computed a path with a*, how do I know whats the ant from previous turn that I need to keep in that path?
2012-09-07T07:48:29  <antimatroidl> Icebone1000: i recalculated everything each turn
2012-09-07T07:48:39  <antimatroidl> too much can change in one turn for me to want to retain information
2012-09-07T07:49:12  <Icebone1000> wow, I was afraid that was the answer...but an a* per turn per ant, doesnt that is dangerous (theres a time limit)
2012-09-07T07:50:31  <antimatroidl> i don't think i ended up using a*
2012-09-07T07:50:40  <antimatroidl> i would often just bfs from targets to ants
2012-09-07T07:50:57  <Icebone1000> i was thinking in calculating a path with a*, only for the ants that stayed in the same pos for 2 turns ( means it is stuck against a wall)..
2012-09-07T07:51:03  <antimatroidl> you can do a* with multiple targets and multiple sources
2012-09-07T07:51:08  <antimatroidl> but it's not very nice or efficient
2012-09-07T07:51:24  <Icebone1000> isnt a* cheaper?
2012-09-07T07:51:38  <antimatroidl> i can't remember the specifics
2012-09-07T07:51:43  <antimatroidl> but most people found it wasn't worth it
2012-09-07T07:51:50  <antimatroidl> a bfs is pretty fast
2012-09-07T07:52:03  <antimatroidl> it gets more difficult when the dimensions get closer to 200x200
2012-09-07T07:52:05  <Icebone1000> bfs will look everything, a* use a heuristic to go more straight in the right path'
2012-09-07T07:52:08  <antimatroidl> i tested my bot on maps up to that
2012-09-07T07:52:28  <antimatroidl> yes, but there's overhead to using a* and it's difficult to assign targets
2012-09-07T07:52:53  <Icebone1000> why you do it from target, and not from ants?
2012-09-07T07:53:55  <antimatroidl> you then know which direction to move the ant when you find it, rather than having to store that information
2012-09-07T07:54:12  <antimatroidl> and the number of ants vs the number of targets can be quite different
2012-09-07T07:54:24  <antimatroidl> i would bfs from multiple sources and move a target as i find it
2012-09-07T07:54:41  <antimatroidl> then bfs again from the remaining targets (you have to start the search over)
2012-09-07T07:54:58  <antimatroidl> i'm not positive everything i'm saying is correct, i haven't played with this stuff in a while
2012-09-07T07:56:25  <Icebone1000> "you then know which direction to move the ant when you find it, rather than having to store that information"-> would you explain more? I dont have vision enough to understand why that
2012-09-07T07:57:06  <antimatroidl> say you search target to ant, when you find an ant, just move it into the square you just found it from
2012-09-07T07:57:23  <antimatroidl> if you search ant to target, then when you find a target you have to remember which direction you moved to find it
2012-09-07T07:59:48  <Icebone1000> why the same dont apply to the ant to target? is it a bfs feature Im not aware?
2012-09-07T08:04:51  <mcstar> the position of food items dont change, but the position of the ants change every turn, if you search from food to ants, you can use the same distance map from the previous turn
2012-09-07T08:05:27  <antimatroidl> mcstar: shit
2012-09-07T08:05:35  <antimatroidl> i could have used that, you can just update from new food too
2012-09-07T08:05:42  <mcstar> :)
2012-09-07T08:05:50  <antimatroidl> although removing old info from removed food might be a little tricky
2012-09-07T08:06:12  <mcstar> yeah, path finding wasnt a big part of Ants
2012-09-07T08:06:17  <mcstar> you just had to get it right
2012-09-07T08:06:33  <mcstar> in compiled languages speed wasnt an issua
2012-09-07T08:06:36  <mcstar> e*
2012-09-07T08:06:43  <mcstar> not like with the tree search...
2012-09-07T08:07:00  <antimatroidl> trees are insane
2012-09-07T08:08:02  <pairofdice> Now I want to go back to ants :|
2012-09-07T08:08:26  <pairofdice> And fix my stupid stupid code
2012-09-07T08:09:09  <Icebone1000> I got the c# starter, and now closer ants to food tiles go straight to it, ants that are not asigned food task, move in the first free direction(like in the starter), now cames the pathfinding..,
2012-09-07T08:11:44  <mcstar> ah, i remember now what i wanted to say
2012-09-07T08:11:59  <mcstar> theres a good reason for using bfs instead of a*
2012-09-07T08:12:08  <mcstar> a* is for point-to-point search
2012-09-07T08:12:19  <pairofdice> bfs you can use the one search for all ants
2012-09-07T08:12:22  <mcstar> but thats not too good for searching for multiple targets
2012-09-07T08:12:23  <pairofdice> Not so for a*
2012-09-07T08:12:26  <mcstar> of a criterion
2012-09-07T08:12:46  <mcstar> but with bfs, you can stop the search once you found something interesting
2012-09-07T08:13:02  <mcstar> of->or
2012-09-07T08:13:49  <mcstar> pairofdice: you could just make a shortest-distance cell-map of food items, but that doesnt give you optimality
2012-09-07T08:13:50  <Icebone1000> lots of good info
2012-09-07T08:13:51  <pairofdice> Oh, when a food item finds an ant, stop the bfs from that food but continue from others
2012-09-07T08:14:51  <mcstar> distributing the ants for targets, when you actually know the path-length of stuff is the problem
2012-09-07T08:14:51  <Icebone1000> you mean bfs with multiple start points?
2012-09-07T08:15:03  <mcstar> this can be solved with the hungarian method
2012-09-07T08:15:05  <mcstar> which i used a lot
2012-09-07T08:15:16  <pairofdice> Just add all the foods as the what was the word
2012-09-07T08:15:19  <mcstar> Icebone1000: yeah, thats trivial, but not optimal
2012-09-07T08:15:55  <mcstar> basically, at the end i moved all my ants with this optimization algorithm
2012-09-07T08:16:10  <pairofdice> Yeah, my distribution sucked majorly
2012-09-07T08:16:22  <pairofdice> I want to fix it
2012-09-07T08:16:32  <mcstar> my downfall was that at the very end i made my ants more agressive by replacing my tree search with a heuristic
2012-09-07T08:17:03  <mcstar> (making them agressive was a good thing, but the heuristic kept losing a lot of ants..)
2012-09-07T08:21:03  <Icebone1000> when doing bfs with multiple start points(food tiles), how do you know from witch food tile you sending the ant you found? I dont get how it would work, compared with separated bfs. You have 2 start points, are they tottaly independent or tottaly mixed together?
2012-09-07T08:21:51  <mcstar> imagine the food items on an empty map
2012-09-07T08:22:06  <mcstar> now imagine, that you write down a number on every tile
2012-09-07T08:22:18  <mcstar> this number is the steps from the closest food item to that particular tile
2012-09-07T08:22:43  <mcstar> if you do a bfs from all the food items at once, and you fill the map, what i said will be the result
2012-09-07T08:23:23  <mcstar> now i have to call me e-bank, cause i forgot my password again
2012-09-07T08:23:28  <mcstar> my*
2012-09-07T08:23:42  <Icebone1000> thanks for the help
2012-09-07T08:24:05  <Icebone1000> although I dont get the last part yet ¦D
2012-09-07T08:25:13  <mcstar> bfs enumerates the tiles from the targets in increasing order of length
2012-09-07T08:25:24  <mcstar> do you see this?
2012-09-07T08:25:39  <Icebone1000> if you have 2 start points, you will have 2 numbers on each tile @.@
2012-09-07T08:26:07  <Icebone1000> yes
2012-09-07T08:26:08  <mcstar> no
2012-09-07T08:26:28  <Icebone1000> how can that be
2012-09-07T08:26:33  <mcstar> phone
2012-09-07T08:26:51  <Icebone1000> explains everything..lol
2012-09-07T08:31:10  * pairofdice looks into hungarian method
2012-09-07T08:31:50  <pairofdice> Umm, not while cooking
2012-09-07T08:56:47  *** Icebone1000 <Icebone1000!bb6b23d5@gateway/web/freenode/ip.187.107.35.213> has quit IRC (Ping timeout: 245 seconds)
2012-09-07T08:58:57  *** kilae <kilae!~chatzilla@109.205.205.99> has joined #aichallenge
2012-09-07T09:01:36  *** kilae_ <kilae_!~chatzilla@109.205.205.99> has quit IRC (Ping timeout: 240 seconds)
2012-09-07T09:53:45  *** kilae_ <kilae_!~chatzilla@109.205.205.99> has joined #aichallenge
2012-09-07T09:57:20  *** kilae <kilae!~chatzilla@109.205.205.99> has quit IRC (Ping timeout: 268 seconds)
2012-09-07T10:17:52  *** contestbot <contestbot!~supybot@aichallenge/bot/contestbot> has joined #aichallenge
2012-09-07T10:17:52  *** ChanServ sets mode: +o contestbot
2012-09-07T10:28:47  *** mceier <mceier!~mceier@77-252-246-25.ip.netia.com.pl> has quit IRC (Quit: leaving)
2012-09-07T10:34:26  *** Areks <Areks!~Areks@rs.gridnine.com> has quit IRC (Ping timeout: 272 seconds)
2012-09-07T11:07:54  *** monstaokki <monstaokki!~falko@dslb-178-000-166-010.pools.arcor-ip.net> has joined #aichallenge
2012-09-07T11:35:46  *** mceier <mceier!~mceier@89-77-239-61.dynamic.chello.pl> has joined #aichallenge
2012-09-07T11:56:52  *** Icebone1000 <Icebone1000!bb6b23d5@gateway/web/freenode/ip.187.107.35.213> has joined #aichallenge
2012-09-07T11:57:11  <Icebone1000> yo
2012-09-07T12:01:41  *** monstaokki <monstaokki!~falko@dslb-178-000-166-010.pools.arcor-ip.net> has left #aichallenge
2012-09-07T12:09:12  *** replore <replore!~replore@FLH1Ahd118.kng.mesh.ad.jp> has joined #aichallenge
2012-09-07T12:13:14  <mcstar> waiting for something?
2012-09-07T12:16:02  *** epicmonkey_ <epicmonkey_!~epicmonke@host-224-60.dataart.net> has quit IRC (Ping timeout: 246 seconds)
2012-09-07T12:21:05  <mcstar> firefox crashed when i tried to change gmail's listing mode
2012-09-07T12:37:33  <mcstar> pairofdice: i have to admit, i never went as far as implementing it
2012-09-07T12:37:50  <mcstar> i think i should though, it is interesting
2012-09-07T12:46:23  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has quit IRC (Remote host closed the connection)
2012-09-07T12:46:29  *** kilae <kilae!~chatzilla@109.205.205.99> has joined #aichallenge
2012-09-07T12:48:59  *** kilae_ <kilae_!~chatzilla@109.205.205.99> has quit IRC (Ping timeout: 240 seconds)
2012-09-07T13:04:17  *** Icebone1000 <Icebone1000!bb6b23d5@gateway/web/freenode/ip.187.107.35.213> has quit IRC (Ping timeout: 245 seconds)
2012-09-07T13:25:32  *** mviel <mviel!~mviel@LNantes-156-75-13-22.w82-127.abo.wanadoo.fr> has quit IRC (Quit: Leaving)
2012-09-07T13:25:42  *** foRei <foRei!~ViT@0x4dd7b24d.adsl.cybercity.dk> has joined #aichallenge
2012-09-07T13:32:39  *** pairofdice <pairofdice!~pod@dsl-hkibrasgw2-fed3df00-232.dhcp.inet.fi> has quit IRC (Quit: In girum imus nocte et consumimur igni.)
2012-09-07T13:36:21  *** kilae <kilae!~chatzilla@109.205.205.99> has quit IRC (Quit: ChatZilla 0.9.88.2 [Firefox 15.0/20120824154833])
2012-09-07T14:01:38  *** SJRvanSchaik <SJRvanSchaik!~SJRvanSch@ip73-230-174-82.adsl2.static.versatel.nl> has quit IRC (Ping timeout: 246 seconds)
2012-09-07T14:02:29  *** CIA-54 <CIA-54!cia@cia.vc> has quit IRC (Ping timeout: 244 seconds)
2012-09-07T14:08:14  *** amstan <amstan!~alex@aichallenge/admin/amstan> has joined #aichallenge
2012-09-07T14:08:14  *** ChanServ sets mode: +o amstan
2012-09-07T14:09:19  *** amstan <amstan!~alex@aichallenge/admin/amstan> has quit IRC (Client Quit)
2012-09-07T14:22:54  *** CIA-54 <CIA-54!cia@cia.vc> has joined #aichallenge
2012-09-07T14:53:01  *** t <t!480cc918@gateway/web/freenode/ip.72.12.201.24> has joined #aichallenge
2012-09-07T14:53:25  *** t is now known as Guest68617
2012-09-07T14:54:35  *** Guest68617 <Guest68617!480cc918@gateway/web/freenode/ip.72.12.201.24> has quit IRC (Client Quit)
2012-09-07T14:59:53  <mcstar> antimatroidl: are you there?\
2012-09-07T15:06:12  <antimatroidl> i am
2012-09-07T15:06:59  <mcstar> antimatroidl: i had an idea on your set merge
2012-09-07T15:07:17  <antimatroidl> ..
2012-09-07T15:07:30  <mcstar> i just gave it a bit of thought before i implement my matching stuff
2012-09-07T15:07:36  <mcstar> and i think it is efficent
2012-09-07T15:07:40  <mcstar> efficient
2012-09-07T15:07:51  <mcstar> anyway, ill do it in some language
2012-09-07T15:08:06  <mcstar> after i have it, ill tell you the algorithm, ok?
2012-09-07T15:08:21  <mcstar> antimatroidl: is python ok?
2012-09-07T15:08:28  <mcstar> i mean, can you read it?
2012-09-07T15:08:54  <mcstar> i dont want to use c++, and you dont want to read haskell, so, i thought maybe python
2012-09-07T15:13:10  <mcstar> antimatroidl: ill have to use c++, i want doubly linked lists
2012-09-07T15:13:17  <mcstar> stl has them, right?
2012-09-07T15:13:59  <antimatroidl> bah sorry
2012-09-07T15:14:01  <antimatroidl> reading
2012-09-07T15:14:29  <antimatroidl> mcstar: i rekon they would
2012-09-07T15:14:35  <mcstar> ok
2012-09-07T15:21:57  *** replore <replore!~replore@FLH1Ahd118.kng.mesh.ad.jp> has quit IRC (Remote host closed the connection)
2012-09-07T15:27:39  *** age <age!b2cbc212@gateway/web/freenode/ip.178.203.194.18> has joined #aichallenge
2012-09-07T15:27:47  <age> hi there
2012-09-07T15:28:02  *** age is now known as Guest19315
2012-09-07T15:28:29  <Guest19315> any news on the next contest? <3
2012-09-07T15:33:35  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has joined #aichallenge
2012-09-07T15:33:36  <mcstar> unfortunately no
2012-09-07T15:34:12  <Guest19315> okay, thank you :)
2012-09-07T15:36:01  <Guest19315> i am totally looking forward to the next one.
2012-09-07T15:36:20  <mcstar> yeah, a lot of ppl are
2012-09-07T15:59:49  *** epicmonkey_ <epicmonkey_!~epicmonke@188.134.41.211> has joined #aichallenge
2012-09-07T16:00:43  *** Accoun <Accoun!~1@static-213-88-39-97.chebnet.ru> has quit IRC ()
2012-09-07T16:12:43  *** Accoun <Accoun!~1@static-213-88-39-97.chebnet.ru> has joined #aichallenge
2012-09-07T16:32:31  *** replore <replore!~replore@FLH1Ahd118.kng.mesh.ad.jp> has joined #aichallenge
2012-09-07T16:36:56  *** replore <replore!~replore@FLH1Ahd118.kng.mesh.ad.jp> has quit IRC (Ping timeout: 240 seconds)
2012-09-07T16:47:20  <mcstar> how much i hate c++
2012-09-07T16:48:21  *** epicmonkey_ <epicmonkey_!~epicmonke@188.134.41.211> has quit IRC (Ping timeout: 246 seconds)
2012-09-07T16:49:36  <mcstar> omg
2012-09-07T16:49:52  <mcstar> i had several pages of error because of a wrong variable name
2012-09-07T16:53:54  <antimatroidl> :)
2012-09-07T16:55:42  <thestinger> mcstar: try using expression templates
2012-09-07T16:55:48  <thestinger> watch the error size reach 600KiB
2012-09-07T16:55:59  <mcstar> no thanks
2012-09-07T16:56:34  <thestinger> mcstar: http://www.boost.org/doc/libs/1_51_0/libs/phoenix/doc/html/phoenix/modules/statement.html this crap was all done before C++11 added lambdas
2012-09-07T16:56:45  <thestinger> and the sad part is, it's still better in many ways (because they are polymorphic)
2012-09-07T16:56:59  <thestinger> they just have their own statements, etc.
2012-09-07T16:57:03  <thestinger> that are really template hackery
2012-09-07T16:57:06  *** Guest19315 <Guest19315!b2cbc212@gateway/web/freenode/ip.178.203.194.18> has quit IRC (Quit: Page closed)
2012-09-07T16:57:19  <thestinger> if_(condition) [ ]
2012-09-07T16:57:46  <thestinger> for(a, b, c) [], takes an enormous amount of hacks
2012-09-07T16:57:51  <thestinger> overloaded comma operator
2012-09-07T16:57:58  <mcstar> i dont understand
2012-09-07T16:58:05  <mcstar> is that a macro system?
2012-09-07T16:58:09  <thestinger> mcstar: no, templates
2012-09-07T16:58:18  <thestinger> mcstar: they use functions, operator overloads, etc.
2012-09-07T16:58:25  <thestinger> it's called expression templates
2012-09-07T16:58:35  <mcstar> so, if_ is some class with [] overloaded?
2012-09-07T16:58:48  <thestinger> well, a function I think
2012-09-07T16:58:54  <mcstar> anyway, back to what i was doing
2012-09-07T16:58:55  <thestinger> and it returns a class with [] overloaded
2012-09-07T16:59:01  <mcstar> this is horrible enough, really
2012-09-07T16:59:09  <thestinger> so if the condition is false, it doesn't run the stuff in []
2012-09-07T16:59:18  <mcstar> great
2012-09-07T16:59:21  <mcstar> im impressed
2012-09-07T16:59:25  <mcstar> (no, im not)
2012-09-07T16:59:52  <thestinger> but it let people use closures without nested class boilerplate before C++11
2012-09-07T16:59:52  <mcstar> thestinger: did the dentist pull your tooth?
2012-09-07T16:59:56  <thestinger> no :P
2012-09-07T17:00:09  <thestinger> I've never had a cavity
2012-09-07T17:00:16  <mcstar> i had never been to a dentist
2012-09-07T17:00:47  <mcstar> but i think i have at least 1 cavity
2012-09-07T17:10:17  <mcstar> antimatroidl: ok, i have it, but it isnt tested
2012-09-07T17:11:04  <mcstar> antimatroidl: should i add inline comments, or is it enough to just describe the alg?
2012-09-07T17:11:18  <antimatroidl> mcstar: why not go to a dentist?
2012-09-07T17:11:24  <antimatroidl> my uncle is a dentist, i've been all my life
2012-09-07T17:11:36  <mcstar> i havent had problems with my teeth
2012-09-07T17:11:47  <antimatroidl> check ups?
2012-09-07T17:11:50  <mcstar> no
2012-09-07T17:12:05  <mcstar> i know i have 1 cavity, but it doesnt bother me
2012-09-07T17:12:10  <mcstar> and doesnt seem to grow
2012-09-07T17:12:15  <thestinger> until you get a blood infection and die
2012-09-07T17:12:22  <mcstar> idk, ill go when i will have money
2012-09-07T17:12:32  <mcstar> currently, uni just took all my money
2012-09-07T17:12:35  <thestinger> it's not covered here under government health care
2012-09-07T17:12:40  <mcstar> im quite literally broke
2012-09-07T17:12:46  <antimatroidl> yeah fair enough
2012-09-07T17:13:20  <antimatroidl> "get a job" /trollface :)
2012-09-07T17:13:55  <thestinger> "be born wealthy"
2012-09-07T17:14:03  <antimatroidl> gina reinhart's advice
2012-09-07T17:14:03  <thestinger> ^ correct solution
2012-09-07T17:14:24  <mcstar> i think i can work again for that firm i did previously
2012-09-07T17:14:31  <mcstar> http://hpaste.org/74423
2012-09-07T17:15:14  <mcstar> i think ill just describe what it does, or supposed to
2012-09-07T17:15:35  <mcstar> i will use list even for vectors
2012-09-07T17:15:48  <mcstar> obviously, it has implications, but makes the description simpler
2012-09-07T17:16:05  <mcstar> so, you have a list of list of nodes
2012-09-07T17:16:34  <mcstar> now, lets suppose, that you already did the U -> M, L -> M conversions
2012-09-07T17:17:38  <mcstar> you traverse all the sets, and if a node is M, you make a mark in a vector for that particular index, that the node carries
2012-09-07T17:17:46  <mcstar> this is the lattice index of the node
2012-09-07T17:18:23  <mcstar> if the vector had 0 for that index, it means, you havent encountered a set before, that had that lattice idnex
2012-09-07T17:18:30  <mcstar> so you just set it
2012-09-07T17:19:14  <mcstar> if it is different from 0, you will use that set index, that you found for that lattice index, and will use that for all the nodes that remain in the set you were iterating over
2012-09-07T17:19:39  <mcstar> this way, you actually take the unions of sets that have any intersection
2012-09-07T17:20:03  <antimatroidl> hmmm okay
2012-09-07T17:20:09  <mcstar> no, not really
2012-09-07T17:20:09  <antimatroidl> i think i follow that
2012-09-07T17:20:13  <mcstar> i forgot something
2012-09-07T17:20:28  <mcstar> no
2012-09-07T17:20:30  <mcstar> no, its ok
2012-09-07T17:20:40  <mcstar> i remember now, that i covered an edge case
2012-09-07T17:20:58  <mcstar> first i thought, you have to reiterate over the elements of that set
2012-09-07T17:21:04  <mcstar> to correct the numbers
2012-09-07T17:21:08  <mcstar> but you dont have to
2012-09-07T17:21:10  <mcstar> thats the trick
2012-09-07T17:21:39  <mcstar> wait
2012-09-07T17:21:48  <mcstar> i havent thought this through completely
2012-09-07T17:22:27  <mcstar> yeah, ok, you have to correct for it
2012-09-07T17:22:58  <mcstar> all in all, i think this would be efficient, since you dont have to do too much extra work
2012-09-07T17:23:14  <mcstar> but it would look ugly
2012-09-07T17:24:06  <mcstar> anyway, in the end, you have this lattice index -> set index correspondence
2012-09-07T17:24:37  <mcstar> and the update will guarantee, that a lattice index will only belong to 1 set
2012-09-07T17:24:56  <mcstar> and all the sets, that had common elelments will have the same index
2012-09-07T17:25:46  <mcstar> so, you can recreate the unions, from this association vector or whatever
2012-09-07T17:26:04  <mcstar> actually, thats the part i wanted to use a doubly linked, as in the implementation
2012-09-07T17:26:44  <mcstar> so you can delete the elelemnts of a given index, when you build the unions, so you can traverse a shrinking list
2012-09-07T17:27:53  <mcstar> in the beginning, i add those sets to the output set, that had no M elements after the conversion
2012-09-07T17:28:10  <mcstar> because those wouldnt show up in the algorithm, and they would be lost
2012-09-07T17:32:22  <antimatroidl> it's 7:30am but i'll play around with that at some point
2012-09-07T17:32:48  <mcstar> antimatroidl: ill go to sleep very soon
2012-09-07T17:32:56  <mcstar> if you have a question ask now
2012-09-07T17:33:01  <mcstar> i think i see the algorithm now
2012-09-07T17:33:14  <mcstar> but i dont want to correctly do it in c++ :)
2012-09-07T17:33:22  <antimatroidl> i'd have to get my hands dirty to have question
2012-09-07T17:33:32  <antimatroidl> but thanks :)
2012-09-07T17:33:36  <mcstar> ok
2012-09-07T17:52:39  <thestinger> mcstar: do it in C :P
2012-09-07T17:52:48  <thestinger> implemented your own rbtree for starters
2012-09-07T17:53:22  <mcstar> C is for flipping bit in hardware
2012-09-07T17:53:25  <mcstar> btis*
2012-09-07T17:53:28  <mcstar> bits*
2012-09-07T17:54:04  <mcstar> thestinger: look at all the successfull operating system written in object oriented languages
2012-09-07T17:54:09  <mcstar> s
2012-09-07T17:54:25  <thestinger> mcstar: there's no reason you can't write an OS with C++
2012-09-07T17:54:48  <mcstar> beos is full oo
2012-09-07T17:54:59  <thestinger> haiku! :P
2012-09-07T17:55:00  <mcstar> and c++
2012-09-07T17:55:04  <mcstar> yeah
2012-09-07T17:55:20  <thestinger> the linux kernel uses tons of manual virtual functions
2012-09-07T17:55:33  <thestinger> it would be *faster* to use the C++ virtual functions because they are optimized better
2012-09-07T17:55:38  <mcstar> still, sir linus cant stand c++
2012-09-07T17:56:00  <thestinger> I think linus just likes trolling people on mailing lists.
2012-09-07T17:56:24  <mcstar> actually, i think his 'only c' opinion is quite string
2012-09-07T17:56:26  <mcstar> strong*
2012-09-07T17:56:47  <mcstar> probably there are a lot of lousy programmers writing really bad c++ out there
2012-09-07T17:56:51  <mcstar> and he met them..
2012-09-07T17:56:54  <thestinger> there are
2012-09-07T17:56:58  <thestinger> C++ is a huge, terrible language
2012-09-07T17:57:13  <thestinger> C is a terrible language too, but at least it's incredibly small by comparison
2012-09-07T17:57:26  <thestinger> but they recreate a ton of those C++ idioms *in C* anyway
2012-09-07T17:57:35  <thestinger> they even have hacks like their own static assert
2012-09-07T17:58:19  <mcstar> thestinger: do you know greenspun's tenth rule?
2012-09-07T17:58:39  <thestinger> oh right
2012-09-07T17:58:44  <thestinger> mcstar: yes, but not by name
2012-09-07T17:59:56  <mcstar> lol, im tempted to use a goto here..
2012-09-07T18:02:47  <thestinger> goto is perfectly idiomatic in actual C :P
2012-09-07T18:02:59  <thestinger> you use it to implement the equivalent to raii
2012-09-07T18:03:26  <thestinger> call cleanup functions in reverse order (as popping off the stack) at the end, and use labels to jump to the right point instead of just return
2012-09-07T18:03:32  <thestinger> as if popping*
2012-09-07T18:03:45  <thestinger> using it for breaking out of nested loops is fine too
2012-09-07T18:04:00  <thestinger> just only go down, and don't jump pass variable initializations/declarations
2012-09-07T18:04:17  <mcstar> past
2012-09-07T18:18:42  *** coeus <coeus!~coeus@dslb-084-061-007-020.pools.arcor-ip.net> has joined #aichallenge
2012-09-07T18:38:33  <mcstar> antimatroidl: http://hpaste.org/74425 this  is a better version, it loops for some reason, im too tired to figure it out, but conceptually it is better than the first
2012-09-07T18:38:38  <mcstar> gn
2012-09-07T18:38:40  *** mcstar <mcstar!~mcstar@adsl-89-134-6-90.monradsl.monornet.hu> has quit IRC (Quit: mcstar)
2012-09-07T19:09:20  *** Scooper <Scooper!~Scooper@213.157.251.212.customer.cdi.no> has quit IRC (Quit: Leaving)
2012-09-07T19:11:33  *** foRei <foRei!~ViT@0x4dd7b24d.adsl.cybercity.dk> has quit IRC (Quit: Bye)
2012-09-07T19:18:47  *** amstan <amstan!~alex@aichallenge/admin/amstan> has joined #aichallenge
2012-09-07T19:18:47  *** ChanServ sets mode: +o amstan
2012-09-07T19:26:33  *** cyphase <cyphase!~cyphase@unaffiliated/cyphase> has quit IRC (Ping timeout: 268 seconds)
2012-09-07T19:37:03  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has joined #aichallenge
2012-09-07T19:37:17  *** cyphase <cyphase!~cyphase@unaffiliated/cyphase> has joined #aichallenge
2012-09-07T20:34:48  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has quit IRC (Ping timeout: 246 seconds)
2012-09-07T20:35:29  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has joined #aichallenge
2012-09-07T20:42:22  *** replore_ <replore_!~replore@FLH1Ahd118.kng.mesh.ad.jp> has joined #aichallenge
2012-09-07T21:03:59  *** replore_ <replore_!~replore@FLH1Ahd118.kng.mesh.ad.jp> has quit IRC (Remote host closed the connection)
2012-09-07T21:49:59  *** coeus <coeus!~coeus@dslb-084-061-007-020.pools.arcor-ip.net> has quit IRC (Ping timeout: 252 seconds)
2012-09-07T21:56:06  *** antimatroidl <antimatroidl!~Adium@147.215-50-210.dynamic.dsl.mel.iprimus.net.au> has quit IRC (Ping timeout: 252 seconds)
2012-09-07T22:02:24  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has quit IRC (Quit: WeeChat 0.3.9-rc1)
2012-09-07T22:02:38  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has joined #aichallenge
2012-09-07T22:42:32  *** replore <replore!~replore@FLH1Ahd118.kng.mesh.ad.jp> has joined #aichallenge
2012-09-07T23:01:34  *** replore <replore!~replore@FLH1Ahd118.kng.mesh.ad.jp> has quit IRC (Remote host closed the connection)
2012-09-07T23:07:58  *** replore <replore!~replore@FLH1Ahd118.kng.mesh.ad.jp> has joined #aichallenge
2012-09-07T23:27:43  *** replore <replore!~replore@FLH1Ahd118.kng.mesh.ad.jp> has quit IRC (Remote host closed the connection)
2012-09-07T23:36:02  *** antimatroidl <antimatroidl!~Adium@147.215-50-210.dynamic.dsl.mel.iprimus.net.au> has joined #aichallenge
