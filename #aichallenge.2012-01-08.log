2012-01-08T00:03:09  *** grc48 <grc48!~grc48@CPE-58-172-41-80.wqcz1.ken.bigpond.net.au> has joined #aichallenge
2012-01-08T00:19:45  *** dorisabayon <dorisabayon!~Fandekasp@KD182249003193.au-net.ne.jp> has joined #aichallenge
2012-01-08T00:21:27  *** u_ <u_!~u_@adsl-75-57-162-84.dsl.emhril.sbcglobal.net> has quit IRC (Quit: u_)
2012-01-08T00:22:48  *** Fandekasp <Fandekasp!~Fandekasp@KD182249005002.au-net.ne.jp> has quit IRC (Ping timeout: 252 seconds)
2012-01-08T00:55:01  *** raemde <raemde!~raemde@dslb-088-073-244-064.pools.arcor-ip.net> has joined #aichallenge
2012-01-08T00:58:32  *** lhb__ <lhb__!~raemde@dslb-088-073-244-064.pools.arcor-ip.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T01:16:15  *** Kahtras <Kahtras!7aa1e2ba@gateway/web/freenode/ip.122.161.226.186> has joined #aichallenge
2012-01-08T01:21:41  <antimatroid1> bah stupid network
2012-01-08T01:21:46  <antimatroid1> claims ports are open yet they aren't
2012-01-08T01:21:51  <antimatroid1> including my torrent ones
2012-01-08T01:27:38  *** antimatroid <antimatroid!~nick@76.201.dsl.mel.iprimus.net.au> has joined #aichallenge
2012-01-08T01:28:23  *** antimatroid1 <antimatroid1!~nick@2.245-26-211.dynamic.dsl.mel.iprimus.net.au> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T01:33:28  <antimatroid> nm i'm retarded
2012-01-08T01:45:46  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has quit IRC (Quit: Konversation terminated!)
2012-01-08T01:47:18  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has joined #aichallenge
2012-01-08T01:47:31  *** ChanServ sets mode: +o amstan
2012-01-08T01:57:14  <antimatroid> https://github.com/berak/ants-tcp/blob/master/webserver.py#L478
2012-01-08T01:57:19  <antimatroid> i don't get how to add my host ip to that?
2012-01-08T01:57:24  <antimatroid> anyone know?
2012-01-08T02:06:13  <antimatroid> thestinger: are you around?
2012-01-08T02:07:59  <pairofdice> http://www.whatsmyip.org/
2012-01-08T02:09:21  <antimatroid> yeah i can get that
2012-01-08T02:09:31  <antimatroid> but it doesn't load for me
2012-01-08T02:09:39  <antimatroid> only when i go via 192.168.1.100
2012-01-08T02:09:49  <antimatroid> i'm wondering if people outside can access it
2012-01-08T02:23:18  *** Kurnevsky <Kurnevsky!~Errins@178.163.254.172> has joined #aichallenge
2012-01-08T02:25:29  <thestinger> antimatroid: did you forward the port to there?
2012-01-08T02:28:38  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T02:32:35  *** Palmik <Palmik!~palmik@man-208-200.pks.muni.cz> has joined #aichallenge
2012-01-08T02:48:35  <antimatroid> thestinger: yeah it seems to work
2012-01-08T02:48:39  <antimatroid> got pairofdice to load it
2012-01-08T02:49:00  <antimatroid> it wont load the external ip from my computer though, i don't understand these things though so not sure if that's to be expected :\
2012-01-08T02:51:05  <antimatroid> what are peoples thoughts about username/botname/versionno for tcp?
2012-01-08T02:51:06  <antimatroid> i
2012-01-08T02:51:17  <antimatroid> i'm thinking of just leaving it at botname/versionNo
2012-01-08T02:51:28  <antimatroid> well, adding in the versionNo
2012-01-08T02:51:38  <antimatroid> i like being able to be more anonymous
2012-01-08T03:04:12  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has quit IRC (Quit: WeeChat 0.3.6)
2012-01-08T03:20:03  *** Fandekasp <Fandekasp!~Fandekasp@KD182249015013.au-net.ne.jp> has joined #aichallenge
2012-01-08T03:23:25  *** dorisabayon <dorisabayon!~Fandekasp@KD182249003193.au-net.ne.jp> has quit IRC (Ping timeout: 252 seconds)
2012-01-08T03:25:26  *** JamesMG_ <JamesMG_!jamesg@milkshakes.org> has quit IRC (Read error: Connection reset by peer)
2012-01-08T03:28:41  *** JamesMG <JamesMG!jamesg@milkshakes.org> has joined #aichallenge
2012-01-08T03:47:50  *** Jak_o_Shadows <Jak_o_Shadows!~Fake@CPE-144-136-214-52.sa.bigpond.net.au> has quit IRC (Ping timeout: 248 seconds)
2012-01-08T03:49:45  *** Jak_o_Shadows <Jak_o_Shadows!~Fake@CPE-144-136-214-52.sa.bigpond.net.au> has joined #aichallenge
2012-01-08T04:01:50  <Accoun> phiton TCP srver and client very baggy and bad
2012-01-08T04:23:25  *** grc48 <grc48!~grc48@CPE-58-172-41-80.wqcz1.ken.bigpond.net.au> has quit IRC (Quit: Leaving)
2012-01-08T04:26:14  <antimatroid> Accoun: I'm currently looking at rewriting it, although i have zero idea with this stuff so i can't imagine i'm going to do a very good job
2012-01-08T04:26:23  <antimatroid> especially the webserver part
2012-01-08T04:27:46  *** epicmonkey <epicmonkey!~epicmonke@188.134.41.210> has joined #aichallenge
2012-01-08T04:36:37  *** ruser <ruser!~nomad@23.19.120.250> has quit IRC (Read error: Operation timed out)
2012-01-08T04:40:34  *** ruser <ruser!~nomad@23.19.120.250> has joined #aichallenge
2012-01-08T04:56:19  *** acieroid <acieroid!~acieroid@wtf.awesom.eu> has quit IRC (Quit: :[)
2012-01-08T04:57:46  <pairofdice> Huh? math.sqrt(1) gives 1.0 not 0, there goes that PE #80 solution
2012-01-08T05:03:51  *** ikaros <ikaros!~ikaros@dslb-188-107-221-154.pools.arcor-ip.net> has joined #aichallenge
2012-01-08T05:08:29  <pairofdice> Well, that was too easy for an 80
2012-01-08T05:10:07  *** foRei <foRei!~ViT@0x4dd7b24d.adsl.cybercity.dk> has joined #aichallenge
2012-01-08T05:14:54  <pairofdice> not 1*
2012-01-08T05:23:17  <antimatroid> man the tcp code is gross
2012-01-08T05:29:17  *** Kurnevsky <Kurnevsky!~Errins@178.163.254.172> has quit IRC (Quit: Instantbird 1.0)
2012-01-08T05:39:34  *** choas <choas!~lars@p5795CD39.dip.t-dialin.net> has joined #aichallenge
2012-01-08T05:53:02  *** kire <kire!~kire@78-22-125-201.access.telenet.be> has joined #aichallenge
2012-01-08T06:01:44  *** kilae <kilae!~chatzilla@catv-161-018.tbwil.ch> has joined #aichallenge
2012-01-08T06:20:23  *** dorisabayon <dorisabayon!~Fandekasp@KD182249004083.au-net.ne.jp> has joined #aichallenge
2012-01-08T06:22:14  *** Redgis <Redgis!~Nex@2a01:e34:ee3b:aa40:cc1d:d6e6:8a9a:e4a2> has joined #aichallenge
2012-01-08T06:23:22  *** Fandekasp <Fandekasp!~Fandekasp@KD182249015013.au-net.ne.jp> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T06:25:36  *** X-Scale <X-Scale!email@sgi-ultra64.broker.freenet6.net> has quit IRC (Remote host closed the connection)
2012-01-08T06:29:52  *** kire <kire!~kire@78-22-125-201.access.telenet.be> has quit IRC (Quit: Leaving)
2012-01-08T06:32:05  *** replore <replore!~replore@ntkngw298122.kngw.nt.ftth.ppp.infoweb.ne.jp> has joined #aichallenge
2012-01-08T06:38:33  *** nickjohnson <nickjohnson!u789@gateway/web/irccloud.com/x-yydesflntjymtzlf> has joined #aichallenge
2012-01-08T07:23:57  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has quit IRC (Remote host closed the connection)
2012-01-08T07:24:45  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has joined #aichallenge
2012-01-08T07:24:49  *** dr- <dr-!~dr-@ble59-1-82-66-133-150.fbx.proxad.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T07:28:37  *** dorisabayon <dorisabayon!~Fandekasp@KD182249004083.au-net.ne.jp> has quit IRC (Ping timeout: 248 seconds)
2012-01-08T07:29:17  *** Fandekasp <Fandekasp!~Fandekasp@KD182249004083.au-net.ne.jp> has joined #aichallenge
2012-01-08T07:30:32  *** dr- <dr-!~dr-@ble59-1-82-66-133-150.fbx.proxad.net> has joined #aichallenge
2012-01-08T07:48:06  *** Jak_o_Shadows <Jak_o_Shadows!~Fake@CPE-144-136-214-52.sa.bigpond.net.au> has quit IRC (Remote host closed the connection)
2012-01-08T08:15:35  *** antbuilder <antbuilder!53a35746@gateway/web/freenode/ip.83.163.87.70> has joined #aichallenge
2012-01-08T08:16:15  <antbuilder> hello room
2012-01-08T08:16:23  <antimatroid> hello
2012-01-08T08:16:41  *** AntMan_ <AntMan_!53a35746@gateway/web/freenode/ip.83.163.87.70> has joined #aichallenge
2012-01-08T08:16:57  <AntMan_> hey
2012-01-08T08:17:36  <antbuilder> does any of you have any experience with the java starter package of the ant builder?
2012-01-08T08:17:46  <antbuilder> i mean the ant challenge*
2012-01-08T08:19:23  <antbuilder> because i have tried to implement an A* algorithm in the code, after following the tutorial, however, my bot does not do anything anymore
2012-01-08T08:43:02  *** antbuilder <antbuilder!53a35746@gateway/web/freenode/ip.83.163.87.70> has quit IRC (Quit: Page closed)
2012-01-08T08:47:13  *** TheLinker <TheLinker!~TheLinker@host102.190-226-110.telecom.net.ar> has joined #aichallenge
2012-01-08T09:04:17  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has joined #aichallenge
2012-01-08T09:09:09  *** AlliedEnvy <AlliedEnvy!~AlliedEnv@adsl-68-90-47-163.dsl.hstntx.swbell.net> has quit IRC (Read error: Connection reset by peer)
2012-01-08T09:10:14  *** AlliedEnvy <AlliedEnvy!~AlliedEnv@adsl-68-90-47-163.dsl.hstntx.swbell.net> has joined #aichallenge
2012-01-08T09:10:18  *** mceier <mceier!~mceier@89-77-140-105.dynamic.chello.pl> has joined #aichallenge
2012-01-08T09:14:17  *** AntMan_ <AntMan_!53a35746@gateway/web/freenode/ip.83.163.87.70> has quit IRC (Ping timeout: 258 seconds)
2012-01-08T09:14:52  *** conor_f <conor_f!~pqaw9ijh2@86-46-53-2-dynamic.b-ras3.mvw.galway.eircom.net> has joined #aichallenge
2012-01-08T09:20:36  *** dorisabayon <dorisabayon!~Fandekasp@KD182249013179.au-net.ne.jp> has joined #aichallenge
2012-01-08T09:23:56  *** Fandekasp <Fandekasp!~Fandekasp@KD182249004083.au-net.ne.jp> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T09:26:33  *** mleise <mleise!~marco@dslb-088-070-156-095.pools.arcor-ip.net> has joined #aichallenge
2012-01-08T09:36:22  <conor_f> lol, fear and loathing in las vegas
2012-01-08T09:36:48  <conor_f> "What?! No! We can't stop here! This is bat country."
2012-01-08T09:40:38  <pairofdice> I never quite got that quote, are bats supposed to be scary?
2012-01-08T09:41:19  <conor_f> nah, I think it's the fact that they were "giant bats" and they appeared out of nowhere in the middle of the desert
2012-01-08T09:41:40  <conor_f> and maybe a bit of parinoia from all the drugs lol
2012-01-08T09:42:28  <pairofdice> Drugs would explain most of it, yes
2012-01-08T09:43:12  <conor_f> heh, drugs explains just about everything in that film :)
2012-01-08T09:43:18  <conor_f> have you read the book?
2012-01-08T09:44:22  <pairofdice> Nah
2012-01-08T09:45:01  * conor_f needs to go find a free ebook of it
2012-01-08T09:45:19  *** srgpqt <srgpqt!~srgpqt@206-248-134-38.dsl.teksavvy.com> has joined #aichallenge
2012-01-08T09:53:00  *** Blkt <Blkt!~user@82.84.135.7> has joined #aichallenge
2012-01-08T09:53:45  <Blkt> good day everyone
2012-01-08T09:55:27  <mleise> hi Blkt
2012-01-08T09:55:35  <Blkt> :D
2012-01-08T09:56:01  <mleise> The Pemba flying fox is one big bat with a wingspan of up to 5 1/2 feet
2012-01-08T09:56:52  <mleise> They were also very tasty according to local cuisine
2012-01-08T09:57:56  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has quit IRC (Quit: Leaving.)
2012-01-08T09:57:57  <pairofdice> And a herbivore, also very rare
2012-01-08T10:02:29  <mleise> look at that: http://www.youtube.com/watch?v=UROVfmY3NTA, funny comment: Joker: "Its simple: We kill the﻿ Batman." - Centipede: "Ok"
2012-01-08T10:03:17  <conor_f> a bat eating centipede....
2012-01-08T10:03:29  <conor_f> do you want me to ever sleep again in my life?!?
2012-01-08T10:03:31  <pairofdice> Those are fucking creepy
2012-01-08T10:04:06  <conor_f> dear god. I'm not the most squeamish of people
2012-01-08T10:04:32  <conor_f> but did you watch that video? theres bugs _everywhere_
2012-01-08T10:04:44  <pairofdice> Guano eating bugs
2012-01-08T10:04:51  <conor_f> Fucked if you thinkn I'd be the cameraman...
2012-01-08T10:04:51  * antimatroid just discovered chuck
2012-01-08T10:05:37  <conor_f> g++'s -g option is the best thing <3
2012-01-08T10:06:22  <conor_f> especially since I learned to use gdb :)
2012-01-08T10:21:16  *** kire <kire!~kire@78-22-125-201.access.telenet.be> has joined #aichallenge
2012-01-08T10:24:10  *** mcstar <mcstar!~mcstar@adsl-89-132-10-57.monradsl.monornet.hu> has joined #aichallenge
2012-01-08T10:27:15  *** dici <dici!~Dici@port-92-204-80-76.dynamic.qsc.de> has joined #aichallenge
2012-01-08T10:33:25  *** dici <dici!~Dici@port-92-204-80-76.dynamic.qsc.de> has quit IRC (Read error: Connection reset by peer)
2012-01-08T10:37:21  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has joined #aichallenge
2012-01-08T10:53:46  *** u_ <u_!~u_@adsl-75-57-162-84.dsl.emhril.sbcglobal.net> has joined #aichallenge
2012-01-08T10:57:35  <mleise> Programming with unicode: "Your cards are: ♠8 ♠9 ♣9 ♣J ♢Q ♣Q ♢K ♠K"
2012-01-08T10:59:24  <mleise> It would be an unreadable mess in ascii
2012-01-08T11:00:54  <pairofdice> Still has 2 squares for me :/
2012-01-08T11:05:14  <mcstar> Your cards are: ♠8 ♠9 ♣9 ♣J ♢Q ♣Q ♢K ♠K
2012-01-08T11:05:32  <conor_f> no hearts or diamonds
2012-01-08T11:05:48  <mcstar> ♢
2012-01-08T11:05:54  <mcstar> this is the diamond
2012-01-08T11:05:58  <pairofdice> square
2012-01-08T11:06:04  <conor_f> sorry
2012-01-08T11:06:10  <conor_f> it's very vague and grey
2012-01-08T11:06:44  <mcstar> conor_f: did you solve the problem?
2012-01-08T11:06:57  <conor_f> which?
2012-01-08T11:07:04  <mcstar> wedge/point mass
2012-01-08T11:07:13  <conor_f> no -_-
2012-01-08T11:08:16  <conor_f> I hate wedges with a passion
2012-01-08T11:30:17  <conor_f> http://codepad.org/E0J60YoN
2012-01-08T11:30:32  <conor_f> for PE #23
2012-01-08T11:30:38  <conor_f> it should work
2012-01-08T11:30:49  <conor_f> and yes, set tabstop=4
2012-01-08T11:30:57  <conor_f> and yes that code will take ages to run
2012-01-08T11:31:14  <conor_f> any ideas why it's not working?
2012-01-08T11:35:25  <mcstar> conor_f: d^2x/dt^2=g tan(a)(1+m/M)/(1/tan(a)-tan(a)(1+m/M))/M
2012-01-08T11:35:37  <mcstar> thats what i get
2012-01-08T11:35:43  <mcstar> im not sure if its correct
2012-01-08T11:36:01  <mcstar> it was literally ages since i did these kinds of stuff
2012-01-08T11:36:36  <mcstar> but i was very fast in these in high school, almost always the first
2012-01-08T11:36:47  <conor_f> heh
2012-01-08T11:36:48  <mcstar> i wonder what happened...
2012-01-08T11:36:55  <conor_f> competetitive ;)
2012-01-08T11:37:07  <mcstar> conor_f: dont drink when you get into university
2012-01-08T11:37:07  <conor_f> I'll try it again later maybe
2012-01-08T11:37:10  <conor_f> lol
2012-01-08T11:37:16  *** g0llum <g0llum!~g0llum@82.113.106.124> has joined #aichallenge
2012-01-08T11:37:24  <conor_f> s/university/high school :P
2012-01-08T11:37:48  <conor_f> woooow
2012-01-08T11:37:51  <conor_f> I'm retarded
2012-01-08T11:37:53  <conor_f> >_<
2012-01-08T11:38:19  <conor_f> instead of summing them all up, just use n(n-1)/2 to add up everything from 1 to 28123
2012-01-08T11:38:27  <conor_f> and then take away all the abundant numbers lol
2012-01-08T11:39:44  *** Kurnevsky <Kurnevsky!~Errins@128.65.26.219> has joined #aichallenge
2012-01-08T11:40:08  <conor_f> *n(n+1)/2
2012-01-08T11:41:44  *** dorisabayon <dorisabayon!~Fandekasp@KD182249013179.au-net.ne.jp> has quit IRC (Ping timeout: 252 seconds)
2012-01-08T11:48:02  *** choas <choas!~lars@p5795CD39.dip.t-dialin.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T11:57:48  *** kire <kire!~kire@78-22-125-201.access.telenet.be> has quit IRC (Remote host closed the connection)
2012-01-08T12:18:08  *** choas <choas!~lars@p5795CD39.dip.t-dialin.net> has joined #aichallenge
2012-01-08T12:21:58  *** Paradoxiality <Paradoxiality!~Paradoxia@pool-108-28-22-94.washdc.fios.verizon.net> has joined #aichallenge
2012-01-08T12:36:43  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has quit IRC (Ping timeout: 252 seconds)
2012-01-08T12:38:36  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has joined #aichallenge
2012-01-08T12:40:19  *** grwip <grwip!~grwip@dslb-188-102-045-141.pools.arcor-ip.net> has joined #aichallenge
2012-01-08T12:41:52  *** sofuture <sofuture!u515@gateway/web/irccloud.com/x-gpxaledbagqdassc> has joined #aichallenge
2012-01-08T12:42:56  *** denysonique_ <denysonique_!u484@gateway/web/irccloud.com/x-adtnjypkefpgxjjo> has joined #aichallenge
2012-01-08T12:46:44  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has joined #aichallenge
2012-01-08T13:03:22  *** sashaSochka <sashaSochka!515fb6a7@gateway/web/freenode/ip.81.95.182.167> has joined #aichallenge
2012-01-08T13:08:30  <antimatroid> drink all the alcohol
2012-01-08T13:12:50  <thestinger> http://projecteuler.net/problem=61 another one of these :)
2012-01-08T13:12:58  *** X-Scale <X-Scale!email@sgi-ultra64.broker.freenet6.net> has joined #aichallenge
2012-01-08T13:16:34  <conor_f> thestinger: lol, these problems are so stupid, yet I'm compelled to do them :P
2012-01-08T13:16:55  <thestinger> 54 was really fun
2012-01-08T13:17:55  <conor_f> heh
2012-01-08T13:18:17  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has quit IRC (Quit: Leaving.)
2012-01-08T13:18:21  <conor_f> that is actually the most useful one I've seen (still not very useful though :P)
2012-01-08T13:18:56  <thestinger> well you end up with a program that can rank poker hands
2012-01-08T13:19:00  <conor_f> but still, wouldn't it be better if they asked you to code how much to bet?
2012-01-08T13:19:09  <conor_f> given a hand
2012-01-08T13:19:26  <thestinger> they need to have questions with one answer
2012-01-08T13:19:42  <conor_f> yeah, a limitation of the site
2012-01-08T13:19:59  <conor_f> thats what makes spoj.pl a bit superior
2012-01-08T13:20:06  <pairofdice> The use of that site isn't in practical applications...
2012-01-08T13:20:08  <conor_f> but I prefer PE overall
2012-01-08T13:20:31  <mcstar> thestinger: i could get my haskell one for 74 down to 8.5 secs vs yours 8.0(pypy)
2012-01-08T13:21:18  <mcstar> thestinger: the weird thing was that testing a list/set/map/hashmap for membership for the cycle detection, didnt matter
2012-01-08T13:21:22  <X-Scale> mcstar: I tried 74 yesterday in C. Manage to get it down to 0.050s at 1.7GHz
2012-01-08T13:21:48  <mcstar> X-Scale: what data structure do yo use?
2012-01-08T13:21:54  <mcstar> damn, cold fingerds
2012-01-08T13:22:04  <thestinger> well, lets see how fast it is if I rewrite it in C++ :P
2012-01-08T13:22:54  <mcstar> thestinger: i think haskell didnt like that i have to create those structures a million times
2012-01-08T13:23:02  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has joined #aichallenge
2012-01-08T13:23:04  <X-Scale> I used memoization on a simple array of unsigned chars for the main table. Another array for the 0..9 factorials, and another array to store temporary partial chains.
2012-01-08T13:23:14  <mcstar> so their better membership complexity didnt shop up
2012-01-08T13:23:27  <mcstar> yeah
2012-01-08T13:23:34  <mcstar> simple damn vectors
2012-01-08T13:23:36  <mcstar> lol
2012-01-08T13:23:47  <mcstar> hashmaps and balanced trees can suck my finger
2012-01-08T13:25:06  *** alehorst <alehorst!~alehorst@177.42.27.163> has joined #aichallenge
2012-01-08T13:25:31  <thestinger> meh, I'm too lazy lol
2012-01-08T13:25:43  <thestinger> oh wait nvm
2012-01-08T13:25:51  <thestinger> it will be easy, my hash table is already basically an array
2012-01-08T13:25:58  <mcstar> thestinger $! program
2012-01-08T13:26:07  *** mceier <mceier!~mceier@89-77-140-105.dynamic.chello.pl> has quit IRC (Quit: leaving)
2012-01-08T13:26:08  *** sashaSochka <sashaSochka!515fb6a7@gateway/web/freenode/ip.81.95.182.167> has quit IRC (Ping timeout: 258 seconds)
2012-01-08T13:27:01  <conor_f> http://codepad.org/chx5pAJU
2012-01-08T13:27:17  <conor_f> can anyone see the problem with that? It's failing
2012-01-08T13:27:52  <conor_f> sum all the integers that can't be represented by the sum of 2 abundant numbers
2012-01-08T13:30:09  <conor_f> also, I know it would be slow
2012-01-08T13:30:22  <conor_f> but it's only going through 1 number a second....
2012-01-08T13:32:45  <mcstar> you should put the sums into a set
2012-01-08T13:32:50  <mcstar> or at least sort them
2012-01-08T13:33:02  <conor_f> yeah
2012-01-08T13:33:12  <conor_f> if they were in a set I wouldn't have any duplicates alright
2012-01-08T13:33:15  <conor_f> but still
2012-01-08T13:33:17  <X-Scale> conor_f: what's that problem # ?
2012-01-08T13:33:23  <conor_f> 23
2012-01-08T13:33:26  <X-Scale> thx
2012-01-08T13:34:06  <conor_f> mcstar: >_<
2012-01-08T13:34:24  <mcstar> i dont see an error so far
2012-01-08T13:34:31  <conor_f> a simple break if the abundant sum is greater then i would make things a lot faster I imagine :/
2012-01-08T13:34:34  <mcstar> its not the way id do it, but..
2012-01-08T13:35:46  *** sashaSochka <sashaSochka!515fb6a7@gateway/web/freenode/ip.81.95.182.167> has joined #aichallenge
2012-01-08T13:36:28  <conor_f> a lot faster, but also wrong
2012-01-08T13:38:41  <X-Scale> mcstar: on 74, they forgot to mention that 1, 2 and 40585 also have the same 1-cycle property as 145.
2012-01-08T13:38:55  <mcstar> and 0
2012-01-08T13:39:08  <mcstar> ah no
2012-01-08T13:39:17  <mcstar> 0!=1 1!=1
2012-01-08T13:39:22  <mcstar> lol
2012-01-08T13:39:27  <mcstar> 0 doesnt cycle
2012-01-08T13:40:01  <X-Scale> I spotted 1 and 2 cases before testing, because they were trivial. But the 40585 demanded a simple GDB session as the program was in an infinite loop. :P
2012-01-08T13:40:03  <X-Scale> Right
2012-01-08T13:43:03  <mcstar> conor_f: i dont know really
2012-01-08T13:43:16  <mcstar> seems logically correct to me
2012-01-08T13:43:51  <conor_f> yeah
2012-01-08T13:43:56  <conor_f> its not an overflow
2012-01-08T13:46:30  <X-Scale> PE#23 sounds interesting. Specially finding a fast way of creating the sum of all proper divisors of a large number set.
2012-01-08T13:47:17  <thestinger> I just brute forced that one
2012-01-08T13:47:18  <conor_f> mcstar: I think I found the problem
2012-01-08T13:47:38  <thestinger> 23 takes 500ms in python
2012-01-08T13:47:44  <conor_f> a stupid mistake
2012-01-08T13:47:48  <conor_f> thestinger: :O
2012-01-08T13:47:52  <mcstar> whats that?
2012-01-08T13:47:57  <conor_f> brute force?
2012-01-08T13:48:01  <thestinger> conor_f: you're doing factoring in a really bad way :P
2012-01-08T13:48:07  <conor_f> lol, yes
2012-01-08T13:48:10  <conor_f> but still
2012-01-08T13:48:23  <thestinger> you could start by just finding the lower factors and getting the higher ones from that
2012-01-08T13:48:27  <conor_f> the difference between like, 3 mins and counting and 500 ms?
2012-01-08T13:48:42  <pairofdice> just takes one infinite loop
2012-01-08T13:48:49  <thestinger> so you turn n into sqrt(n)
2012-01-08T13:49:05  <thestinger> anyway, you can get divisors in better ways than that
2012-01-08T13:49:09  <pairofdice> Yeah, you don't need to go past sqrt(n) at all
2012-01-08T13:49:26  <conor_f> yeah, I knew that
2012-01-08T13:49:36  <conor_f> but thats not whats taking the time
2012-01-08T13:49:49  <thestinger> are you sure?
2012-01-08T13:49:56  <conor_f> yes
2012-01-08T13:50:00  <conor_f> certain
2012-01-08T13:50:02  <thestinger> how do you check if a number is abundant
2012-01-08T13:50:04  <conor_f> that takes less then a second
2012-01-08T13:50:13  <conor_f> sum all its divisors
2012-01-08T13:50:24  <conor_f> and then if it's greater then the base
2012-01-08T13:50:28  <conor_f> simpley as that
2012-01-08T13:50:36  <conor_f> all that is done in < 1 second
2012-01-08T13:50:50  <conor_f> and summing them all and putting them into a vector
2012-01-08T13:51:12  <thestinger> a vector..?
2012-01-08T13:51:12  <conor_f> it's the sorting of the vector and the checking for non-abundant numbers thats killing it
2012-01-08T13:51:21  <thestinger> so you are doing a linear search over it?
2012-01-08T13:51:29  <conor_f> yes
2012-01-08T13:51:56  <thestinger> well, use a proper data structure where it's O(1) to check if something is in it, not O(n)
2012-01-08T13:52:22  <conor_f> http://codepad.org/lS0OD2MD
2012-01-08T13:52:24  <thestinger> std::hash is a perfect hash for unsigned ints
2012-01-08T13:52:29  <thestinger> or you could just use a bit/bool array
2012-01-08T13:52:58  <mcstar> conor_f: what was the problem?
2012-01-08T13:53:29  <thestinger> conor_f: well, I'm too lazy to figure out what your code does :P
2012-01-08T13:53:49  <mcstar> thestinger: i looked over it and found no logical errors
2012-01-08T13:54:51  <conor_f> mcstar: what I said at 33 of this hour
2012-01-08T13:54:58  <conor_f> about checking if it was greater
2012-01-08T13:55:09  <conor_f> (line 42 in the most recent paste
2012-01-08T13:56:06  <conor_f> I hadn't the vector sorted so it wasn't checking it correctly
2012-01-08T13:56:17  <conor_f> still doesn't explain why it's so incredibly slow though....
2012-01-08T13:57:31  <thestinger> well, you should use a better data structure
2012-01-08T13:58:54  <conor_f> yes
2012-01-08T13:58:56  <conor_f> I should
2012-01-08T14:00:47  <mcstar> if(j == abundant_numbers.size()-1)
2012-01-08T14:00:57  <mcstar> if(j == abundant_numbers_sums.size()-1)
2012-01-08T14:01:16  <mcstar> i think this was the problem
2012-01-08T14:01:23  <mcstar> the sorting inst necessairy
2012-01-08T14:01:37  <mcstar> and that other check is redundant also
2012-01-08T14:01:40  <mcstar> i think
2012-01-08T14:01:49  <conor_f> oh ffs
2012-01-08T14:01:53  <conor_f> tyvm mcstar
2012-01-08T14:02:04  <mcstar> i missed this th efirst time
2012-01-08T14:02:17  <thestinger> weird, I think I found a pypy bug
2012-01-08T14:02:37  <conor_f> mcstar: both checks are needed
2012-01-08T14:02:51  <conor_f> stops line 42 being a seg fault
2012-01-08T14:03:00  <conor_f> *accessing an element outside the array
2012-01-08T14:03:04  <conor_f> not always seg faults
2012-01-08T14:03:26  <thestinger> use libmudflap
2012-01-08T14:03:29  <thestinger> catches all that stuff
2012-01-08T14:04:16  <thestinger> gcc -fmudflap -o test test.c -lmudflap
2012-01-08T14:04:32  <thestinger> well, not sure how well it works with C++
2012-01-08T14:04:53  <conor_f> lol
2012-01-08T14:04:57  <conor_f> never heard of that
2012-01-08T14:05:29  <thestinger> it's better than crappy valgrind because it builds in checks for each array
2012-01-08T14:05:40  <thestinger> so it doesn't have false positives and doesn't miss stuff
2012-01-08T14:05:59  <conor_f> huh
2012-01-08T14:06:05  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has quit IRC (Quit: Leaving.)
2012-01-08T14:06:29  <conor_f> funny how there are programs debugging your programs all running under some program :P
2012-01-08T14:06:36  <conor_f> computes amaze me from time to time
2012-01-08T14:06:50  <thestinger> well, it's a library
2012-01-08T14:06:56  <conor_f> yeah
2012-01-08T14:07:51  <conor_f> my codes speed makes me want to cry
2012-01-08T14:08:15  <conor_f> especially when theres a much easier way to do it but I'm not bothered coding it
2012-01-08T14:08:33  <conor_f> answer = n(n+1)/2;
2012-01-08T14:08:58  <conor_f> and then just take all the unique values in abundant_numbers_sums away from it
2012-01-08T14:13:58  <conor_f> lol, did it and got it right :P
2012-01-08T14:14:05  <conor_f> I should make more of an effort :|
2012-01-08T14:25:17  <mcstar> conor_f: http://codepad.org/aasTIC1Z
2012-01-08T14:25:54  <thestinger> ugh... C++
2012-01-08T14:26:33  <thestinger> sum(map(factorial, map(int, str(current_n)))) <- I like how that becomes 5 lines, and I have to use to_string and c_to_i functions
2012-01-08T14:26:49  <conor_f> mcstar: runtime?
2012-01-08T14:26:59  <mcstar> 1.4sec
2012-01-08T14:27:03  <pairofdice> I clearly use map too little (not at all)
2012-01-08T14:27:24  <conor_f> heh, same here pairofdice :P
2012-01-08T14:27:34  <mcstar> it was the same with vectors
2012-01-08T14:27:38  <thestinger> set/map aren't very useful, unordered_set and unordered_map are though
2012-01-08T14:27:40  <mcstar> i told you that would fix it
2012-01-08T14:27:42  <conor_f> http://codepad.org/s3IUrhwp
2012-01-08T14:27:45  <conor_f> thats mine
2012-01-08T14:27:48  <thestinger> pairofdice: don't you use lots of sets and dicts in python? :P
2012-01-08T14:27:53  <mcstar> but if i didnt change the vector to set, thestinger would tkae my head off
2012-01-08T14:27:54  <pairofdice> Sure
2012-01-08T14:28:09  <conor_f> runtime 30 seconds lol :P
2012-01-08T14:28:19  <thestinger> mcstar: well, or use an array as a hash table :)
2012-01-08T14:28:31  <pairofdice> But I'm only at the DDK pythonista level
2012-01-08T14:28:59  <thestinger> well my solution is 1.6s now for 74
2012-01-08T14:31:15  <thestinger> you all need to do 54
2012-01-08T14:31:24  <thestinger> best problem I've done so far
2012-01-08T14:32:36  <conor_f> heh
2012-01-08T14:34:16  <conor_f> it looks difficult enough
2012-01-08T14:34:27  <conor_f> well, long enough anyways
2012-01-08T14:34:29  <thestinger> no it was pretty easy
2012-01-08T14:34:32  <thestinger> just took a while
2012-01-08T14:34:34  <thestinger> but it was fun
2012-01-08T14:34:39  <mcstar> im tired by looking at the long description
2012-01-08T14:34:41  <conor_f> 11+ functions in C++ methinks
2012-01-08T14:34:50  <thestinger> mcstar: well, I can explain it in a sentence
2012-01-08T14:34:53  <mcstar> no
2012-01-08T14:34:53  <conor_f> mcstar: who wins a hand of poker
2012-01-08T14:34:57  <conor_f> thats it :P
2012-01-08T14:35:02  <mcstar> i dont care
2012-01-08T14:35:07  <mcstar> XD
2012-01-08T14:35:27  <thestinger> http://projecteuler.net/project/poker.txt each line is 2 poker hands (split in the middle), count the number of times the hand on the left wins :P
2012-01-08T14:36:04  <thestinger> conor_f: anyway, that's the perfect place to use std::unordered_map
2012-01-08T14:36:38  <conor_f> for the problem I just did or the poker one?
2012-01-08T14:36:44  <thestinger> I ended up making cards_by_suit and cards_by_value for each hand
2012-01-08T14:36:46  <thestinger> conor_f: the poker one
2012-01-08T14:37:25  <thestinger> anyway I'm going to rewrite it in C++ for fun
2012-01-08T14:37:33  <conor_f> lol
2012-01-08T14:37:38  <conor_f> what did you do it in?
2012-01-08T14:37:45  <thestinger> python
2012-01-08T14:37:52  <conor_f> ah
2012-01-08T14:37:56  <thestinger> takes 50ms anyway
2012-01-08T14:38:09  <conor_f> I need to do one more problem tonight :@
2012-01-08T14:38:17  <conor_f> just want to get to level 1 lol :P
2012-01-08T14:39:09  <thestinger> I need to do 1 more for level 3 but I'm too lazy
2012-01-08T14:39:17  <conor_f> lol
2012-01-08T14:39:32  <conor_f> first level 1, then catch up with rwest_ ;)
2012-01-08T14:39:49  <thestinger> I "solved" 51 but it was taking more than 10s so I cancelled it
2012-01-08T14:40:10  <conor_f> lol
2012-01-08T14:40:16  <conor_f> I thought the limit was 1 minute?
2012-01-08T14:40:52  <thestinger> I'm not that patient
2012-01-08T14:41:27  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has joined #aichallenge
2012-01-08T14:41:55  <conor_f> 22 shouldn't be too bad
2012-01-08T14:42:26  <thestinger> oh, that one was easy
2012-01-08T14:42:33  <thestinger> it's a one liner in python
2012-01-08T14:42:53  <pairofdice> Yeah, pretty easy
2012-01-08T14:42:56  <thestinger> most of the ones I've done are just a single list comprehension thing though
2012-01-08T14:43:15  <thestinger> maybe 2-3 nested ones
2012-01-08T14:43:33  <thestinger> Nice work, strcat, you've just advanced to Level 3.
2012-01-08T14:43:35  <thestinger> :)
2012-01-08T14:43:48  <thestinger> ./solution.py  6.31s user 0.11s system 99% cpu 6.423 total
2012-01-08T14:43:51  <thestinger> anyway it was only 6s
2012-01-08T14:44:01  <thestinger> in pypy
2012-01-08T14:44:19  <thestinger> in cpython, it's 45s
2012-01-08T14:45:21  <X-Scale> thestinger: that's #51 ?
2012-01-08T14:45:41  <thestinger> yeah, I did it a really stupid way
2012-01-08T14:46:00  <pairofdice> Like 97, I read the forums with some <whatever language> guys whining
2012-01-08T14:46:29  *** dr- <dr-!~dr-@ble59-1-82-66-133-150.fbx.proxad.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T14:46:33  <thestinger> pairofdice: lol? 97?
2012-01-08T14:46:38  <thestinger> that's just ipowmod
2012-01-08T14:46:48  <pairofdice> print(str(28433*(2**7830457)+1)[-10:])
2012-01-08T14:46:49  <thestinger> built-in in python, but easy to code in C
2012-01-08T14:47:02  <thestinger> pairofdice: pow(base, exp, mod)
2012-01-08T14:47:07  <thestinger> it's an optional third argument
2012-01-08T14:47:11  <thestinger> does modular exponentiation
2012-01-08T14:47:34  <thestinger> ../../archive/euler/97/solution.py  0.04s user 0.01s system 72% cpu 0.073 total
2012-01-08T14:47:46  <thestinger> in C, it takes 0ms
2012-01-08T14:47:54  <thestinger> well, in between 0 and 1ms
2012-01-08T14:48:32  <thestinger> pairofdice: http://sprunge.us/UVdg <- I have both ipow and ipowmod in C++
2012-01-08T14:48:35  <thestinger> so you can see how it works
2012-01-08T14:49:01  <thestinger> just an extra % mod with each step
2012-01-08T14:49:36  <thestinger> limit = 10**10
2012-01-08T14:49:39  <thestinger> print((28433 * pow(2, 7830457, limit) + 1) % limit)
2012-01-08T14:49:43  <thestinger> anyway I just did that in python
2012-01-08T14:50:39  *** Kingpin13 <Kingpin13!~Kingpin13@Wikipedia/Kingpin13> has quit IRC (Quit: quit)
2012-01-08T14:51:09  <thestinger> anyway you can definitely do them all in python, I'm just not smart enough
2012-01-08T14:51:14  <thestinger> had to brute force a few in C++
2012-01-08T14:51:25  <mcstar> anyway, im disapointed in haskell's set
2012-01-08T14:51:31  <cYmen> What are you guys talking about?
2012-01-08T14:51:47  <mcstar> IntMap is fast though
2012-01-08T14:51:51  <mcstar> but the others suck
2012-01-08T14:52:09  <X-Scale> cYmen: Project Euler
2012-01-08T14:52:13  <thestinger> Data.Set and Data.Map are ordered
2012-01-08T14:52:34  <mcstar> they still should be very fast
2012-01-08T14:52:56  <mcstar> n is much worse than logn
2012-01-08T14:53:39  <mcstar> problem 23 takes a minute in haskell
2012-01-08T14:53:45  <pairofdice> Anyway, many of these are oneliners in python, even for me
2012-01-08T14:53:54  <thestinger> lol, itertools and functools have so much stuff I've coded myself
2012-01-08T14:54:08  <thestinger> http://docs.python.org/py3k/library/itertools.html
2012-01-08T14:54:15  <thestinger> takewhile, dropwhile, etc.
2012-01-08T14:54:16  <jcdjcd> I am pleased with myself - I managed to do problem 355 which feels like the first hard one I have managed.
2012-01-08T14:54:34  <cYmen> nobody messing with the asteroids teststuff yet?
2012-01-08T14:55:13  <conor_f> error: conversion from ‘const char [7]’ to non-scalar type ‘std::vector<std::basic_string<char> >’ requested
2012-01-08T14:55:32  *** Kingpin13 <Kingpin13!~Kingpin13@Wikipedia/Kingpin13> has joined #aichallenge
2012-01-08T14:56:25  <conor_f> anyone know whats wrong with that? the line is where I try to initialize a vector of strings with names.txt. A file containing names in this format: "name", "name2", "name3"
2012-01-08T14:56:30  <thestinger> conor_f: what are you trying to do?
2012-01-08T14:56:37  <thestinger> show us the code
2012-01-08T14:56:53  <mcstar> cYmen: this channel became some pointless code showoff place
2012-01-08T14:57:05  <mcstar> otherwise would be silence, so this is still better
2012-01-08T14:57:51  <pairofdice> :p
2012-01-08T14:57:57  <conor_f> http://codepad.org/mgrVufYH
2012-01-08T14:58:02  <conor_f> is the code thestinger
2012-01-08T14:58:19  <conor_f> mcstar: it was all silence for a bad length of time :P
2012-01-08T14:58:40  <thestinger> well, first of all
2012-01-08T14:58:48  <thestinger> read it in from names.txt lol
2012-01-08T14:58:51  <conor_f> I came here and it was just you and UncleVasya talking. The logs for the day were like, 6 screens of people leaving and joining lol
2012-01-08T14:58:54  <conor_f> thestinger: :/
2012-01-08T14:58:59  <conor_f> this way seemed easier :P
2012-01-08T14:59:23  <conor_f> oh, spaces >_< I bet thats it
2012-01-08T14:59:24  <mcstar> {"name1","name"....}
2012-01-08T14:59:31  <mcstar> {}
2012-01-08T14:59:33  <mcstar> {}
2012-01-08T14:59:34  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has joined #aichallenge
2012-01-08T14:59:34  *** ChanServ sets mode: +o amstan
2012-01-08T14:59:37  <conor_f> mcstar: thats for initialising an array ;)
2012-01-08T14:59:43  <mcstar> no
2012-01-08T14:59:48  <mcstar> thats an initialization list
2012-01-08T15:00:02  <mcstar> you cant initilize multiple items that way in '03
2012-01-08T15:00:08  <mcstar> but you can use my method in '1
2012-01-08T15:00:11  <mcstar> '1
2012-01-08T15:00:12  <thestinger> he's also using ()
2012-01-08T15:00:14  <mcstar> '111111111
2012-01-08T15:00:17  <mcstar> '11
2012-01-08T15:00:21  <mcstar> my keyboard is broken
2012-01-08T15:00:22  <conor_f> http://codepad.org/W7qWiw08
2012-01-08T15:00:42  <thestinger> conor_f: just read it in from the file like it says :P
2012-01-08T15:00:54  <mcstar> conor_f: -std=c++0x
2012-01-08T15:00:59  <mcstar> for gcc ofc
2012-01-08T15:01:05  <conor_f> I'm using g++?
2012-01-08T15:01:10  <mcstar> same
2012-01-08T15:01:12  <conor_f> kk
2012-01-08T15:01:19  <mcstar> Gnu Compiler Collection
2012-01-08T15:01:23  <thestinger> you can compile with gcc anyway
2012-01-08T15:01:45  <srgpqt> you guys seem to be having too much fun with projecteuler.. maybe i shoul
2012-01-08T15:01:53  <srgpqt> should give it a try
2012-01-08T15:02:41  <conor_f> srgpqt: do :)
2012-01-08T15:04:13  *** Accoun <Accoun!~1@static-213-88-39-97.chebnet.ru> has quit IRC ()
2012-01-08T15:04:45  <thestinger> anyway you can do 'gcc -o test test.cc -lstdc++ -lm' and it's basically the same as g++ :P
2012-01-08T15:04:57  <mcstar> really?
2012-01-08T15:05:00  <thestinger> yes
2012-01-08T15:05:02  <mcstar> no i mean
2012-01-08T15:05:04  <mcstar> really?
2012-01-08T15:06:00  <mcstar> i probably turn HighPerfomanceHaskell into SlowPerm....
2012-01-08T15:06:18  <conor_f> lol getting a negative answer
2012-01-08T15:06:24  <mcstar> thestinger: can you do #23 run fast in haskell?
2012-01-08T15:06:38  <mcstar> whatever i do, its still a minute
2012-01-08T15:07:01  <thestinger> well, if Set is the bottleneck then no
2012-01-08T15:07:09  <thestinger> abundants = set(filter(is_abundant, range(12, MAX)))
2012-01-08T15:07:12  <thestinger> I do that in python
2012-01-08T15:07:18  <pairofdice> oh shiiiiit
2012-01-08T15:07:24  <pairofdice> itertools has permutations
2012-01-08T15:07:30  <thestinger> yes, and combinations
2012-01-08T15:07:35  <thestinger> and they're faster than my hand-coded ones
2012-01-08T15:07:40  <thestinger> also functools is good too
2012-01-08T15:08:13  <thestinger> functools.partial lets you make partial functions
2012-01-08T15:08:14  <mcstar> i tried with Set, IntMap
2012-01-08T15:08:56  <thestinger> http://sprunge.us/DcaK pointless example
2012-01-08T15:09:04  <thestinger> pairofdice: you're using python3, right?
2012-01-08T15:09:23  <pairofdice> yeah
2012-01-08T15:09:31  <thestinger> map, filter, reduce, range, etc. are all generators in py3, so you can write code that uses laziness very easily
2012-01-08T15:09:58  <thestinger> you have to write some helper functions though, but then you can treat generators like haskell lists
2012-01-08T15:11:34  <thestinger> if only tuple unpacking was lazy
2012-01-08T15:13:02  <conor_f> woot :D
2012-01-08T15:13:32  <conor_f> I am of the 18.28% of people on PE who have made to level 1 :P
2012-01-08T15:13:56  <X-Scale> #23 takes me 1s at 1.7GHz, but somehow it's giving me the wrong result. Those off-by-one errors can be tricky.
2012-01-08T15:14:16  <conor_f> weird how there are so many people but only 36658 have done >= 25 problems :/
2012-01-08T15:14:22  <mcstar> nice article http://www.haskell.org/haskellwiki/Performance/Strictness
2012-01-08T15:15:48  *** Kurnevsky <Kurnevsky!~Errins@128.65.26.219> has quit IRC (Quit: Instantbird 1.0)
2012-01-08T15:16:38  *** pairofdice <pairofdice!~pod@dsl-hkibrasgw2-ff67c300-50.dhcp.inet.fi> has quit IRC (Quit: When cryptography is outlawed, bayl bhgynjf jvyy unir cevinpl.)
2012-01-08T15:20:42  *** Accoun <Accoun!~1@static-213-88-39-97.chebnet.ru> has joined #aichallenge
2012-01-08T15:32:51  *** Chris_0076 <Chris_0076!~Chris_007@adsl-74-176-221-134.asm.bellsouth.net> has quit IRC (Quit: Leaving)
2012-01-08T15:33:42  <srgpqt> should give it a try
2012-01-08T15:33:57  <srgpqt> on problem 3 now :P
2012-01-08T15:34:34  *** chris_0076 <chris_0076!~chris_007@adsl-74-176-221-134.asm.bellsouth.net> has joined #aichallenge
2012-01-08T15:37:59  <conor_f> ok, this is me out
2012-01-08T15:38:14  <conor_f> I'm only going to be on for like an hour a day any more lol :(
2012-01-08T15:38:27  <conor_f> I miss holidays already lol
2012-01-08T15:38:32  <conor_f> ttyl #aichallenge
2012-01-08T15:38:34  *** conor_f <conor_f!~pqaw9ijh2@86-46-53-2-dynamic.b-ras3.mvw.galway.eircom.net> has quit IRC (Quit: leaving)
2012-01-08T15:49:58  *** mcstar <mcstar!~mcstar@adsl-89-132-10-57.monradsl.monornet.hu> has quit IRC (Quit: mcstar)
2012-01-08T15:50:22  *** iglo <iglo!~xy@xdsl-188-118-173-38.dip.osnanet.de> has joined #aichallenge
2012-01-08T15:57:05  <mleise> X-Scale: what do I have to do to see the result for #23 ?
2012-01-08T16:08:03  <X-Scale> I've finally solved it. *sigh*
2012-01-08T16:09:06  <X-Scale> 680ms @ 1.7GHz
2012-01-08T16:09:49  <thestinger> in which language?
2012-01-08T16:09:54  <X-Scale> C
2012-01-08T16:10:06  <X-Scale> I can be more optimized
2012-01-08T16:10:30  <X-Scale> Specially the final step where you find all the number that can be the sum of two abundant numbers
2012-01-08T16:10:35  <thestinger> yeah, I need to write a better function for finding divisors
2012-01-08T16:10:52  <X-Scale> numbers*
2012-01-08T16:11:12  <X-Scale> ah...that part is interesting, thestinger
2012-01-08T16:11:16  *** chris_0076 <chris_0076!~chris_007@adsl-74-176-221-134.asm.bellsouth.net> has quit IRC (Ping timeout: 276 seconds)
2012-01-08T16:12:41  <X-Scale> It always end up in a compromise between time and space
2012-01-08T16:13:05  <thestinger> well, you can get divisors by taking all the products of prime factors
2012-01-08T16:13:14  <thestinger> 24 is 2 2 2 3
2012-01-08T16:13:55  <thestinger> so 2, 3, 6 = 2*3, 8 = 2*2*2, 12 = 2*2*3, 24 = 2*2*2*3
2012-01-08T16:14:03  <thestinger> and factorization can be done really fast
2012-01-08T16:14:03  <X-Scale> Exactly. But I avoid doing to many calculations like the plague. So, I didn't calculate the prime factors
2012-01-08T16:14:24  <thestinger> yeah, I didn't do it for that one
2012-01-08T16:14:32  <thestinger> I need to write a better factorize function first
2012-01-08T16:14:38  <thestinger> atm it uses a sieve, which is wasteful
2012-01-08T16:14:45  <thestinger> I need to try one of the proper mathematical methods
2012-01-08T16:17:02  *** Blkt <Blkt!~user@82.84.135.7> has quit IRC (Ping timeout: 252 seconds)
2012-01-08T16:19:29  <X-Scale> For instance. Right now, just by moving half an abundant number check from inside to outside of a for loop, the algorithm improved 3 times. These little details can make a huge difference. It went from 680ms to 210ms @ 1.7GHz
2012-01-08T16:20:08  *** Palmik <Palmik!~palmik@man-208-200.pks.muni.cz> has quit IRC (Remote host closed the connection)
2012-01-08T16:22:30  *** kilae <kilae!~chatzilla@catv-161-018.tbwil.ch> has quit IRC (Quit: ChatZilla 0.9.88 [Firefox 9.0.1/20111220165912])
2012-01-08T16:22:44  <X-Scale> What language are you using, thestinger ?
2012-01-08T16:24:33  <thestinger> mostly python (coded in a pretty functional way), but also C++ and haskell
2012-01-08T16:24:42  <thestinger> sometimes I write a few solutions to each problem
2012-01-08T16:26:10  <X-Scale> Most the the python/haskell solutions I see on the PE threads are pretty slow. But normally there is one or two guys that manage to make some blazingly fast solutions in those two languages, which is pretty amazing.
2012-01-08T16:27:43  <thestinger> haskell isn't really very slow
2012-01-08T16:30:50  <thestinger> anyway, my python solutions aren't slow either
2012-01-08T16:31:03  <thestinger> if you use the proper algorithm, they're all under 5s
2012-01-08T16:31:23  <thestinger> I can "cheat" and brute force stuff in a stupid way using C or C++ though
2012-01-08T16:31:39  <thestinger> I guess the difference gets more pronounced as you get to the later problems
2012-01-08T16:33:11  <thestinger> for example, my solution to problem 23 takes 525ms
2012-01-08T16:33:18  <X-Scale> So...later problems favour the C/C++ approach ?
2012-01-08T16:33:48  <thestinger> well, lots of them look like they're just massive versions of the earlier ones
2012-01-08T16:34:14  <thestinger> so you could come up with an amazing algorithm, or rely on brute force and code optimization rather than making the algorithm better
2012-01-08T16:34:27  <X-Scale> 525ms using Python ? That's pretty impressive.
2012-01-08T16:35:15  <thestinger> not really :P
2012-01-08T16:35:27  <thestinger> just using trial division to find the divisors
2012-01-08T16:35:28  <X-Scale> Makes sens
2012-01-08T16:35:28  <mleise>  uh.. my solution to 23 is still calculating
2012-01-08T16:35:35  <X-Scale> sense*
2012-01-08T16:36:07  *** Anilm3 <Anilm3!~anil@13.Red-83-38-146.dynamicIP.rima-tde.net> has joined #aichallenge
2012-01-08T16:36:11  <mleise> ...
2012-01-08T16:37:24  <mleise> how bad can it be.. three nested loops over 28123 numbers
2012-01-08T16:37:29  <thestinger> lol
2012-01-08T16:37:35  <X-Scale> hehe
2012-01-08T16:37:37  <thestinger> mleise: how are you getting divisors?
2012-01-08T16:38:02  <X-Scale> mleise: it can get 28123^3 as bad
2012-01-08T16:38:03  <mleise> that's not the problem
2012-01-08T16:38:36  <thestinger> well, I calculated all the abundant numbers in the range
2012-01-08T16:38:46  <mleise> me too
2012-01-08T16:39:13  <thestinger> yeah, but then it's just O(1) to check if a number is abundant
2012-01-08T16:39:23  <thestinger> unless you're doing a linear search over an array
2012-01-08T16:39:28  <mleise> like so http://codepad.org/7i35Jv6G
2012-01-08T16:39:30  <thestinger> or a binary search
2012-01-08T16:40:06  <thestinger> mleise: you're checking more than you have to
2012-01-08T16:40:17  <mleise> 4179871 ! in 140 seconds
2012-01-08T16:40:20  <thestinger> checking up to n/2 finds all the divisors
2012-01-08T16:40:30  <thestinger> you only need to find the lower half, since they come in pairs
2012-01-08T16:40:38  <thestinger> so you can check up to sqrt(n)
2012-01-08T16:41:01  <thestinger> 4179871
2012-01-08T16:41:02  <thestinger> ./solution.py  0.49s user 0.03s system 99% cpu 0.520 total
2012-01-08T16:41:04  <thestinger> :P
2012-01-08T16:42:53  <X-Scale> Nice
2012-01-08T16:43:02  <mleise> I can optimize my code a bit and then it will be 300x faster, ok?
2012-01-08T16:43:12  <mleise> that should be close to your results
2012-01-08T16:44:42  *** Anilm3 <Anilm3!~anil@13.Red-83-38-146.dynamicIP.rima-tde.net> has quit IRC (Quit: Lost terminal)
2012-01-08T16:47:48  *** sashaSochka <sashaSochka!515fb6a7@gateway/web/freenode/ip.81.95.182.167> has quit IRC (Quit: Page closed)
2012-01-08T16:49:23  <X-Scale> http://projecteuler.net/thread=23
2012-01-08T16:49:31  <X-Scale> It's a nice reading.
2012-01-08T16:52:21  <thestinger> I do it like alvaro's post but I use a set (unordered hash based set) instead of a bool/bit array (since it's python)
2012-01-08T16:53:39  <thestinger> oh hm
2012-01-08T16:53:47  <thestinger> I do it a bit differently
2012-01-08T16:54:34  <thestinger> I love how the first post in the forums is often someone who did it in assembly
2012-01-08T16:56:46  <thestinger> anyway, I'm stuck on a few problems because I can't get divisors fast enough
2012-01-08T16:56:50  <thestinger> I need to learn how to do it properly
2012-01-08T17:02:54  <X-Scale> I still need a deeper grasp on -> http://en.wikipedia.org/wiki/Euclid's_algorithm
2012-01-08T17:07:21  <X-Scale> The issue I have with finding the divisors of sucessive numbers is that it makes me feel I'm repeating a lot of useless work.
2012-01-08T17:07:36  <X-Scale> If I do it the traditional way, that is.
2012-01-08T17:08:25  <thestinger> yea
2012-01-08T17:08:31  <mleise> 132 seconds, im getting closer
2012-01-08T17:10:01  <thestinger> I rewrote mine in C++ because I'm trying to work on the fast prime factorization now
2012-01-08T17:13:04  <thestinger> oh neat, random useful fact
2012-01-08T17:13:20  <thestinger> all numbers above 20161 can be written as abundant numbers :P
2012-01-08T17:13:32  <thestinger> s/written/expressed/
2012-01-08T17:14:44  <X-Scale> yep
2012-01-08T17:14:58  <mleise> but you cannot know this, so your program must check them all up to 28123
2012-01-08T17:15:25  <mleise> 90 seconds, catching up
2012-01-08T17:15:31  <thestinger> makes no real difference in speed anyway
2012-01-08T17:16:34  <thestinger> 36ms with 28123 as the limit, 21ms with 20161
2012-01-08T17:17:52  <X-Scale> Newer processor archs make a big difference too. I'm still using an old Pentium-M at 1.7GHz from 2005.
2012-01-08T17:18:13  <X-Scale> There was one guy that was spreading the workload on several cores, using OpenMP
2012-01-08T17:18:22  <thestinger> ah
2012-01-08T17:19:12  <thestinger> yeah, and gcc has -ftree-parallelize-loops
2012-01-08T17:19:13  <X-Scale> He got around 10ms. Some of these problems would get a huge boost using OpenCL on a proper GPU.
2012-01-08T17:22:30  *** dmj111 <dmj111!~user@c-98-235-94-211.hsd1.pa.comcast.net> has joined #aichallenge
2012-01-08T17:24:04  *** thagomizr <thagomizr!~thagomizr@50-80-23-86.client.mchsi.com> has joined #aichallenge
2012-01-08T17:28:53  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has quit IRC (Remote host closed the connection)
2012-01-08T17:34:53  *** choas <choas!~lars@p5795CD39.dip.t-dialin.net> has quit IRC (Ping timeout: 255 seconds)
2012-01-08T17:35:37  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has quit IRC (Quit: Konversation terminated!)
2012-01-08T17:40:59  *** aeter <aeter!~Adium@93-152-185-81.ddns.onlinedirect.bg> has quit IRC (Quit: Leaving.)
2012-01-08T17:45:59  <mleise> 20,3 seconds...
2012-01-08T17:50:46  <X-Scale> :)
2012-01-08T17:50:53  *** g0llum <g0llum!~g0llum@82.113.106.124> has quit IRC (Read error: Connection reset by peer)
2012-01-08T17:52:31  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has joined #aichallenge
2012-01-08T17:52:31  *** ChanServ sets mode: +o amstan
2012-01-08T17:57:01  *** TheLinker <TheLinker!~TheLinker@host102.190-226-110.telecom.net.ar> has quit IRC (Quit: Bye)
2012-01-08T18:01:09  *** JorgeB <JorgeB!~textual@209.66.74.34> has joined #aichallenge
2012-01-08T18:10:25  <mleise> 95ms :)
2012-01-08T18:10:46  <X-Scale> wow
2012-01-08T18:10:58  <X-Scale> python ?
2012-01-08T18:16:44  <mleise> no, native code
2012-01-08T18:17:03  <mleise> Core 2 Duo notebook @2Ghz
2012-01-08T18:17:42  <mleise> now I need a fast factorization routine
2012-01-08T18:19:51  <thestinger> mleise: http://sprunge.us/aPSZ that was my crappy brute force trial division method
2012-01-08T18:20:03  <thestinger> you don't need the factors to calculate the sum though
2012-01-08T18:21:14  <mleise> doesn't that add the square roots twice? 3 in the case of 9
2012-01-08T18:21:26  <thestinger> yes
2012-01-08T18:21:28  <thestinger> {} is a set though
2012-01-08T18:21:33  <mleise> ah i see
2012-01-08T18:21:35  <thestinger> well
2012-01-08T18:21:38  <thestinger> {} is actually a dict
2012-01-08T18:21:43  <thestinger> but {1,2,3} is a set
2012-01-08T18:22:00  <thestinger> weird quirk of the language since a dict is {1:"something", 2:"bla"}
2012-01-08T18:22:25  <mleise> you would be faster if the runtime didn't have to check for duplicates
2012-01-08T18:22:41  <thestinger> well, it doesn't
2012-01-08T18:22:49  <thestinger> it's hash based, so it just overwrites the old one
2012-01-08T18:23:03  <thestinger> anyway that's not really a good way to do it
2012-01-08T18:23:14  <thestinger> I think you can just get all the factors from the prime factors
2012-01-08T18:23:31  <thestinger> and I don't think you need to do a powerset either
2012-01-08T18:23:44  <thestinger> 24 -> 2 2 2 3
2012-01-08T18:24:31  <thestinger> then you cycle through the prime factors and keep dividing until it gives a remainder
2012-01-08T18:24:38  <thestinger> not really sure about the best way to do that
2012-01-08T18:25:37  <thestinger> so you start with 2: 24 / 2 = 12, 12 / 2 = 6, 6 / 2 = 3 and then 3 / 3 = 1
2012-01-08T18:26:29  <thestinger> anyway, something like that
2012-01-08T18:30:45  <mleise> with combinatorics you can calculate how many different divisions are possible, but not their results :D
2012-01-08T18:33:09  *** ikaros <ikaros!~ikaros@dslb-188-107-221-154.pools.arcor-ip.net> has quit IRC (Quit: Ex-Chat)
2012-01-08T18:37:03  *** iglo <iglo!~xy@xdsl-188-118-173-38.dip.osnanet.de> has quit IRC (Quit: .)
2012-01-08T18:41:00  *** grwip <grwip!~grwip@dslb-188-102-045-141.pools.arcor-ip.net> has quit IRC (Quit: Leaving)
2012-01-08T18:48:40  *** Fandekasp <Fandekasp!~Fandekasp@KD182249015196.au-net.ne.jp> has joined #aichallenge
2012-01-08T18:52:49  *** Redgis <Redgis!~Nex@2a01:e34:ee3b:aa40:cc1d:d6e6:8a9a:e4a2> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T18:54:32  *** epicmonkey <epicmonkey!~epicmonke@188.134.41.210> has quit IRC (Ping timeout: 260 seconds)
2012-01-08T19:05:26  *** AlliedEnvy_ <AlliedEnvy_!~AlliedEnv@adsl-68-90-47-163.dsl.hstntx.swbell.net> has joined #aichallenge
2012-01-08T19:05:33  *** AlliedEnvy <AlliedEnvy!~AlliedEnv@adsl-68-90-47-163.dsl.hstntx.swbell.net> has quit IRC (Read error: Connection reset by peer)
2012-01-08T19:30:57  *** foRei <foRei!~ViT@0x4dd7b24d.adsl.cybercity.dk> has quit IRC (Read error: Connection reset by peer)
2012-01-08T19:52:30  <mleise> 65ms... this is getting harder
2012-01-08T20:16:04  <thestinger> lol, I was using a templated to_string function with a stringstream (in C++), and it was slower than converting to a string in python...
2012-01-08T20:16:47  <thestinger> boost::lexical_cast (at least in 1.48) is actually optimized for specific cases so it's faster... but it's still slower than it should be
2012-01-08T20:30:43  <antimatroid> thestinger: what's wrong with ss.string?
2012-01-08T20:30:47  <antimatroid> ss.string()*
2012-01-08T20:31:12  <thestinger> slower than python
2012-01-08T20:31:38  <thestinger> http://sprunge.us/daCT I was doing that
2012-01-08T20:31:49  <thestinger> incredibly slow, it was the bottleneck in something where it really shouldn't have been
2012-01-08T20:32:56  <thestinger> and I really mean it is _slow_
2012-01-08T20:33:02  <thestinger> it's slower than str() in cpython...
2012-01-08T20:33:13  <thestinger> at least for integers
2012-01-08T20:33:54  <thestinger> ./solution  0.16s user 0.00s system 99% cpu 0.158 total
2012-01-08T20:34:01  <thestinger> with the to_string function in that paste
2012-01-08T20:34:13  <thestinger> ./solution  0.02s user 0.00s system 96% cpu 0.024 total
2012-01-08T20:34:24  <thestinger> with boost::lexical_cast<std::string>()
2012-01-08T20:35:04  <thestinger> stringstreams are really slow.
2012-01-08T20:35:11  <thestinger> they are dynamically allocated, and then you feed data into them
2012-01-08T20:35:18  <thestinger> and then _copy_ the data into new string
2012-01-08T20:35:30  <antimatroid> interesting
2012-01-08T20:35:37  <thestinger> and you feed the data into them with operator<<, which is pretty slow for that purpose
2012-01-08T20:35:39  <antimatroid> i wonder if they're the problem with my process struct
2012-01-08T20:35:51  <thestinger> boost::lexical_cast has special cases for things like ints
2012-01-08T20:36:24  <thestinger> anyway, I was really surprised about how slow my to_string function was
2012-01-08T20:36:30  <thestinger> stupid stringstreams...
2012-01-08T20:37:59  <thestinger> http://en.cppreference.com/w/cpp/types/numeric_limits/digits anyway boost uses this for a statically allocated buffer to hold the string for ints
2012-01-08T20:55:17  *** CIA-92 <CIA-92!~CIA@cia.atheme.org> has quit IRC (Ping timeout: 268 seconds)
2012-01-08T21:13:39  *** Chris_0076 <Chris_0076!~Chris_007@adsl-74-176-221-134.asm.bellsouth.net> has joined #aichallenge
2012-01-08T21:22:40  *** TheLinker <TheLinker!~TheLinker@host102.190-226-110.telecom.net.ar> has joined #aichallenge
2012-01-08T21:22:50  *** CIA-45 <CIA-45!~CIA@cia.atheme.org> has joined #aichallenge
2012-01-08T21:26:06  *** JorgeB <JorgeB!~textual@209.66.74.34> has quit IRC (Ping timeout: 244 seconds)
2012-01-08T21:36:03  *** deathcorps <deathcorps!~deathcorp@pool-108-41-43-147.nycmny.fios.verizon.net> has joined #aichallenge
2012-01-08T21:44:31  *** dorisabayon <dorisabayon!~Fandekasp@KD182249007125.au-net.ne.jp> has joined #aichallenge
2012-01-08T21:47:17  *** Fandekasp <Fandekasp!~Fandekasp@KD182249015196.au-net.ne.jp> has quit IRC (Ping timeout: 244 seconds)
2012-01-08T22:00:45  *** deathcorps <deathcorps!~deathcorp@pool-108-41-43-147.nycmny.fios.verizon.net> has quit IRC ()
2012-01-08T22:30:01  <mleise> thestinger: 33ms, huh! I've heard there is also an optimization that filters out odd or even numbers.
2012-01-08T22:50:12  <X-Scale> assembly ftw :)
2012-01-08T22:51:08  <X-Scale> are you using rdtsc to profile the crucial loops ?
2012-01-08T22:51:52  <mleise> no, I used oprofile to get the overview and then two timers in the code
2012-01-08T22:51:59  <mleise> there isn't really much to test
2012-01-08T22:52:20  <mleise> the prime number generation is the most simple algorithm i could come up with for example
2012-01-08T22:53:28  <mleise> whats funny is, that I get down to 0ms, if I execute the program at compile time and just print the result
2012-01-08T22:54:00  <mleise> I really need variable input to feel a need to move anything to runtime
2012-01-08T22:54:36  <thestinger> yeah, not having a variable input takes the motivation out of optimizing
2012-01-08T22:56:02  <thestinger> and ofc D lets you move anything to compile time easily
2012-01-08T22:56:38  <mleise> yep, it doesn't even look like a big change in the code
2012-01-08T22:56:49  <thestinger> in C++ you can use constexpr now, but not without C++11 support
2012-01-08T22:57:06  <thestinger> and you have to write your code functionally for constexpr to work
2012-01-08T23:01:22  *** raemde_ <raemde_!~raemde@dslb-088-073-251-090.pools.arcor-ip.net> has joined #aichallenge
2012-01-08T23:05:09  *** raemde <raemde!~raemde@dslb-088-073-244-064.pools.arcor-ip.net> has quit IRC (Ping timeout: 248 seconds)
2012-01-08T23:12:49  *** mleise <mleise!~marco@dslb-088-070-156-095.pools.arcor-ip.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-08T23:15:48  *** CowTipperVirus <CowTipperVirus!411e19be@gateway/web/freenode/ip.65.30.25.190> has joined #aichallenge
2012-01-08T23:16:24  <CowTipperVirus> @seen janzert
2012-01-08T23:16:24  <contestbot> CowTipperVirus: janzert was last seen in #aichallenge 1 day, 3 hours, 10 minutes, and 39 seconds ago: <janzert> @later tell cowtippervirus sorry, I must not have been clear. The engine warnings/errors and bot stderr output are recorded together. They just aren't being displayed to the user unless the bot crashed/timed out/issued an invalid move
2012-01-08T23:18:46  <CowTipperVirus> @later tell janzert Great.  One possible flaw in that, you said that I should see that if I issued an invalid move?  I'm aware that my bot throws invalid moves a lot.  If a food spawns next to an ant, it tries to move to it (as opposed to staying put).  The game engine returns a "move blocked" message, like the one you posted in your screenshot.  Is that considered an invalid move?  If so, I'm not able to see such warnings
2012-01-08T23:18:46  <contestbot> CowTipperVirus: Ready to serve, my lord.
2012-01-08T23:19:18  <CowTipperVirus> contestbot: lol, you're overly-complimentary...
2012-01-08T23:19:19  <contestbot> CowTipperVirus: No!
2012-01-08T23:24:41  <janzert> yeah, it's the game end state would have to be invalid and I think may actually only be in play for the initial upload test game
2012-01-08T23:24:56  <janzert> which of course the replay never gets recorded for anyway
2012-01-08T23:25:09  *** mleise <mleise!~marco@dslb-088-070-156-095.pools.arcor-ip.net> has joined #aichallenge
2012-01-08T23:25:15  <CowTipperVirus> janzert: ok, thanks
2012-01-08T23:25:44  <janzert> or hmm, maybe sending garbage to the engine (i.e. something it can't parse at all) would trigger it in a regular game too
2012-01-08T23:25:51  <CowTipperVirus> janzert: Yeah, returning that small snippet of warnings and std err output to the players would go a long way
2012-01-08T23:26:28  <CowTipperVirus> janzert: wouldn't that just boot you out of the game though?
2012-01-08T23:26:56  <janzert> right, and give you an end status of invalid
2012-01-08T23:27:17  <CowTipperVirus> ok
2012-01-08T23:27:20  <janzert> it is displayed for games where the player ended with 'crashed', 'timeout' or 'invalid'
2012-01-08T23:27:41  <CowTipperVirus> ok, yeah, that makes sense then
2012-01-08T23:27:43  *** McLeopold <McLeopold!~scott@c-98-247-248-39.hsd1.wa.comcast.net> has joined #aichallenge
2012-01-08T23:28:34  <CowTipperVirus> well, if you decide (as you initially pondered) to open that up no matter the end result of the game, I would certainly appreciate it and use that for debugging
2012-01-08T23:29:07  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has quit IRC (Quit: sleep)
2012-01-08T23:29:22  <CowTipperVirus> not perfect, but it's already in place, and certainly better than what we have now
