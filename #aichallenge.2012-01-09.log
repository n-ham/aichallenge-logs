2012-01-09T00:00:00  *** lhb__ <lhb__!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T00:03:36  *** raemde_ <raemde_!~raemde@dslb-088-073-251-090.pools.arcor-ip.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T00:04:59  *** srgpqt <srgpqt!~srgpqt@206-248-134-38.dsl.teksavvy.com> has quit IRC (Quit: Lost terminal)
2012-01-09T00:29:22  *** u_ <u_!~u_@adsl-75-57-162-84.dsl.emhril.sbcglobal.net> has quit IRC (Quit: u_)
2012-01-09T00:44:53  *** Fandekasp <Fandekasp!~Fandekasp@KD182249015240.au-net.ne.jp> has joined #aichallenge
2012-01-09T00:47:22  *** dorisabayon <dorisabayon!~Fandekasp@KD182249007125.au-net.ne.jp> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T00:54:31  <X-Scale> #357 looks interesting
2012-01-09T01:10:01  *** TheLinker <TheLinker!~TheLinker@host102.190-226-110.telecom.net.ar> has quit IRC (Read error: Connection reset by peer)
2012-01-09T01:16:49  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has quit IRC (Quit: Konversation terminated!)
2012-01-09T01:37:58  *** lhb__ <lhb__!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has quit IRC (Read error: Connection reset by peer)
2012-01-09T01:38:22  *** Garf <Garf!~Garf@78-22-80-252.access.telenet.be> has joined #aichallenge
2012-01-09T01:38:55  *** Elderwol1 <Elderwol1!~elderwolf@totoro.bloodmagic.com> has joined #aichallenge
2012-01-09T01:42:01  *** pairofdice <pairofdice!~pod@dsl-hkibrasgw2-ff67c300-50.dhcp.inet.fi> has joined #aichallenge
2012-01-09T01:43:27  *** Clex_ <Clex_!~clex@mna75-14-88-182-134-18.fbx.proxad.net> has joined #aichallenge
2012-01-09T01:46:16  *** Elderwolf <Elderwolf!~elderwolf@totoro.bloodmagic.com> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T01:46:16  *** welterde <welterde!welterde@thinkbase.srv.welterde.de> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T01:46:16  *** mleise <mleise!~marco@dslb-088-070-156-095.pools.arcor-ip.net> has quit IRC (*.net *.split)
2012-01-09T01:46:16  *** dmj111 <dmj111!~user@c-98-235-94-211.hsd1.pa.comcast.net> has quit IRC (*.net *.split)
2012-01-09T01:46:17  *** cyphase <cyphase!~cyphase@unaffiliated/cyphase> has quit IRC (*.net *.split)
2012-01-09T01:46:18  *** Wraithan <Wraithan!~Wraithan@c-67-189-110-252.hsd1.or.comcast.net> has quit IRC (*.net *.split)
2012-01-09T01:46:18  *** jmcarthur <jmcarthur!~jake@pool-72-89-247-53.nycmny.fios.verizon.net> has quit IRC (*.net *.split)
2012-01-09T01:46:18  *** ivan`` <ivan``!~ivan@li125-242.members.linode.com> has quit IRC (*.net *.split)
2012-01-09T01:46:18  *** ztfw <ztfw!~ztfw@ztfw.net> has quit IRC (*.net *.split)
2012-01-09T01:46:19  *** klutometis <klutometis!klutometis@pdpc/supporter/professional/klutometis> has quit IRC (*.net *.split)
2012-01-09T01:46:19  *** Clex <Clex!~clex@mna75-14-88-182-134-18.fbx.proxad.net> has quit IRC (*.net *.split)
2012-01-09T01:46:19  *** jbroman <jbroman!~jbroman@taurine.csclub.uwaterloo.ca> has quit IRC (*.net *.split)
2012-01-09T01:46:19  *** artart78 <artart78!~artart78@unaffiliated/artart78> has quit IRC (*.net *.split)
2012-01-09T01:49:41  *** mleise <mleise!~marco@dslb-088-070-156-095.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T01:49:41  *** dmj111 <dmj111!~user@c-98-235-94-211.hsd1.pa.comcast.net> has joined #aichallenge
2012-01-09T01:49:41  *** cyphase <cyphase!~cyphase@unaffiliated/cyphase> has joined #aichallenge
2012-01-09T01:49:41  *** Wraithan <Wraithan!~Wraithan@c-67-189-110-252.hsd1.or.comcast.net> has joined #aichallenge
2012-01-09T01:49:41  *** jmcarthur <jmcarthur!~jake@pool-72-89-247-53.nycmny.fios.verizon.net> has joined #aichallenge
2012-01-09T01:49:41  *** ivan`` <ivan``!~ivan@li125-242.members.linode.com> has joined #aichallenge
2012-01-09T01:49:41  *** ztfw <ztfw!~ztfw@ztfw.net> has joined #aichallenge
2012-01-09T01:49:41  *** klutometis <klutometis!klutometis@pdpc/supporter/professional/klutometis> has joined #aichallenge
2012-01-09T01:49:41  *** jbroman <jbroman!~jbroman@taurine.csclub.uwaterloo.ca> has joined #aichallenge
2012-01-09T01:49:41  *** artart78 <artart78!~artart78@unaffiliated/artart78> has joined #aichallenge
2012-01-09T01:55:04  *** Jak_o_Shadows <Jak_o_Shadows!~Fake@CPE-144-136-214-52.sa.bigpond.net.au> has joined #aichallenge
2012-01-09T02:00:42  <pairofdice> Oh man, PE #24 fits into a oneliner aswell
2012-01-09T02:07:49  *** CowTipperVirus <CowTipperVirus!411e19be@gateway/web/freenode/ip.65.30.25.190> has quit IRC (Ping timeout: 258 seconds)
2012-01-09T02:17:58  <X-Scale> I'm trying to solve #345 now
2012-01-09T02:21:35  *** mleise <mleise!~marco@dslb-088-070-156-095.pools.arcor-ip.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T02:24:20  <pairofdice> I'm just on my way to level 2
2012-01-09T02:32:04  <X-Scale> Oh...I've not even finished level 1 yet. I'm just trying to find some interesting problems.
2012-01-09T02:35:00  <pairofdice> ahh
2012-01-09T02:35:33  <X-Scale> I love oneliners, but I'm forcing myself to do it the hard way.
2012-01-09T02:50:35  *** Palmik <Palmik!~palmik@man-208-200.pks.muni.cz> has joined #aichallenge
2012-01-09T02:55:07  *** epicmonkey <epicmonkey!~epicmonke@188.134.41.210> has joined #aichallenge
2012-01-09T03:10:55  *** epicmonkey <epicmonkey!~epicmonke@188.134.41.210> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T03:39:54  *** Blkt <Blkt!~user@89-96-199-46.ip13.fastwebnet.it> has joined #aichallenge
2012-01-09T03:43:40  *** raemde <raemde!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T03:45:20  *** dorisabayon <dorisabayon!~Fandekasp@KD182249005087.au-net.ne.jp> has joined #aichallenge
2012-01-09T03:48:21  *** Fandekasp <Fandekasp!~Fandekasp@KD182249015240.au-net.ne.jp> has quit IRC (Ping timeout: 248 seconds)
2012-01-09T03:57:04  *** mviel_ <mviel_!~mviel@45.227.73.86.rev.sfr.net> has joined #aichallenge
2012-01-09T04:01:01  *** mviel__ <mviel__!~mviel@213.163.164.204> has joined #aichallenge
2012-01-09T04:04:39  *** mviel_ <mviel_!~mviel@45.227.73.86.rev.sfr.net> has quit IRC (Ping timeout: 260 seconds)
2012-01-09T04:13:48  *** welterde <welterde!welterde@thinkbase.srv.welterde.de> has joined #aichallenge
2012-01-09T04:19:29  *** Jak_o_Shadows1 <Jak_o_Shadows1!~Fake@CPE-144-136-214-52.sa.bigpond.net.au> has joined #aichallenge
2012-01-09T04:21:42  *** Jak_o_Shadows <Jak_o_Shadows!~Fake@CPE-144-136-214-52.sa.bigpond.net.au> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T04:29:19  *** Cyndre_ <Cyndre_!~Cyndre@DOCSIS-182-133.cable-lynx.net> has joined #aichallenge
2012-01-09T04:31:50  *** mcstar <mcstar!~mcstar@adsl-89-132-36-11.monradsl.monornet.hu> has joined #aichallenge
2012-01-09T04:32:22  *** Cyndre <Cyndre!~Cyndre@DOCSIS-182-133.cable-lynx.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T04:36:05  <pairofdice> Harr, #24 in 70ms
2012-01-09T04:36:21  *** Blkt` <Blkt`!~user@89-96-199-46.ip13.fastwebnet.it> has joined #aichallenge
2012-01-09T04:36:22  *** Blkt <Blkt!~user@89-96-199-46.ip13.fastwebnet.it> has quit IRC (Quit: ERC Version 5.3 (IRC client for Emacs))
2012-01-09T04:36:32  *** Blkt` <Blkt`!~user@89-96-199-46.ip13.fastwebnet.it> has quit IRC (Remote host closed the connection)
2012-01-09T04:36:53  *** Blkt <Blkt!~user@89-96-199-46.ip13.fastwebnet.it> has joined #aichallenge
2012-01-09T04:40:41  *** sashaSochka <sashaSochka!515fb6a7@gateway/web/freenode/ip.81.95.182.167> has joined #aichallenge
2012-01-09T04:46:13  <mcstar> i couldnt even read it in that time, i measured
2012-01-09T04:55:07  <pairofdice> Funny!
2012-01-09T04:57:45  <mcstar> pairofdice: 35ms
2012-01-09T04:58:58  <mcstar> truth is my alg. runs in 370ms, but using c++'s next_permutation its only 35ms
2012-01-09T04:59:35  <mcstar> but i wrote a similar function
2012-01-09T04:59:47  <mcstar> i forgot if its in c++
2012-01-09T05:00:50  <antimatroid> iterating through permutations is surprisingly easy
2012-01-09T05:01:13  <antimatroid> iterating through subgroups i found a bit messier
2012-01-09T05:01:19  <antimatroid> but doable
2012-01-09T05:02:12  <mcstar> i only have a haskell version of next_permutation, probably i thought why bother if its in the standard libs
2012-01-09T05:03:19  <Blkt> good (late) morning everyone
2012-01-09T05:04:09  <mcstar> hah, he has a late morning automatic message too
2012-01-09T05:04:16  <mcstar> he is prepared
2012-01-09T05:05:59  <antimatroid> https://gist.github.com/1582289
2012-01-09T05:06:16  <antimatroid> that's my basic bijection/permutation implementation, ++ being the relevant code snippet, i assume you did it like that?
2012-01-09T05:07:09  <antimatroid> http://pastebin.com/WFUNgi5X
2012-01-09T05:07:20  <antimatroid> that's the grossest ++ iterator i have for a type of bijection
2012-01-09T05:07:25  <mcstar> its elaborate but yes
2012-01-09T05:07:47  <mcstar> gross
2012-01-09T05:08:19  <pairofdice> uh oh
2012-01-09T05:09:12  <antimatroid> it's for bijections between two different games, so you need to partition both player sets up so players in the same set have the same number of strategies, then iterating through the game bijections for these partitions
2012-01-09T05:09:16  <mcstar> where is the dollar sign???
2012-01-09T05:09:32  <mcstar> ?><":L":{}_+
2012-01-09T05:09:37  <mcstar> ||+_))((*&*&&^^%$#$#$
2012-01-09T05:09:38  <mcstar> $
2012-01-09T05:09:40  <mcstar> thanks
2012-01-09T05:09:44  * pairofdice covers his eyes
2012-01-09T05:11:23  <mcstar> i switch to en layout
2012-01-09T05:11:25  <mcstar> ed
2012-01-09T05:13:24  <antimatroid> the number of bijections one has to iterate through explodes pretty quickly obviously though
2012-01-09T05:13:38  <antimatroid> so checking for equality of games by iterating through all strategy combinations is not very efficient
2012-01-09T05:13:59  <antimatroid> there is a nice way to do it which i haven't fully fleshed out
2012-01-09T05:14:28  <antimatroid> the running time gets worse the further players preferences over the pure strategy space are from a total order rather than a weak order
2012-01-09T05:14:43  <antimatroid> towards* a weaker order
2012-01-09T05:15:40  <antimatroid> errr, sorry, checking for equality of games by iterating through all game bijections
2012-01-09T05:15:52  <antimatroid> and for each game bijection all pure strategies
2012-01-09T05:16:08  * antimatroid stops ranting
2012-01-09T05:17:01  <mcstar> my haskell one runs in 430 ms, too bad
2012-01-09T05:18:00  <mcstar> c++ is so fast because it can mutably update elements
2012-01-09T05:18:23  <mcstar> once i have learned monads im gonna try to do that too
2012-01-09T05:18:52  <mcstar> antimatroid: isnt there some clever way of doing that?
2012-01-09T05:18:53  <antimatroid> lol, :{} is a sweet smiley
2012-01-09T05:18:59  <antimatroid> to do what?
2012-01-09T05:19:36  <mcstar> checking for equivalence
2012-01-09T05:19:47  <antimatroid> depends on how you define equivalence
2012-01-09T05:20:05  <mcstar> antimatroid: for your pleasure, and to motivate you towards haskell: http://codepad.org/RZAS2wgn
2012-01-09T05:20:39  <antimatroid> lol cnt
2012-01-09T05:20:39  <antimatroid> cunt
2012-01-09T05:20:43  <antimatroid> i'm so australian
2012-01-09T05:20:54  <mcstar> i read count for cunt too
2012-01-09T05:21:49  <antimatroid> not gonna lie, that looks gross :p
2012-01-09T05:22:09  <mcstar> yeah, similar to your c++ code
2012-01-09T05:22:20  *** X-Scale <X-Scale!email@sgi-ultra64.broker.freenet6.net> has quit IRC (Remote host closed the connection)
2012-01-09T05:22:25  <antimatroid> yeah but i wrote it, so i sort of know what's going on :P
2012-01-09T05:22:36  <mcstar> im kidding
2012-01-09T05:22:49  <mcstar> in the c++ one, its apparent whats going on
2012-01-09T05:23:02  <mcstar> if i didnt write this one, i couldnt figure it out
2012-01-09T05:23:25  * pairofdice hugs itertools
2012-01-09T05:23:42  <mcstar> snake lover
2012-01-09T05:24:07  <pairofdice> print(next(itertools.islice(itertools.permutations('0123456789'), 999999, None)))
2012-01-09T05:25:27  <mcstar> i dont get it
2012-01-09T05:25:43  <mcstar> fuck
2012-01-09T05:25:47  <mcstar> i read it isSlice
2012-01-09T05:26:16  <mcstar> pairofdice: so it returns a generator<
2012-01-09T05:26:18  <mcstar> ?
2012-01-09T05:26:34  <pairofdice> yes
2012-01-09T05:26:57  <mcstar> whoa
2012-01-09T05:27:00  <mcstar> that was fast
2012-01-09T05:27:38  <mcstar> pairofdice: it is way slower in pypy wtf?
2012-01-09T05:27:50  <pairofdice> I haven't tried it in pypy
2012-01-09T05:28:07  <mcstar> it seems faster in python3
2012-01-09T05:28:13  <mcstar> but i cant measure it
2012-01-09T05:28:31  <mcstar> (afaik profiling is idiotic in pytohn)
2012-01-09T05:28:55  *** replore <replore!~replore@ntkngw298122.kngw.nt.ftth.ppp.infoweb.ne.jp> has quit IRC (Remote host closed the connection)
2012-01-09T05:30:47  <pairofdice> Though because of python I don't know how to do some stuff 'the hard way'
2012-01-09T05:33:16  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has joined #aichallenge
2012-01-09T05:37:36  * antimatroid would really love to see someone upload a contest winning bot as a v1 on the last day before entries close without publicly claiming ownership
2012-01-09T05:37:59  <antimatroid> obviously i can't do that myself anymore :P
2012-01-09T05:38:30  <mcstar> huh_
2012-01-09T05:38:33  <mcstar> ?
2012-01-09T05:38:49  <mcstar> why is that?
2012-01-09T05:38:57  <antimatroid> because it would be mysterious :P
2012-01-09T05:39:05  <pairofdice> :)
2012-01-09T05:39:22  <mcstar> myterious->annoying an aggrevating
2012-01-09T05:39:29  <antimatroid> if you hadn't noticed i'm a fan of the last day upload :P
2012-01-09T05:39:39  <antimatroid> i wasn't quite as bad for planet wars but pretty much the same
2012-01-09T05:39:52  <antimatroid> why annoying and aggrevating?
2012-01-09T05:40:00  <mcstar> antimatroid: you played on tcp before the end
2012-01-09T05:40:01  <antimatroid> they still have to have spent the time needed to write the bot
2012-01-09T05:40:04  <antimatroid> yeah
2012-01-09T05:40:04  <mcstar> so it doesnt count
2012-01-09T05:40:12  <antimatroid> i think it doe
2012-01-09T05:40:20  <antimatroid> it could be the mysterious tcp bot
2012-01-09T05:40:21  <mcstar> you shouldtn not give ANY indication that you exist
2012-01-09T05:40:24  <mcstar> and then uploa
2012-01-09T05:40:25  <mcstar> d
2012-01-09T05:40:27  <antimatroid> everyone would think it's someone in the top x
2012-01-09T05:40:56  <mcstar> why annoying? because it means that you cant see the source of the winning bot
2012-01-09T05:41:04  <mcstar> and mysteries are annoying
2012-01-09T05:41:06  <antimatroid> they could release it anonymously?
2012-01-09T05:41:14  <mcstar> you didnt say they would
2012-01-09T05:41:23  <antimatroid> i didn't say they wouldn't either :p
2012-01-09T05:41:50  <antimatroid> bonus points if it's written in brainfuck
2012-01-09T05:41:55  <antimatroid> (converted to)
2012-01-09T05:42:08  <antimatroid> or follows a theme different to the actual game with variable names
2012-01-09T05:46:17  <mcstar> dont smoke that whole joint, man
2012-01-09T05:49:25  <mcstar> heh
2012-01-09T05:49:31  <mcstar> i applied for a job
2012-01-09T05:49:47  <mcstar> some firm needs c++/qt developer
2012-01-09T05:57:09  <antimatroid> what kind of firms?
2012-01-09T05:57:19  <antimatroid> i think i'm going to try and get into algo trading after phd
2012-01-09T05:57:33  <antimatroid> sounds fun and lucrative
2012-01-09T05:58:18  <mcstar> well, the offer came to a physicists' mailing list, some company needs a user interface for their measuring equipment
2012-01-09T05:58:41  <mcstar> job would take couple of months
2012-01-09T05:58:52  <mcstar> and i could do it fro home
2012-01-09T05:59:03  <mcstar> so, theres nothing to lose
2012-01-09T05:59:42  <mcstar> i was speaking to some guys from morgan stanley
2012-01-09T05:59:56  <mcstar> when there was a job-market somthing at out uni
2012-01-09T06:00:04  <mcstar> what do you call it?
2012-01-09T06:00:14  <mcstar> our*
2012-01-09T06:00:59  <antimatroid> not sure but i think i know what you mean
2012-01-09T06:01:03  <antimatroid> working from home would be awesome
2012-01-09T06:01:17  <antimatroid> aka working whilst travelling imo
2012-01-09T06:01:45  <mcstar> so one guy was a mathematician, the other was an engineer
2012-01-09T06:01:53  <mcstar> software ofc
2012-01-09T06:02:24  <mcstar> ms is heavy on the functional and distributed side of computing
2012-01-09T06:02:47  <mcstar> the software guy did really open up when i asked details though
2012-01-09T06:03:00  <mcstar> im not sure of he was just bullshitting me or didt want to leak trade secrets
2012-01-09T06:03:16  <mcstar> (i think he was a bit incompetent to the area i was asking him about)
2012-01-09T06:03:50  <mcstar> the mathematician said there are challenges
2012-01-09T06:03:58  <mcstar> and everything would be fine and great
2012-01-09T06:04:21  <mcstar> and they have some programs that you could there before graduation
2012-01-09T06:04:32  <mcstar> (means 5 years here)
2012-01-09T06:04:42  <mcstar> could do/participate
2012-01-09T06:04:52  <mcstar> and you get dough
2012-01-09T06:05:13  <mcstar> but probably after graduation, they happily take a mathematician/physicist
2012-01-09T06:05:25  <mcstar> ofc there must be some tests
2012-01-09T06:06:28  <mcstar> damn
2012-01-09T06:06:34  <mcstar> first did -> didnt
2012-01-09T06:06:58  <mcstar> i hate when my typo turns the sentence into the exact opposite of what im trying to say
2012-01-09T06:13:15  <antimatroid> yeah
2012-01-09T06:13:17  <antimatroid> sounds fun though
2012-01-09T06:13:24  <antimatroid> that's all i really want, something fun to do
2012-01-09T06:13:39  <antimatroid> after that i'll try and optimise monetary compensation for my efforts
2012-01-09T06:13:51  <antimatroid> well, whilst surviving
2012-01-09T06:14:57  <mcstar> from what i heard these financial firms make you bleed bad
2012-01-09T06:15:02  <mcstar> long hours
2012-01-09T06:15:05  <mcstar> and all
2012-01-09T06:15:15  <mcstar> but they give away money generously
2012-01-09T06:15:47  <mcstar> probably you do a couple of years at one of these, and go to hawaii afterwards
2012-01-09T06:15:52  <mcstar> or to tasmania in your case
2012-01-09T06:16:05  <antimatroid> yeah, not sure i'd do it as a career
2012-01-09T06:16:15  <antimatroid> but go in to make some money and set myself up
2012-01-09T06:16:21  <antimatroid> then work out what to do from there
2012-01-09T06:16:41  <antimatroid> although i'm already a slave to learning
2012-01-09T06:17:49  <antimatroid> i'm $35k in debt atm, but that's to the government, no interest (except inflation) and i don't actually have to start paying it off until i'm earning like $50k a year
2012-01-09T06:17:55  <antimatroid> or never if i don't earn that much
2012-01-09T06:17:58  *** dabino <dabino!558d47d9@gateway/web/freenode/ip.85.141.71.217> has joined #aichallenge
2012-01-09T06:18:37  <mcstar> i have some dept too
2012-01-09T06:18:40  <antimatroid> we might not have free uni, but at least there are sane ways to access money
2012-01-09T06:19:21  <antimatroid> and there are government caps on how much an undergrad can pay each year
2012-01-09T06:19:32  <antimatroid> to try and limit fees
2012-01-09T06:20:03  <antimatroid> that's not phrased right, a cap on how much a uni can charge an undergrad for a full time load
2012-01-09T06:20:08  <antimatroid> probably excepting medicine
2012-01-09T06:32:33  *** Blkt <Blkt!~user@89-96-199-46.ip13.fastwebnet.it> has quit IRC (Remote host closed the connection)
2012-01-09T06:34:14  *** GarfTop <GarfTop!~Garf@78-22-80-252.access.telenet.be> has joined #aichallenge
2012-01-09T06:35:54  *** Blkt <Blkt!~user@89-96-199-46.ip13.fastwebnet.it> has joined #aichallenge
2012-01-09T06:37:42  *** Garf <Garf!~Garf@78-22-80-252.access.telenet.be> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T06:42:37  *** raemde <raemde!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has quit IRC (Ping timeout: 252 seconds)
2012-01-09T06:45:12  *** Fandekasp <Fandekasp!~Fandekasp@KD182249003075.au-net.ne.jp> has joined #aichallenge
2012-01-09T06:48:30  *** dorisabayon <dorisabayon!~Fandekasp@KD182249005087.au-net.ne.jp> has quit IRC (Ping timeout: 248 seconds)
2012-01-09T06:58:52  <mcstar> darmok and jalad at tanagra
2012-01-09T07:04:10  <mcstar> shaka, when the wall fell
2012-01-09T07:07:35  *** sashaSochka <sashaSochka!515fb6a7@gateway/web/freenode/ip.81.95.182.167> has quit IRC (Ping timeout: 258 seconds)
2012-01-09T07:09:48  <pairofdice> with sails unfurled
2012-01-09T07:13:13  <mcstar> sokath, his eyes uncovered!
2012-01-09T07:16:19  <mcstar> the beast at tanagra: #47
2012-01-09T07:22:32  *** Jak_o_Shadows1 <Jak_o_Shadows1!~Fake@CPE-144-136-214-52.sa.bigpond.net.au> has quit IRC (Remote host closed the connection)
2012-01-09T07:36:20  <mcstar> shaka...
2012-01-09T07:40:41  <mcstar> SOKATH 47$
2012-01-09T07:40:51  <mcstar> #47
2012-01-09T07:44:36  <mcstar> lol
2012-01-09T07:44:44  <mcstar> i like the wording of 33
2012-01-09T07:45:15  <mcstar> "an inexperienced mathematician in attempting to simplify" 49/98 to 4/8
2012-01-09T07:45:51  <mcstar> i woudlnt say inexperienced....
2012-01-09T07:49:29  <pairofdice> I don't get it
2012-01-09T07:50:27  <mcstar> which part<
2012-01-09T07:50:29  <mcstar> ?
2012-01-09T07:50:43  <pairofdice> The part from start to end
2012-01-09T07:51:00  <mcstar> that part...
2012-01-09T07:51:07  <mcstar> seems easy enough
2012-01-09T08:07:50  *** ikaros <ikaros!~ikaros@dslb-188-107-221-154.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T08:08:03  *** raemde <raemde!~raemde@ip-90-186-0-105.web.vodafone.de> has joined #aichallenge
2012-01-09T08:11:48  <mcstar> hm
2012-01-09T08:11:52  <mcstar> sucky problem
2012-01-09T08:20:48  *** dabino <dabino!558d47d9@gateway/web/freenode/ip.85.141.71.217> has quit IRC (Quit: Page closed)
2012-01-09T08:21:02  <mcstar> ah ok
2012-01-09T08:22:32  <mcstar> sokath!
2012-01-09T08:27:08  *** raemde <raemde!~raemde@ip-90-186-0-105.web.vodafone.de> has quit IRC (Remote host closed the connection)
2012-01-09T08:32:21  <mcstar> 34 was easy
2012-01-09T08:36:25  *** dici <dici!~Dici@port-92-204-80-76.dynamic.qsc.de> has joined #aichallenge
2012-01-09T08:42:54  <mcstar> 35 too
2012-01-09T08:43:50  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has joined #aichallenge
2012-01-09T08:43:50  *** ChanServ sets mode: +o amstan
2012-01-09T08:47:01  *** raemde <raemde!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T08:54:35  <mcstar> 36
2012-01-09T08:55:35  *** raemde <raemde!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has quit IRC (Read error: Connection reset by peer)
2012-01-09T08:55:57  *** raemde <raemde!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T09:03:06  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has quit IRC (Remote host closed the connection)
2012-01-09T09:10:13  *** u_ <u_!~u_@adsl-75-57-162-84.dsl.emhril.sbcglobal.net> has joined #aichallenge
2012-01-09T09:18:10  <amstan> mcstar: no! 42!
2012-01-09T09:18:34  <mcstar> hey
2012-01-09T09:18:52  <mcstar> im getting there
2012-01-09T09:32:40  <mcstar> 37 check
2012-01-09T09:37:41  *** foRei <foRei!~ViT@0x4dd7b24d.adsl.cybercity.dk> has joined #aichallenge
2012-01-09T09:39:05  *** Kurnevsky <Kurnevsky!~Errins@46.56.235.133> has joined #aichallenge
2012-01-09T09:45:23  *** dorisabayon <dorisabayon!~Fandekasp@KD182249015247.au-net.ne.jp> has joined #aichallenge
2012-01-09T09:49:28  *** Fandekasp <Fandekasp!~Fandekasp@KD182249003075.au-net.ne.jp> has quit IRC (Ping timeout: 276 seconds)
2012-01-09T09:52:08  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T09:56:51  *** Anilm3 <Anilm3!~anil@13.Red-83-38-146.dynamicIP.rima-tde.net> has joined #aichallenge
2012-01-09T10:02:26  *** mleise <mleise!~marco@dslb-088-070-156-095.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T10:21:35  *** dorisabayon <dorisabayon!~Fandekasp@KD182249015247.au-net.ne.jp> has quit IRC (Ping timeout: 255 seconds)
2012-01-09T10:27:29  *** Dici_ <Dici_!~Dici@port-92-204-116-85.dynamic.qsc.de> has joined #aichallenge
2012-01-09T10:27:29  *** dici <dici!~Dici@port-92-204-80-76.dynamic.qsc.de> has quit IRC (Disconnected by services)
2012-01-09T10:27:33  *** Dici_ is now known as dici
2012-01-09T10:29:14  *** Anilm3 <Anilm3!~anil@13.Red-83-38-146.dynamicIP.rima-tde.net> has quit IRC (Quit: Lost terminal)
2012-01-09T10:41:00  *** AlliedEnvy_ <AlliedEnvy_!~AlliedEnv@adsl-68-90-47-163.dsl.hstntx.swbell.net> has quit IRC (Ping timeout: 268 seconds)
2012-01-09T10:44:19  *** dapplegate <dapplegate!~dan@206.217.79.178> has joined #aichallenge
2012-01-09T10:58:45  *** Palmik <Palmik!~palmik@man-208-200.pks.muni.cz> has quit IRC (Read error: Connection reset by peer)
2012-01-09T10:59:30  *** Palmik <Palmik!~palmik@man-208-200.pks.muni.cz> has joined #aichallenge
2012-01-09T11:21:41  *** amstan <amstan!~amstan@206-248-158-116.dsl.teksavvy.com> has joined #aichallenge
2012-01-09T11:21:41  *** ChanServ sets mode: +o amstan
2012-01-09T11:29:04  *** dapplegate_ <dapplegate_!~dan@206.217.79.178> has joined #aichallenge
2012-01-09T11:29:08  *** dapplegate <dapplegate!~dan@206.217.79.178> has quit IRC (Quit: Ex-Chat)
2012-01-09T11:38:14  *** JorgeB <JorgeB!~textual@209.66.74.34> has joined #aichallenge
2012-01-09T11:43:04  *** dr- <dr-!~dr-@ble59-1-82-66-133-150.fbx.proxad.net> has joined #aichallenge
2012-01-09T11:47:02  *** mikewintermute <mikewintermute!~mikewinte@188-223-213-21.zone14.bethere.co.uk> has joined #aichallenge
2012-01-09T11:49:04  *** alehorst <alehorst!~alehorst@177.42.27.163> has quit IRC (Ping timeout: 276 seconds)
2012-01-09T11:58:50  *** raemde_ <raemde_!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T12:01:44  *** raemde <raemde!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T12:15:23  *** Blkt <Blkt!~user@89-96-199-46.ip13.fastwebnet.it> has quit IRC (Quit: ERC Version 5.3 (IRC client for Emacs))
2012-01-09T12:31:26  <rwest> mcstar: I see somebody has been doing problems over the weekend
2012-01-09T12:31:39  <mcstar> who?
2012-01-09T12:31:48  <mcstar> :)
2012-01-09T12:32:40  <mcstar> rwest: i did 6 in 2 hours today
2012-01-09T12:32:55  <rwest> nice
2012-01-09T12:33:10  <mcstar> they were pretty easy
2012-01-09T12:33:18  <mcstar> and boring
2012-01-09T12:33:31  <rwest> heh
2012-01-09T12:33:36  <mcstar> probably im not doing any more pe for a couple of days
2012-01-09T12:33:42  <rwest> I been making the mother of all spreadsheets this weekend
2012-01-09T12:33:48  <rwest> student loans are the devil
2012-01-09T12:34:48  <mcstar> managing your finances?
2012-01-09T12:35:10  <rwest> yea
2012-01-09T12:35:21  <rwest> my student loans cost almost as much as my rent
2012-01-09T12:35:22  <rwest> lol
2012-01-09T12:35:50  <rwest> trying to work on the fastest way to pay them off
2012-01-09T12:35:55  <rwest> real world problems lol
2012-01-09T12:36:03  <mcstar> i applied for a job today, c++/qt, i need it for tuition
2012-01-09T12:36:05  <mcstar> fee
2012-01-09T12:36:37  <mcstar> these thinks suck soo much
2012-01-09T12:36:42  <mcstar> g
2012-01-09T12:37:01  <mcstar> id be a great millionare
2012-01-09T12:37:52  <mcstar> rwest: you dont have to worry much with this new job, do you?
2012-01-09T12:38:22  <rwest> mcstar: it's not that big of a pay raise from my previous job, but it does help
2012-01-09T12:39:38  <mcstar> rwest: what percent is the tax?
2012-01-09T12:39:51  <mcstar> was the amount you told me taxed or not?
2012-01-09T12:39:57  <rwest> not
2012-01-09T12:40:07  <rwest> I am at about 28%
2012-01-09T12:47:24  <mleise> My solution to EP#23 is super fast now: http://projecteuler.net/thread=23;page=8 (bottom)
2012-01-09T12:49:01  *** dapplegate_ <dapplegate_!~dan@206.217.79.178> has quit IRC (Remote host closed the connection)
2012-01-09T12:49:41  <mleise> you all have to give me kudos points, nao
2012-01-09T12:49:51  <mcstar> how fast?
2012-01-09T12:49:58  <mleise> ~30 ms
2012-01-09T12:50:14  <mleise> 2Ghz Core 2 Duo mobile cpu
2012-01-09T12:50:17  <mcstar> ncie
2012-01-09T12:50:24  <mcstar> those are fast processors man
2012-01-09T12:50:31  <mcstar> XD
2012-01-09T12:50:44  <mleise> there are slower ones at least
2012-01-09T12:50:46  *** McLeopold <McLeopold!~scott@c-98-247-248-39.hsd1.wa.comcast.net> has left #aichallenge
2012-01-09T12:50:56  <mcstar> man
2012-01-09T12:51:01  <mcstar> thats like 300 lines
2012-01-09T12:51:24  <mcstar> now calculate how much mone you would have earned for that
2012-01-09T12:51:28  <mcstar> y
2012-01-09T12:52:05  <mleise> if the execution speed = money, a lot towards my first implementation that ran in 1 minute 40 seconds
2012-01-09T12:52:20  <mcstar> no, sloc is money
2012-01-09T12:52:27  <mcstar> cause THAT equals time
2012-01-09T12:52:32  <mleise> but the returns were dimishing once i reached 100ms or so
2012-01-09T12:52:50  <mleise> hours of work for only a little speed-up
2012-01-09T12:52:55  <mcstar> heh
2012-01-09T12:52:57  <mcstar> exactly
2012-01-09T12:53:01  <mcstar> still, you rock
2012-01-09T12:53:30  <mcstar> (mostly genuine from my part, tiny bit sarcastic)
2012-01-09T12:53:40  <mleise> sloc = money? I have just earned 172 credits
2012-01-09T12:53:54  <mleise> since it is not 300 lines
2012-01-09T12:53:54  <mcstar> oh
2012-01-09T12:54:02  <mcstar> 170?
2012-01-09T12:54:41  <mleise> then again the asm solution is only 90 loc :)
2012-01-09T12:55:03  <mcstar> mine run in 1.3 secs
2012-01-09T12:55:18  <mcstar> and was based on a faulty paste of conor's
2012-01-09T12:55:37  <mcstar> (i had a haskell solution before that)
2012-01-09T12:55:54  <mcstar> but that one, runs in 8 secs
2012-01-09T12:57:41  <mcstar> mleise: check out mine
2012-01-09T12:57:55  <mcstar> you like it, i expect a kudos from you
2012-01-09T12:58:59  <mcstar> updated
2012-01-09T12:59:07  <mcstar> that foldl' wasnt necessary
2012-01-09T12:59:21  <pairofdice> kudos is not an accepted currency
2012-01-09T13:00:00  <mleise> mcstar: where is all the code necessary to do the computations?
2012-01-09T13:00:08  <mcstar> ?
2012-01-09T13:00:12  <mcstar> joke?
2012-01-09T13:00:22  <mcstar> if it is, good one
2012-01-09T13:00:39  *** JorgeB <JorgeB!~textual@209.66.74.34> has quit IRC (Quit: Textual IRC Client: http://www.textualapp.com/)
2012-01-09T13:00:56  *** JorgeB <JorgeB!~textual@209.66.74.34> has joined #aichallenge
2012-01-09T13:01:29  <mcstar> thx
2012-01-09T13:01:50  <mleise> you get the shortness price
2012-01-09T13:02:28  <mleise> *prize
2012-01-09T13:03:28  *** asloane <asloane!~andy@hep.cat> has joined #aichallenge
2012-01-09T13:04:35  *** mikewintermute <mikewintermute!~mikewinte@188-223-213-21.zone14.bethere.co.uk> has quit IRC (Quit: mikewintermute)
2012-01-09T13:06:58  <mcstar> pairofdice: wanna share your friend key>
2012-01-09T13:07:00  <mcstar> ?
2012-01-09T13:07:13  <mcstar> mleise: you too
2012-01-09T13:07:23  <mcstar> wtf i thought i ha dyou
2012-01-09T13:08:19  <pairofdice> 43250423120960_68ebd6d0d3ba722a45ac44a4cc18e4bd
2012-01-09T13:08:41  <mcstar> thx
2012-01-09T13:15:55  *** Israfel <Israfel!~jeff@99-0-14-82.lightspeed.frokca.sbcglobal.net> has quit IRC (Ping timeout: 260 seconds)
2012-01-09T13:28:11  *** Israfel <Israfel!~jeff@99-0-14-82.lightspeed.frokca.sbcglobal.net> has joined #aichallenge
2012-01-09T13:36:52  <mleise> my puzzle solve rate is rather low
2012-01-09T13:37:13  <mcstar> seems you just startrd
2012-01-09T13:37:37  *** thestinger <thestinger!~strcat@CPE98fc1165cb6f-CM00159a09b2d0.cpe.net.cable.rogers.com> has joined #aichallenge
2012-01-09T13:37:55  *** cyphase <cyphase!~cyphase@unaffiliated/cyphase> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T13:39:34  *** amstan_ <amstan_!~amstan@206-248-158-116.dsl.teksavvy.com> has joined #aichallenge
2012-01-09T13:39:34  *** ChanServ sets mode: +o amstan_
2012-01-09T13:39:44  <mleise> yes, when thestinger acted up about milliseconds yesterday I joined ^^
2012-01-09T13:40:32  <mcstar> :)
2012-01-09T13:41:26  <thestinger> mcstar: lol, were you here when I had that speed problem with string conversion yesterday?
2012-01-09T13:41:46  <mcstar> i dont recall string conversions
2012-01-09T13:42:15  <thestinger> http://sprunge.us/DMbT well, I was using a function like this
2012-01-09T13:42:22  <thestinger> which is the method suggested everywhere
2012-01-09T13:42:32  <thestinger> it's slower than cpython
2012-01-09T13:42:39  <thestinger> that might not seem bad, since it's just a silly string conversion
2012-01-09T13:42:50  <thestinger> but it made one of my solutions take 5 minutes
2012-01-09T13:42:57  <thestinger> I switched to boost::lexical_cast and it takes 23ms
2012-01-09T13:43:07  <mcstar> lol
2012-01-09T13:43:21  <mcstar> wtf
2012-01-09T13:43:48  <mcstar> why dont they overloa d the  >> operator?
2012-01-09T13:44:43  <mcstar> a stringstream is a heavy object i think
2012-01-09T13:44:55  <mcstar> i wouldnt use for a casual thing
2012-01-09T13:45:01  <mcstar> i mean id reuse it as much as possible
2012-01-09T13:45:09  <mcstar> you can clear it and such
2012-01-09T13:45:15  <mcstar> maybe make it static
2012-01-09T13:45:52  <mcstar> i dont know what a lexical cast is
2012-01-09T13:48:24  <thestinger> mcstar: well, I tried making it static
2012-01-09T13:48:38  <thestinger> then you have to also clear it, etc.
2012-01-09T13:48:45  <thestinger> it was a lot faster but still slower than python...
2012-01-09T13:48:59  <thestinger> mcstar: lexical_cast is a template basically
2012-01-09T13:49:20  <thestinger> lexical_cast<std::string>(5533)
2012-01-09T13:49:30  <thestinger> lexical_cast<int>("55")
2012-01-09T13:49:41  <thestinger> they have it specialized for certain types like an int
2012-01-09T13:50:26  <mcstar> i think in your example there are too much copying going on]
2012-01-09T13:50:31  <thestinger> well
2012-01-09T13:50:37  <thestinger> stringstream is dynamically allocated
2012-01-09T13:50:43  *** cyphase <cyphase!~cyphase@unaffiliated/cyphase> has joined #aichallenge
2012-01-09T13:50:50  <thestinger> and then you send chars into it, one by one
2012-01-09T13:50:54  <thestinger> when you do <<
2012-01-09T13:51:02  <thestinger> then you copy the data out of it (the string)
2012-01-09T13:51:22  <thestinger> and it does like 3 dynamic allocations for each 'ss << t'
2012-01-09T13:51:53  <thestinger> for an int, you know the maximum number of digits
2012-01-09T13:52:01  <mcstar> anyway since you do ss << t
2012-01-09T13:52:13  <mcstar> T already has a method to stringify itslef
2012-01-09T13:52:30  <thestinger> yeah, but they don't expose it :(
2012-01-09T13:53:13  <thestinger> anyway, boost::lexical_cast is great
2012-01-09T13:53:14  <mcstar> what is t?
2012-01-09T13:53:16  <mcstar> T
2012-01-09T13:53:23  <mcstar> was an it?
2012-01-09T13:53:26  <mcstar> int?
2012-01-09T13:53:27  <thestinger> an int
2012-01-09T13:53:29  <mleise> so lexical_cast<T>(U) is where to!T(U) comes from in D
2012-01-09T13:53:30  <thestinger> yeah
2012-01-09T13:53:53  *** Redgis <Redgis!~Nex@2a01:e34:ee3b:aa40:cc1d:d6e6:8a9a:e4a2> has joined #aichallenge
2012-01-09T13:54:03  <mcstar> lexical_cast is not in the standard
2012-01-09T13:54:23  <thestinger> yeah, but boost is header-only and written by people in the standards committee anyway
2012-01-09T13:54:27  <mcstar> D probably existed before boost
2012-01-09T13:54:43  <mleise> no
2012-01-09T13:55:09  <thestinger> mleise: boost::array is from 2001
2012-01-09T13:55:10  <mleise> it copied boost, or at least Alexandrei did
2012-01-09T13:55:16  <thestinger> oops, meant to respond to mcstar
2012-01-09T13:55:33  <mcstar> thats old
2012-01-09T13:55:48  <thestinger> and it became std::array
2012-01-09T13:56:00  <thestinger> lots of the standard just gets taken from boost
2012-01-09T13:56:22  <mcstar> thestinger: but whats the problem with c int-string conversion?
2012-01-09T13:56:27  <mcstar> was that slow too?
2012-01-09T13:56:27  <thestinger> and then gcc often just starts by using the boost implementation
2012-01-09T13:56:48  <mcstar> sprintf?
2012-01-09T13:57:05  <thestinger> that's pretty slow, but not nearly as slow
2012-01-09T13:57:13  <thestinger> but then I would have to make a function for each built-in int type
2012-01-09T13:57:13  <mleise> you need a fixed size buffer for that.
2012-01-09T13:57:18  <thestinger> because they need different buffer sizes
2012-01-09T13:57:19  <mcstar> thats ok
2012-01-09T13:57:24  <thestinger> and it wouldn't work for something like a gmp int
2012-01-09T13:57:28  <thestinger> etc
2012-01-09T13:57:35  <mcstar> gmp has their own conversions
2012-01-09T13:57:42  <thestinger> yeah, silly example
2012-01-09T13:57:50  <mcstar> i dont expect that to be especially fast
2012-01-09T13:57:59  <thestinger> but I wanted a generic to_string function, and specializing it for 100 cases would be annoying
2012-01-09T13:58:03  <mcstar> it it run ok, when i did conversionsin some example
2012-01-09T13:58:15  <thestinger> it's the type of stuff that should be in the standard
2012-01-09T13:58:16  <mcstar> thestinger: what problem was that?
2012-01-09T13:58:26  <mleise> mcstar: you would increase the holy LOC with printf
2012-01-09T13:58:43  <mcstar> huh?
2012-01-09T13:59:00  <thestinger> I could just add specializations with sprintf etc.
2012-01-09T13:59:11  <mleise> when you have to write specialisation and privide it with a buffer etc
2012-01-09T13:59:12  <thestinger> I was actually starting to do it
2012-01-09T13:59:17  <thestinger> and then I found lexical_cast
2012-01-09T13:59:27  <mcstar> well, if i want my matrix printed
2012-01-09T13:59:34  <mcstar> i probabl do it with c functions
2012-01-09T13:59:37  <mcstar> not iostream
2012-01-09T13:59:42  <mleise> what matrix?
2012-01-09T13:59:46  <mcstar> just an exmaple
2012-01-09T13:59:49  <mleise> is it an euler problem?
2012-01-09T13:59:51  <mcstar> i liek The Matrix
2012-01-09T14:00:08  <mcstar> thestinger: what problem was that?
2012-01-09T14:00:11  <thestinger> well, there's atoi
2012-01-09T14:00:16  <mleise> this matrix requires unicode symbols and terminal colors (green)
2012-01-09T14:00:28  <thestinger> mcstar: I've needed string <-> number for many of them
2012-01-09T14:00:40  <thestinger> itoa isn't standard though
2012-01-09T14:00:48  <mcstar> yeah
2012-01-09T14:00:49  *** Redgis <Redgis!~Nex@2a01:e34:ee3b:aa40:cc1d:d6e6:8a9a:e4a2> has quit IRC (Quit: ... mains libres)
2012-01-09T14:01:00  <mcstar> stupid name
2012-01-09T14:01:05  <mcstar> atoi=argument to int
2012-01-09T14:01:09  <mcstar> itoa??
2012-01-09T14:01:15  <thestinger> array to int
2012-01-09T14:01:16  <mcstar> integer to argument?
2012-01-09T14:01:19  <mcstar> hehe
2012-01-09T14:01:31  <thestinger> since C strings are just null-terminated char arrays
2012-01-09T14:01:34  <rwest> itoa isn't needed though
2012-01-09T14:01:38  <rwest> sprintf
2012-01-09T14:01:49  <mleise> you can also try and hash 0-999 and use % 1000 and / 1000 to subdivide the number you want to turn into a string, how does that sound?
2012-01-09T14:01:56  <thestinger> rwest: what's the maximum number of digits for an 'int'?
2012-01-09T14:02:02  <thestinger> won't vary per platform?
2012-01-09T14:02:06  <thestinger> that's an annoying thing to deal with
2012-01-09T14:02:32  <mleise> unless you work with embedded devices, I assume it is always 32-bit
2012-01-09T14:02:33  <rwest> thestinger: jumped in at the end of this, guess i should scroll up for the initial issue heh
2012-01-09T14:02:33  *** Redgis <Redgis!~Nex@2a01:e34:ee3b:aa40:cc1d:d6e6:8a9a:e4a2> has joined #aichallenge
2012-01-09T14:02:42  <mcstar> theres always sizeof
2012-01-09T14:03:25  <thestinger> I don't think you can write a portable itoa without special cases
2012-01-09T14:03:34  <thestinger> I was reading about it and the freebsd implementation is broken on many platforms
2012-01-09T14:03:48  <thestinger> since you need to deal with signed ints
2012-01-09T14:04:24  <rwest> I have never had an issue using sprintf to convert
2012-01-09T14:04:54  <rwest> I don't get why the size of the int matters?
2012-01-09T14:05:04  <thestinger> well, the number of digits
2012-01-09T14:05:07  <mcstar> he is talking about implementing sprintf
2012-01-09T14:05:10  <rwest> oh
2012-01-09T14:05:10  <mcstar> sort of
2012-01-09T14:05:11  <thestinger> so you can make an appropriately sized buffer
2012-01-09T14:05:21  <mcstar> or not
2012-01-09T14:05:27  <rwest> why would you want to implement sprintf?
2012-01-09T14:05:31  <rwest> when it's there"?
2012-01-09T14:05:34  <thestinger> I don't...
2012-01-09T14:05:39  <mcstar> :)
2012-01-09T14:05:45  <thestinger> you need to use a buffer with sprintf
2012-01-09T14:06:01  <thestinger> you can get the size you need with std::numeric_limits in C++
2012-01-09T14:06:12  <thestinger> anyway
2012-01-09T14:06:18  <rwest> snprintf!
2012-01-09T14:06:18  <thestinger> this is a tangent from the real conversation :P
2012-01-09T14:06:27  <thestinger> no
2012-01-09T14:06:28  *** McLeopold_ <McLeopold_!~scott@c-98-247-248-39.hsd1.wa.comcast.net> has joined #aichallenge
2012-01-09T14:06:29  <thestinger> that doesn't help
2012-01-09T14:06:40  <thestinger> you still need to know how big you need the buffer if you want it to actually convert properly
2012-01-09T14:06:48  <mcstar> you know what the max number of chaarcters you need
2012-01-09T14:07:05  <rwest> snprintf(str, sizeof(int), ...
2012-01-09T14:07:11  <thestinger> snprintf stops you from having a buffer overflow, you'll still have a bug if it's too small
2012-01-09T14:07:13  <McLeopold_> thestinger, you made me solve euler problems to keep ahead of you :P
2012-01-09T14:07:18  <thestinger> McLeopold_: lol
2012-01-09T14:07:45  <thestinger> rwest: anyway, the original topic:
2012-01-09T14:07:48  <mcstar> rwest: i dont understand that
2012-01-09T14:07:57  <thestinger> I want a generic to_string function
2012-01-09T14:08:02  <mcstar> you copy 4 byte?
2012-01-09T14:08:18  <thestinger> so I was going to specialize it for each built-in type, and use stringstreams for other types
2012-01-09T14:08:19  <rwest> mcstar: whoops fail
2012-01-09T14:08:30  <thestinger> but I found boost::lexical_cast and it already does that for me
2012-01-09T14:08:46  <thestinger> I should try doing it anyway
2012-01-09T14:09:02  <thestinger> can probably do it faster than them since I want from_string and to_string
2012-01-09T14:09:13  <thestinger> lexical_cast is more general
2012-01-09T14:09:16  <rwest> pow(2,(sizeof(int)*8-1))
2012-01-09T14:09:30  <thestinger> it goes type -> string representation -> type
2012-01-09T14:09:38  <thestinger> not just type -> string or string -> type
2012-01-09T14:09:58  *** McLeopold_ <McLeopold_!~scott@c-98-247-248-39.hsd1.wa.comcast.net> has quit IRC (Remote host closed the connection)
2012-01-09T14:09:59  <rwest> the max size
2012-01-09T14:10:02  <rwest> then go from there
2012-01-09T14:11:11  *** McLeopold <McLeopold!~scott@c-98-247-248-39.hsd1.wa.comcast.net> has joined #aichallenge
2012-01-09T14:11:31  <rwest> thestinger: I just use tcl or php for any of the problems on PE that require many conversions
2012-01-09T14:12:08  <thestinger> rwest: well, I don't just want it for euler :P
2012-01-09T14:12:14  <thestinger> anyway, I discovered something great
2012-01-09T14:12:21  <thestinger> C++11 has std::to_string :)
2012-01-09T14:12:34  <thestinger> http://en.cppreference.com/w/cpp/string/basic_string/to_string
2012-01-09T14:12:54  <rwest> nice
2012-01-09T14:13:02  <rwest> I should really get better at C++
2012-01-09T14:13:10  <rwest> maybe for the next challenge I will use it
2012-01-09T14:15:53  *** Paradoxial <Paradoxial!~Paradoxia@pool-108-28-22-94.washdc.fios.verizon.net> has joined #aichallenge
2012-01-09T14:16:24  *** g0llum <g0llum!~g0llum@82.113.119.4> has joined #aichallenge
2012-01-09T14:17:13  <McLeopold> can someone message me with my nick so I can test xchat-gnome?
2012-01-09T14:17:29  <mleise> rwest: try with log_10 +/- something
2012-01-09T14:17:41  *** Paradoxial <Paradoxial!~Paradoxia@pool-108-28-22-94.washdc.fios.verizon.net> has quit IRC (Client Quit)
2012-01-09T14:17:54  <pairofdice> McLeopold
2012-01-09T14:17:55  <pairofdice> oops
2012-01-09T14:18:03  <McLeopold> wait, it kinda worked...
2012-01-09T14:18:07  *** conor_f <conor_f!~pqaw9ijh2@86-46-53-2-dynamic.b-ras3.mvw.galway.eircom.net> has joined #aichallenge
2012-01-09T14:18:10  <McLeopold> do it in this main window again
2012-01-09T14:18:14  <pairofdice> McLeopold:
2012-01-09T14:18:15  <rwest> McLeopold: !
2012-01-09T14:18:30  <McLeopold> thx
2012-01-09T14:18:43  <McLeopold> I see the popup, but when I mouse over, it blurs, that's weird
2012-01-09T14:18:48  <mleise> 20 bytes = sufficient for a 64-bit int
2012-01-09T14:18:56  <thestinger> yeah, std::to_string is perfect
2012-01-09T14:19:43  <thestinger> well not really but whatever
2012-01-09T14:19:55  <thestinger> stringstream: ./string  8.24s user 0.00s system 99% cpu 8.246 total
2012-01-09T14:20:02  <thestinger> std::to_string: ./string  1.78s user 0.00s system 99% cpu 1.779 total
2012-01-09T14:20:07  <thestinger> boost::lexical_cast: g++ -std=c++0x -O3 -s -Wall -Wextra -o string string.cc
2012-01-09T14:20:11  <thestinger> oops, what
2012-01-09T14:20:19  <thestinger> ./string  1.08s user 0.00s system 99% cpu 1.087 total
2012-01-09T14:20:22  <thestinger> *
2012-01-09T14:22:50  <thestinger> ./string  1.25s user 0.00s system 99% cpu 1.251 total
2012-01-09T14:22:53  <thestinger> that's sprintf
2012-01-09T14:24:53  <thestinger> might as well just use boost
2012-01-09T14:26:43  <thestinger> McLeopold: I'll have to catch up to you again now :)
2012-01-09T14:27:37  <McLeopold> I intend to stay ahead :P
2012-01-09T14:30:13  <mleise> If I do more Eulers, I'll probably want to share some code. Maybe even make it one project in Eclipse. How do you organize your code? All in one directory? Copy&Paste?
2012-01-09T14:31:19  <thestinger> I just have an euler directory with subdirs for all the problems
2012-01-09T14:31:27  <thestinger> and then multiple solutions in each
2012-01-09T14:31:56  <thestinger> mkdir {1..100}
2012-01-09T14:31:58  <thestinger> :P
2012-01-09T14:32:08  <mleise> oh well... :p
2012-01-09T14:32:22  <McLeopold> I did build a package in python to generate prime numbers, but I lost it :(
2012-01-09T14:32:36  <McLeopold> I think I made a euler package
2012-01-09T14:33:09  <mleise> McLeopold: sounds reasonable to me, since many problems evolve around primes or other clearly defined ranges of numbers
2012-01-09T14:33:22  <thestinger> I have a fast sieve but I can't efficiently extend it if it ends up not being large enough
2012-01-09T14:33:44  <McLeopold> yeah, I had a function that would generate blocks in millions, and save it pickled to the filesystem
2012-01-09T14:33:56  <McLeopold> so, it was slow to load, but I didn't have to process
2012-01-09T14:34:15  <thestinger> well, save it in /dev/shm (or /tmp if you have a sane distro :P)
2012-01-09T14:34:38  <McLeopold> I usually favor time over space in all my algorithms
2012-01-09T14:35:09  <mleise> McLeopold: loading a file with numbers ... isn't that cheating?
2012-01-09T14:35:24  <mleise> It's like hardcoding part of the solution
2012-01-09T14:35:32  <McLeopold> it's memozation
2012-01-09T14:36:25  <mleise> Sure, I can let the compiler generate the result of an Euler problem and then execute writeln("134133"); and be done ^^
2012-01-09T14:36:43  <mleise> i just memoized the result of the problem at hand
2012-01-09T14:37:01  <McLeopold> well, I'm memorizing things like prime numbers or other functions, then use them in problems
2012-01-09T14:37:15  <McLeopold> I wrote the code to generate the numbers, so I don't feel it's cheating
2012-01-09T14:38:00  <thestinger> primes_below(10**7) is probably faster than reading them from the disk anyway
2012-01-09T14:38:16  <McLeopold> probably not
2012-01-09T14:38:22  <McLeopold> it depends on how you load it
2012-01-09T14:38:22  <mleise> thestinger: then again they are in the FS cache
2012-01-09T14:38:45  <McLeopold> you could to memory mapped files
2012-01-09T14:39:17  <thestinger> primes_below(10**7) takes under a second in python
2012-01-09T14:39:48  <thestinger> I'm just using eratosthenes sieve with the easy optimizations
2012-01-09T14:42:12  <thestinger> so I only check odd numbers, and only up to sqrt(limit) (but written as i * i < n + 1 because it's faster to multiply with each iteration than do a single sqrt call)
2012-01-09T14:42:29  <amstan_> oh wow
2012-01-09T14:42:30  <amstan_> lol
2012-01-09T14:42:46  <thestinger> and then you only need to cancel out certain multiples of i
2012-01-09T14:43:03  <thestinger> well, certain multiples of i*
2012-01-09T14:43:28  <amstan_> that's rather fishy though
2012-01-09T14:43:34  <thestinger> http://sprunge.us/OZhU anyway that's the relevant code in C++, in python I used a slice and it's hard to understand
2012-01-09T14:43:38  <thestinger> amstan_: why?
2012-01-09T14:43:42  <amstan_> the sqrt call taking longer than 10**7 calls to i*i
2012-01-09T14:43:49  <thestinger> well, in C++
2012-01-09T14:43:51  <amstan_> nvm, less
2012-01-09T14:44:04  <thestinger> the i*i gets optimized away to nothing
2012-01-09T14:44:10  <thestinger> the time is lost in the noise of the for loop
2012-01-09T14:44:19  <amstan_> how does i*i get optimized?
2012-01-09T14:44:27  <thestinger> it's a single opcode
2012-01-09T14:44:30  <thestinger> it doesn't matter
2012-01-09T14:44:36  <amstan_> oh, cool
2012-01-09T14:44:38  <amstan_> i didn't know that
2012-01-09T14:44:43  <thestinger> i = 5; is probably slower
2012-01-09T14:44:49  <amstan_> lol
2012-01-09T14:45:01  <amstan_> probably
2012-01-09T14:45:38  <amstan_> i guess it depends on the arch though, not sure if i would do that on avr
2012-01-09T14:46:12  <thestinger> sqrt() is probably even slower (relatively) on a crappier processor where they don't have an FPU
2012-01-09T14:47:15  <thestinger> anyway I think it's bottlenecked by memory bandwidth
2012-01-09T14:47:54  <thestinger> in python the trick is to do stuff with slices, but I find it hard to read
2012-01-09T14:51:08  *** amstan_ <amstan_!~amstan@206-248-158-116.dsl.teksavvy.com> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T14:52:49  *** Accoun <Accoun!~1@static-213-88-39-97.chebnet.ru> has quit IRC ()
2012-01-09T15:08:20  *** Accoun <Accoun!~1@static-213-88-39-97.chebnet.ru> has joined #aichallenge
2012-01-09T15:19:11  *** alehorst <alehorst!~alehorst@187.112.57.108> has joined #aichallenge
2012-01-09T15:28:19  *** dapplegate <dapplegate!~dan@206.217.79.178> has joined #aichallenge
2012-01-09T15:33:38  <thestinger> http://projecteuler.net/problem=78 ugh
2012-01-09T15:33:40  <thestinger> I'm an idiot
2012-01-09T15:33:47  <thestinger> this is just an integer partition question
2012-01-09T15:34:50  <pairofdice> hummm
2012-01-09T15:35:07  <thestinger> there are 5 coins
2012-01-09T15:35:12  <thestinger> so your target is 5
2012-01-09T15:35:21  <thestinger> and the integers you're using are [1..5]
2012-01-09T15:35:37  <thestinger> I have n_partitions written already
2012-01-09T15:35:59  <thestinger> I actually looked for more partition problems but somehow this one didn't register in my brain...
2012-01-09T15:38:18  <thestinger> ugh... too slow in python
2012-01-09T15:38:24  <thestinger> C++ it is...
2012-01-09T15:44:04  <thestinger> oh
2012-01-09T15:44:13  <thestinger> and my n_partitions uses dynamic programming :)
2012-01-09T15:44:35  <thestinger> I can just make a special function for this that reuses the data structure
2012-01-09T15:44:37  <thestinger> hm
2012-01-09T15:49:29  *** dvladim <dvladim!~dvladim@85.113.131.65> has joined #aichallenge
2012-01-09T15:51:13  *** Kurnevsky <Kurnevsky!~Errins@46.56.235.133> has quit IRC (Quit: Instantbird 1.0)
2012-01-09T15:58:47  *** epicmonkey <epicmonkey!~epicmonke@188.134.41.210> has joined #aichallenge
2012-01-09T16:00:51  *** dvladim <dvladim!~dvladim@85.113.131.65> has quit IRC (Ping timeout: 252 seconds)
2012-01-09T16:03:55  <cyphase> Facebook Hacker Cup 2012: https://www.facebook.com/hackercup
2012-01-09T16:07:09  <conor_f> real address :(
2012-01-09T16:07:19  <conor_f> Any idea what the challenges would be like?
2012-01-09T16:07:34  <pairofdice> I'm not clicking any urls with facebook in it :)
2012-01-09T16:10:55  *** rwest_ <rwest_!~rwest@c-24-63-48-172.hsd1.ma.comcast.net> has quit IRC (Quit: Lost terminal)
2012-01-09T16:14:00  <conor_f> heh
2012-01-09T16:14:17  <conor_f> I'm considering it because of the possibility of a free tshirt lol
2012-01-09T16:14:35  <conor_f> I'm prepared to give away my privacy for the price of a tshirt, yes, I know
2012-01-09T16:22:15  *** choas <choas!~lars@p4FDC4B05.dip.t-dialin.net> has joined #aichallenge
2012-01-09T16:24:50  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has joined #aichallenge
2012-01-09T16:34:16  <thestinger> okay, this attempt was hopeless
2012-01-09T16:36:56  *** Palmik <Palmik!~palmik@man-208-200.pks.muni.cz> has quit IRC (Remote host closed the connection)
2012-01-09T16:38:03  *** magiik <magiik!~magik@unaffiliated/magiik> has quit IRC (Ping timeout: 268 seconds)
2012-01-09T16:38:19  *** conor_f <conor_f!~pqaw9ijh2@86-46-53-2-dynamic.b-ras3.mvw.galway.eircom.net> has quit IRC (Ping timeout: 276 seconds)
2012-01-09T16:38:28  <mcstar> thestinger: theres some new addition> http://en.cppreference.com/w/cpp/string/basic_string/to_string
2012-01-09T16:38:50  <mcstar> can i see one of yours when you are testing performance?
2012-01-09T16:39:17  <mcstar> one of your code*
2012-01-09T16:39:18  <mcstar> s
2012-01-09T16:39:20  <mcstar> damn
2012-01-09T16:39:32  <thestinger> I was just going in a loop and converting an int to a string
2012-01-09T16:39:40  <thestinger> and making sure it wasn't optimized out
2012-01-09T16:39:52  <mcstar> changin i character?
2012-01-09T16:39:56  <mcstar> 1
2012-01-09T16:40:02  *** magiik <magiik!~magik@unaffiliated/magiik> has joined #aichallenge
2012-01-09T16:40:05  <thestinger> well, int to string
2012-01-09T16:40:18  <mcstar> but different ints always?
2012-01-09T16:40:23  <thestinger> yes
2012-01-09T16:40:25  <mcstar> ok
2012-01-09T16:40:45  <thestinger> for (unsigned i = 0; i < 10000000; i++) { volatile std::string s = whatever(i); } basically
2012-01-09T16:40:49  <mcstar> i just try to put the stringstream and iostream class into place in my head
2012-01-09T16:41:07  <mcstar> well
2012-01-09T16:41:19  <mcstar> it always calls its constructor/destructor
2012-01-09T16:41:24  <thestinger> boost::lexical_cast is faster than sprintf, even if I use a char array with sprintf instead of a std::string
2012-01-09T16:41:30  <mcstar> i dont think the compiler can optimize that away
2012-01-09T16:41:46  <thestinger> mcstar: volatile says "you can't optimize this" anyway iirc
2012-01-09T16:41:55  <mcstar> yes
2012-01-09T16:42:04  <mcstar> im just saying
2012-01-09T16:42:15  <mcstar> it might not create a new object on the stack
2012-01-09T16:42:22  *** X-Scale <X-Scale!email@sgi-ultra64.broker.freenet6.net> has joined #aichallenge
2012-01-09T16:42:26  <mcstar> but it still needs to call its constructors and destructors
2012-01-09T16:42:31  <thestinger> ah
2012-01-09T16:42:33  <mcstar> (not plulars)
2012-01-09T16:43:16  <thestinger> maybe
2012-01-09T16:43:18  <thestinger> gcc is pretty smart
2012-01-09T16:43:46  <mcstar> yes, idk, just a thoguht
2012-01-09T16:43:50  <thestinger> reducing the scope of variables results in the same performance (or better), even with a constructor/destructor to worry about
2012-01-09T16:44:16  <thestinger> anyway, stringstreams are slow
2012-01-09T16:44:30  <mcstar> i used them in my bot
2012-01-09T16:44:40  <thestinger> to_string is a bit slower than sprintf (which makes sense, it uses std::string)
2012-01-09T16:44:47  <thestinger> but somehow boost::lexical_cast is faster than both
2012-01-09T16:44:58  <thestinger> so yeah, just going to use that everywhere :P
2012-01-09T16:45:19  <thestinger> far more generic/powerful than std::to_string anyway
2012-01-09T16:50:18  <thestinger> anyway, trying to do 78
2012-01-09T16:50:26  <thestinger> running n_partitions for each n is too slow
2012-01-09T16:51:16  <thestinger> but I'm just going to make a version which goes forever
2012-01-09T16:52:04  <mcstar> DONT share your solution
2012-01-09T16:52:09  <thestinger> I won't
2012-01-09T16:52:11  <thestinger> lol
2012-01-09T16:52:13  <thestinger> I haven't solved it at all
2012-01-09T16:52:29  <thestinger> mcstar: have you written n_partitions yet?
2012-01-09T16:52:33  <thestinger> for the other partition problems
2012-01-09T16:52:39  *** conor_f <conor_f!~pqaw9ijh2@86-46-53-2-dynamic.b-ras3.mvw.galway.eircom.net> has joined #aichallenge
2012-01-09T16:52:41  <thestinger> 31 and 76
2012-01-09T16:52:48  <mcstar> take a look at my solved problems
2012-01-09T16:52:52  <mcstar> oh
2012-01-09T16:52:58  <mcstar> ill check 31
2012-01-09T16:53:15  <mcstar> oh
2012-01-09T16:53:18  <thestinger> you could solve 31 other ways
2012-01-09T16:53:20  <mcstar> that one was fun
2012-01-09T16:53:25  <pairofdice> That's some sort of knapsack problem?
2012-01-09T16:53:31  <thestinger> pairofdice: integer partition problem
2012-01-09T16:53:38  <pairofdice> Yeah, exactly
2012-01-09T16:53:41  <thestinger> ah
2012-01-09T16:53:51  <thestinger> anyway, I wrote two n_partition functions
2012-01-09T16:53:56  <thestinger> T n_partitions(T target) {
2012-01-09T16:54:11  <thestinger> that one assumes that [1..target] are all used
2012-01-09T16:54:13  <thestinger> T n_partitions(T target, Iter begin, Iter end) {
2012-01-09T16:54:15  <mcstar> thestinger: its in the forum
2012-01-09T16:54:20  <thestinger> and then that for 36/76
2012-01-09T16:54:27  <McLeopold> 78 is kicking my butt
2012-01-09T16:54:36  <thestinger> well
2012-01-09T16:54:36  <mcstar> http://projecteuler.net/thread=31;page=8
2012-01-09T16:54:50  <thestinger> I can solve 31 and 76 in like 6ms
2012-01-09T16:55:07  <thestinger> but 78 requires a new function
2012-01-09T16:55:20  <mcstar> my solution is still very concise i think
2012-01-09T16:55:24  <McLeopold> I've 11224 as divisible my 100,000
2012-01-09T16:55:30  <mcstar> i know it takes ages but ...
2012-01-09T16:56:19  <thestinger> mcstar: none of those things in the forums look like a generic solution
2012-01-09T16:56:49  *** pairofdice <pairofdice!~pod@dsl-hkibrasgw2-ff67c300-50.dhcp.inet.fi> has quit IRC (Quit: When cryptography is outlawed, bayl bhgynjf jvyy unir cevinpl.)
2012-01-09T16:57:07  <mcstar> thestinger: when i encounter a problem that needs a general one be sure ill write one
2012-01-09T16:57:18  <thestinger> 76 and 78 :)
2012-01-09T16:57:29  <mcstar> far ahead
2012-01-09T16:57:31  <mcstar> they are
2012-01-09T16:58:04  <thestinger> McLeopold: do you have a fast function to solve integer partitions?
2012-01-09T16:58:15  <McLeopold> it's kinda fast
2012-01-09T16:58:17  <thestinger> even with that I can't solve 78 in C++ without taking forever
2012-01-09T16:58:31  <thestinger> McLeopold: how long to solve 31 and 76?
2012-01-09T16:58:40  <McLeopold> 76 was instant
2012-01-09T16:58:41  <mcstar> ah
2012-01-09T16:58:44  <mcstar> ive seen that one
2012-01-09T16:58:52  <McLeopold> 31 was 3 years ago :P
2012-01-09T16:59:00  *** JorgeB <JorgeB!~textual@209.66.74.34> has quit IRC (Quit: Textual IRC Client: http://www.textualapp.com/)
2012-01-09T16:59:09  <mcstar> McLeopold: so did it halt?
2012-01-09T16:59:11  <thestinger> yeah 76 is instant in python :P
2012-01-09T16:59:14  *** JorgeB <JorgeB!~textual@209.66.74.34> has joined #aichallenge
2012-01-09T16:59:52  <McLeopold> I'm building up a matrix to solve
2012-01-09T17:00:05  <McLeopold> kinda link in the 76 forum
2012-01-09T17:00:07  <McLeopold> like
2012-01-09T17:01:46  <McLeopold> is there any special relationship between partition numbers?
2012-01-09T17:02:11  <thestinger> well
2012-01-09T17:02:17  <thestinger> I'm building up an array
2012-01-09T17:02:30  <thestinger> so I just need to modify it to use realloc basically (or .resize with a vector)
2012-01-09T17:02:36  <McLeopold> so you have to solve all the smaller numbers first?
2012-01-09T17:02:42  <thestinger> yes
2012-01-09T17:02:45  <McLeopold> me too
2012-01-09T17:02:50  <McLeopold> but it takes forever
2012-01-09T17:02:58  <thestinger> hm
2012-01-09T17:03:01  <thestinger> well
2012-01-09T17:03:03  <thestinger> I haven't actually tried yet
2012-01-09T17:03:25  <McLeopold> I can get 1000 solved in about 1 second, but then it just gets really slow after that
2012-01-09T17:04:04  <thestinger> *** glibc detected *** ./solution: realloc(): invalid next size: 0x0000000002546010 ***
2012-01-09T17:04:07  <thestinger> ugh
2012-01-09T17:05:45  *** JorgeB <JorgeB!~textual@209.66.74.34> has quit IRC (Ping timeout: 252 seconds)
2012-01-09T17:08:16  <asloane> haha you guys are doing project euler now?
2012-01-09T17:08:42  <thestinger> yeah :)
2012-01-09T17:08:48  <asloane> i got hooked on that several years ago.  last one i did was tetronimoes
2012-01-09T17:09:14  <thestinger> ok, not going to use malloc/realloc/free
2012-01-09T17:09:18  <thestinger> vector it is :P
2012-01-09T17:09:37  <mcstar> asloane: is it i or l ?(the 1)
2012-01-09T17:13:15  <mcstar> now he is hooked on the problems again
2012-01-09T17:15:12  <asloane> i
2012-01-09T17:15:42  <asloane> it's a stupid handle but the domain was open
2012-01-09T17:15:43  <mcstar> i suspected so
2012-01-09T17:15:54  <mcstar> but ive seen on some blog referred to you as alkon
2012-01-09T17:16:06  <asloane> whatever
2012-01-09T17:16:18  <asloane> i should have picked something like.. xkcd
2012-01-09T17:16:28  <mcstar> its cool..
2012-01-09T17:16:42  <mcstar> i havent read your code yet, tbh
2012-01-09T17:16:50  <mcstar> just perused some of it
2012-01-09T17:18:27  <mcstar> asloane: congrats, you ranked very well
2012-01-09T17:18:36  <asloane> thanks.  i'm kind of surprised by that.
2012-01-09T17:20:22  <mcstar> thestinger: whats your baseline?
2012-01-09T17:20:31  <mcstar> time/iterations
2012-01-09T17:20:39  <thestinger> for which?
2012-01-09T17:20:42  <mcstar> string problem
2012-01-09T17:20:47  <thestinger> oh
2012-01-09T17:20:53  <thestinger> let me code it again, sec
2012-01-09T17:20:59  <mcstar> :)
2012-01-09T17:21:00  <asloane> ha, i wonder who http://tcpants.com/player/A1k0n_dub is
2012-01-09T17:21:13  <asloane> mcstar: i'm totally blanking on what you called your entry
2012-01-09T17:21:37  <mcstar> it was the best AgentSmith around
2012-01-09T17:21:42  <asloane> oh yeah
2012-01-09T17:21:43  <mcstar> or any kind of agent
2012-01-09T17:22:15  <mcstar> ah, those guys couldnt deal with defeat, and they are still developing?
2012-01-09T17:22:16  <asloane> #2 in hungary
2012-01-09T17:22:26  <mcstar> yeah, denes got better
2012-01-09T17:22:29  <mcstar> and mine worse
2012-01-09T17:22:40  <mcstar> i suspect in the last 2 days i added better global startegy
2012-01-09T17:22:49  <mcstar> but had a bad impact on my battle
2012-01-09T17:22:51  <asloane> surprisingly i beat pguillory right at the end.  the choice of opponents really shook up the ranking
2012-01-09T17:22:58  <mcstar> and i ended up losing too much ants unnecessarily
2012-01-09T17:23:06  <asloane> bummer
2012-01-09T17:23:19  <asloane> i was afraid to touch it by the end
2012-01-09T17:23:51  <mcstar> seeing the results, i suspect i woudlnt end up in top100 anyway, so im not that disappointed
2012-01-09T17:23:56  <thestinger> ./string  1.12s user 0.01s system 99% cpu 1.125 total
2012-01-09T17:24:06  <thestinger> mcstar: http://sprunge.us/QABE
2012-01-09T17:24:12  <mcstar> thanks
2012-01-09T17:24:34  <thestinger> constexpr is actually pretty need
2012-01-09T17:25:10  <thestinger> neat*
2012-01-09T17:25:29  <asloane> omg aerique's multiplayer asteroids looks sweet
2012-01-09T17:27:28  *** ikaros <ikaros!~ikaros@dslb-188-107-221-154.pools.arcor-ip.net> has quit IRC (Quit: Ex-Chat)
2012-01-09T17:27:49  <mcstar> thestinger: 4.1s unopt. 1.7 -O3
2012-01-09T17:29:03  <thestinger> gcc 4.6?
2012-01-09T17:29:17  <mcstar> 4 6 2
2012-01-09T17:29:32  <mcstar> it seems the boost one can be optimized much agresively
2012-01-09T17:29:39  *** conor_f <conor_f!~pqaw9ijh2@86-46-53-2-dynamic.b-ras3.mvw.galway.eircom.net> has quit IRC (Quit: leaving)
2012-01-09T17:29:50  <mcstar> 4.7s -> 3.7 in the to_string case
2012-01-09T17:30:02  <thestinger> try sprintf
2012-01-09T17:30:08  <thestinger> even with a static char buffer
2012-01-09T17:30:19  <thestinger> slower than boost here, faster than to_string though
2012-01-09T17:31:12  <thestinger> aw, PGO didn't help :(
2012-01-09T17:32:14  <thestinger> oh, it speeds up to_string a tiny bit
2012-01-09T17:32:45  <mcstar> sprintf:
2012-01-09T17:32:49  <mcstar> 2.5->2.5
2012-01-09T17:33:21  <thestinger> with a char buffer?
2012-01-09T17:33:26  <mcstar> zep
2012-01-09T17:33:35  <thestinger> yeah, that surprises me
2012-01-09T17:33:45  <thestinger> boost optimized more than glibc
2012-01-09T17:33:48  *** sigh <sigh!~sigh@ppp114-153.static.internode.on.net> has quit IRC (Remote host closed the connection)
2012-01-09T17:35:25  <mcstar> thestinger: 2.667s
2012-01-09T17:35:28  <mcstar> with boost
2012-01-09T17:35:32  <mcstar> hehe
2012-01-09T17:35:33  <mcstar> o3
2012-01-09T17:35:39  <mcstar> whats the trick you might ask
2012-01-09T17:35:53  <thestinger> wait, sprintf was faster?
2012-01-09T17:36:00  <mcstar> in this case
2012-01-09T17:36:04  <mcstar> what did i change?
2012-01-09T17:36:20  <thestinger> std::string -> char a[]?
2012-01-09T17:36:23  <thestinger> not sure
2012-01-09T17:36:42  <mcstar> s[0]=count;
2012-01-09T17:36:56  <mcstar> i added this, actually changing the content of the stirng
2012-01-09T17:36:57  *** choas <choas!~lars@p4FDC4B05.dip.t-dialin.net> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T17:37:16  <thestinger> hm, what?
2012-01-09T17:37:56  <mcstar> string s=boost::lexical_cast<std::string>(count);
2012-01-09T17:38:00  <mcstar> s[0]=count;
2012-01-09T17:38:10  <thestinger> oh, I think gcc uses copy-on-write strings
2012-01-09T17:38:15  <mcstar> anyway the trcik is here
2012-01-09T17:38:20  <mcstar> count is an int
2012-01-09T17:38:26  <mcstar> so it cant do some optimization
2012-01-09T17:38:33  <mcstar> maybe it is related to see?
2012-01-09T17:38:44  <mcstar> sse
2012-01-09T17:39:04  <thestinger> mcstar: well, I think gcc uses reference counted copy-on-write strings
2012-01-09T17:39:06  <thestinger> not sure
2012-01-09T17:39:13  <thestinger> so it has to copy the string and make a new one when you change it
2012-01-09T17:39:21  <mcstar> really?
2012-01-09T17:39:23  <mcstar> nfw
2012-01-09T17:39:29  <mcstar> i maen if you say so
2012-01-09T17:39:49  <mcstar> i thought its just a managed vector
2012-01-09T17:39:51  <thestinger> yes
2012-01-09T17:39:57  <thestinger> libstdc++ uses COW for std::string
2012-01-09T17:40:07  <thestinger> so you're forcing a copy
2012-01-09T17:40:32  <thestinger> mcstar: are you compiling with -std=c++0x?
2012-01-09T17:40:36  <mcstar> yes
2012-01-09T17:40:44  <thestinger> I think COW for std::string is forbidden by C++11, but they may not respect it yet
2012-01-09T17:41:48  <thestinger> I'll test with clang
2012-01-09T17:41:54  <thestinger> libc++ doesn't use COW strings
2012-01-09T17:42:40  <thestinger> ./string  1.07s user 0.00s system 99% cpu 1.076 total
2012-01-09T17:42:44  <thestinger> with boost
2012-01-09T17:42:50  <thestinger> clang++ -O3 -std=c++11 -o string string.cc
2012-01-09T17:42:57  <thestinger> compiled like that (so still using libstdc++)
2012-01-09T17:43:24  <thestinger> oh, weird
2012-01-09T17:43:32  <thestinger> Arch doesn't ship libc++ with clang apparently
2012-01-09T17:43:56  <mcstar> i wanted to compile xmonad from darcs and i couldnt
2012-01-09T17:43:59  <mcstar> :(
2012-01-09T17:44:07  <thestinger> why?
2012-01-09T17:44:12  <thestinger> does it need ghc 7.2?
2012-01-09T17:44:14  <mcstar> some weird error
2012-01-09T17:44:20  <mcstar> i dont remmeber
2012-01-09T17:44:32  <mcstar> that was ok
2012-01-09T17:45:47  <mleise> I got the pattern for 78, finally
2012-01-09T17:45:55  <mcstar> actually xmonad was ok, the problem was with xmonad-contrib-darcs
2012-01-09T17:46:06  <mcstar> i wanna to it alone
2012-01-09T17:46:09  <mcstar> dontellmle
2012-01-09T17:46:27  <mcstar> (too late, im getting typoid)
2012-01-09T17:46:31  <mcstar> gn
2012-01-09T17:46:34  <mleise> n8
2012-01-09T17:46:37  *** mcstar <mcstar!~mcstar@adsl-89-132-36-11.monradsl.monornet.hu> has left #aichallenge
2012-01-09T17:48:52  *** foRei <foRei!~ViT@0x4dd7b24d.adsl.cybercity.dk> has quit IRC (Quit: Bye)
2012-01-09T17:49:01  <thestinger> there
2012-01-09T17:49:50  <X-Scale> mleise: I guess I've found the pattern too, but I'm still not totally convinced.
2012-01-09T17:51:15  <mleise> It looks crazy, but I'll just trial and error with the result
2012-01-09T17:51:29  <thestinger> oh, I figured it out now
2012-01-09T17:51:54  <X-Scale> There is always the issue of counting too many or too few outcomes.
2012-01-09T17:52:00  <mleise> oh come on, you can't all figure it out at the same time ^^
2012-01-09T17:52:07  <X-Scale> heh
2012-01-09T17:52:17  <thestinger> well
2012-01-09T17:52:24  <thestinger> I was benchmarking string stuff with mcstar
2012-01-09T17:52:24  <X-Scale> Let me code a simple solution to see if it makes sense
2012-01-09T17:52:26  <thestinger> lol
2012-01-09T17:52:29  <thestinger> I had the solution all along
2012-01-09T17:52:43  <thestinger> I just needed to add a thing to print it and stop when I get the right answer :)
2012-01-09T17:53:14  *** Jak_o_Shadows <Jak_o_Shadows!~Fake@CPE-144-136-214-52.sa.bigpond.net.au> has joined #aichallenge
2012-01-09T17:53:45  <thestinger> also, I need to set a maximum to go up to atm...
2012-01-09T17:54:01  <thestinger> I could just keep resizing the vector but that would take more code
2012-01-09T17:54:50  <thestinger> meh, maybe I didn't solve it
2012-01-09T17:59:52  <thestinger> got an answer but it was apparently wrong...
2012-01-09T18:00:29  <mleise> me too
2012-01-09T18:00:30  <thestinger> oh, I printed p(n) and not n
2012-01-09T18:00:38  <mleise> 77180 is not right :(#
2012-01-09T18:00:46  <McLeopold> I just coded 78 in c, segmentation fault :(
2012-01-09T18:00:53  <thestinger> McLeopold: lol
2012-01-09T18:01:02  <thestinger> McLeopold: I figured out how to do it
2012-01-09T18:01:03  <McLeopold> too bad I don't know C :)
2012-01-09T18:01:20  <thestinger> Sorry, but the answer you gave appears to be incorrect. :(
2012-01-09T18:01:23  <thestinger> nope
2012-01-09T18:01:25  <thestinger> apparently not
2012-01-09T18:02:16  <McLeopold> so int m[1500][1500] is bad?
2012-01-09T18:02:19  <thestinger> yes
2012-01-09T18:02:22  <thestinger> that's on the stack
2012-01-09T18:02:33  <McLeopold> how should I do it?
2012-01-09T18:02:34  <thestinger> use malloc or calloc
2012-01-09T18:02:40  <thestinger> or use C++ and save yourself a lot of pain
2012-01-09T18:03:54  <thestinger> McLeopold: unsigned *a = malloc(1500 * 1500 * sizeof (unsigned)) and then index with a[row * 1500 + col]
2012-01-09T18:04:45  <thestinger> or you can an array with pointers to arrays (which is what std::vector<std::vector<unsigned>> in C++ will do)
2012-01-09T18:04:49  <thestinger> can make*
2012-01-09T18:05:01  <X-Scale> Or make it an array of pointer to arrays of ints...that will allow you the simpler a[row][col] notation.
2012-01-09T18:05:40  <thestinger> annoying to allocate and deallocate though in C
2012-01-09T18:05:49  <antimatroid> vector<vector<int> > m(1500, vector<int>(1500, 0)); :P
2012-01-09T18:05:52  <McLeopold> how do I check for a null pointer return?
2012-01-09T18:05:54  <antimatroid> c++ <3
2012-01-09T18:06:57  <thestinger> McLeopold: if (!a) { // out of memory }
2012-01-09T18:07:02  <thestinger> or if (a == NULL) { }
2012-01-09T18:07:23  <thestinger> and you have to free(a) afterwards ofc :)
2012-01-09T18:07:34  <thestinger> anyway C++ makes it easier :P
2012-01-09T18:09:18  <thestinger> so... my code thinks the answer is 158128 but it isn't
2012-01-09T18:09:21  <thestinger> :(
2012-01-09T18:10:15  *** g0llum <g0llum!~g0llum@82.113.119.4> has quit IRC (Read error: Connection reset by peer)
2012-01-09T18:10:30  <mleise> oh wait ... integer overflow !
2012-01-09T18:10:32  <thestinger> oh, it overflows
2012-01-09T18:10:37  <thestinger> gmp time
2012-01-09T18:10:52  <mleise> copycat -.-
2012-01-09T18:11:39  <thestinger> gmp is really easy to use in C++ which is nice
2012-01-09T18:12:22  <thestinger> yay, template errors
2012-01-09T18:12:40  <thestinger> ../../c++/util.hh:113:13: error: no match for ‘operator[]’ in ‘combinations[n]’
2012-01-09T18:12:43  <thestinger> ..
2012-01-09T18:12:51  <mleise> im not sure if I really want to do what I do anymore
2012-01-09T18:12:59  <thestinger> std::vector<mpz_class> has no operator[] apparently...
2012-01-09T18:13:02  <asloane> which problem are you doing?
2012-01-09T18:13:06  <thestinger> 78
2012-01-09T18:13:21  <mleise> yes
2012-01-09T18:13:36  <thestinger> oh nvm silly typo
2012-01-09T18:13:55  <mleise> i mean... these numbers can grow large really quick
2012-01-09T18:14:07  <thestinger> gmp in C is awful
2012-01-09T18:14:11  <McLeopold> dang, still segfaulting...
2012-01-09T18:14:48  <thestinger> mpz_class a = 5, b = 10; std::cout << a * b << std::endl; etc. is really not that part in comparison
2012-01-09T18:14:56  <thestinger> not that bad*
2012-01-09T18:15:02  <thestinger> I really can't type at all when I'm tired :)
2012-01-09T18:16:29  <mleise> omg this is longer than PI
2012-01-09T18:16:33  <mleise> π
2012-01-09T18:16:37  <asloane> you're.. not.. bruteforcing that are you?
2012-01-09T18:16:41  <thestinger> asloane: no
2012-01-09T18:16:43  <thestinger> well
2012-01-09T18:16:46  <thestinger> almost
2012-01-09T18:16:53  <asloane> https://oeis.org/A000041
2012-01-09T18:16:59  <asloane> ^ essential for project euler
2012-01-09T18:17:03  <thestinger> I have an n_partitions function which can do 76 in less than 1ms
2012-01-09T18:17:08  <asloane> (in general)
2012-01-09T18:17:31  <thestinger> it uses dynamic programming (each consecutive answer ends up in a vector), so I'm just doing it with a massive limit
2012-01-09T18:17:36  <thestinger> asloane: that's cheating :P
2012-01-09T18:17:40  <mleise> BigInt is not optimized well in D
2012-01-09T18:17:53  <mleise> jeez... this takes ages to compute
2012-01-09T18:18:06  <asloane> even with DP you need to find p(n) = 1e6*k
2012-01-09T18:18:20  <asloane> hmm
2012-01-09T18:18:47  <thestinger> ew, even more errors now
2012-01-09T18:19:55  <McLeopold> http://pastebin.com/n6f8C2Lf can I has help?
2012-01-09T18:20:18  <mleise> nooo this can't be incorrect!
2012-01-09T18:20:40  <thestinger> McLeopold: try using libmudflap
2012-01-09T18:20:47  <thestinger> -fmudflap -lmudflap in your gcc command
2012-01-09T18:20:55  <McLeopold> what does that do?
2012-01-09T18:20:56  <thestinger> it will tell you when you do an out-of-bounds array write/read
2012-01-09T18:22:08  <thestinger> oh, nice
2012-01-09T18:22:30  <mleise> not to mention that D has that on default ;)
2012-01-09T18:23:09  <thestinger> what the hell? I apparently can't make a std::vector<mpz_class>
2012-01-09T18:23:12  <thestinger> stupid gmp...
2012-01-09T18:23:31  <thestinger> oh, I can
2012-01-09T18:23:35  <thestinger> just can't use a constructor...
2012-01-09T18:24:03  <thestinger> nvm, fixed everything
2012-01-09T18:25:15  <thestinger> well, time to see how long this takes with gmp :)
2012-01-09T18:26:23  <asloane> anyways you don't need bignums for this
2012-01-09T18:26:27  *** dici <dici!~Dici@port-92-204-116-85.dynamic.qsc.de> has quit IRC (Read error: Connection reset by peer)
2012-01-09T18:26:42  <thestinger> asloane: do I need to use 64-bit ints though?
2012-01-09T18:26:45  <asloane> since + and * are closed under %
2012-01-09T18:26:52  <asloane> no, you need numbers between 0 and 999999
2012-01-09T18:27:57  <X-Scale> asloane: what's your level on PE ?
2012-01-09T18:28:57  <asloane> uh, i've solved 59 out of 366
2012-01-09T18:28:58  <thestinger> asloane: my code thinks n_partitions(159128u) is 2409000000
2012-01-09T18:29:01  <asloane> haven't looked at this in years
2012-01-09T18:29:13  <thestinger> which is the first I find where % 1000000 is 0
2012-01-09T18:29:19  <asloane> thestinger: and is that the answer?
2012-01-09T18:29:23  <thestinger> no... apparently not
2012-01-09T18:29:28  <asloane> huh
2012-01-09T18:29:33  <thestinger> I even checked +/- 1
2012-01-09T18:29:35  <asloane> it's def not <= 100000
2012-01-09T18:29:44  <mleise> I just use only BigInts now, just to be sure there is no overflow happening anywhere
2012-01-09T18:29:59  <thestinger> well, unsigned ints just wrap
2012-01-09T18:30:13  <mleise> lol the numbers are several screen pages long... i do something wrong
2012-01-09T18:30:18  <thestinger> mleise: :)
2012-01-09T18:30:29  <asloane> dammit you're going to draw me into this now
2012-01-09T18:30:58  <thestinger> meh
2012-01-09T18:31:05  <thestinger> I don't think my n_partitions function is wrong
2012-01-09T18:31:16  <thestinger> I somehow missed an earlier number
2012-01-09T18:31:23  <mleise> im faster brute forcing on the submit button in PE :/
2012-01-09T18:32:07  <thestinger> strcat@arch i ~/projects/euler/78 % time ./solution
2012-01-09T18:32:10  <thestinger> 2409000000
2012-01-09T18:32:11  <thestinger> ./solution  16.32s user 0.00s system 99% cpu 16.330 total
2012-01-09T18:32:13  <thestinger> :(
2012-01-09T18:32:31  <thestinger> anyway, that's not the code for actually solving the question
2012-01-09T18:32:44  <McLeopold> thestinger, undefined reference to `__mf_lc_mask' :(
2012-01-09T18:33:02  <thestinger> McLeopold: huh? post your code
2012-01-09T18:33:08  <McLeopold> same code
2012-01-09T18:33:16  <thestinger> oh
2012-01-09T18:33:17  <McLeopold> I just added the mudflap stuff
2012-01-09T18:33:30  <McLeopold> now it highlights a bunch of code as bad
2012-01-09T18:33:36  <McLeopold> I'm in eclipse, btw
2012-01-09T18:33:55  <thestinger> gcc -fmudflap -o test test.c -lmudflap
2012-01-09T18:34:08  <thestinger> you have to put -l after what uses it now
2012-01-09T18:34:20  <thestinger> especially if you have -Wl,--as-needed on
2012-01-09T18:34:27  <McLeopold> do I need an include ?
2012-01-09T18:34:33  <thestinger> no
2012-01-09T18:34:54  <thestinger> McLeopold: are you running gcc yourself, or eclipse is doing it?
2012-01-09T18:35:02  <McLeopold> eclipse
2012-01-09T18:35:11  <thestinger> try doing it yourself from the command-line
2012-01-09T18:35:25  <McLeopold> gcc -O0 -g3 -Wall -c -fmessage-length=0 -fmudflap -lmudflap -std=c99 -MMD -MP -MF"src/EulerC.d" -MT"src/EulerC.d" -o "src/EulerC.o" "../src/EulerC.c"
2012-01-09T18:35:36  <thestinger> -lmudflap should be last
2012-01-09T18:37:25  <mleise> I fear my calculations are wrong :-( I'll never solve this problem.
2012-01-09T18:37:43  <thestinger> mleise: can you solve 76 with the same code?
2012-01-09T18:37:46  <mleise> I only verified the result for 1 to 10
2012-01-09T18:37:55  <thestinger> 76 requires you to be off-by-one
2012-01-09T18:38:00  <thestinger> it's not actually p(n)
2012-01-09T18:38:03  <thestinger> it's p(n) - 1
2012-01-09T18:38:19  <mleise> thestinger: it is the same problem from the looks of it
2012-01-09T18:38:31  <thestinger> yeah
2012-01-09T18:38:31  *** Fandekasp <Fandekasp!~Fandekasp@KD182249002012.au-net.ne.jp> has joined #aichallenge
2012-01-09T18:38:32  <thestinger> so is 31
2012-01-09T18:39:10  <thestinger> lol, I'm printing out n every 10k so I know something is happening
2012-01-09T18:39:13  <thestinger> anyway, this fails
2012-01-09T18:41:30  <thestinger> 5: 7
2012-01-09T18:41:33  <thestinger> 100: 190569292
2012-01-09T18:41:35  <thestinger> 159128: 2409000000
2012-01-09T18:41:46  <asloane> thestinger: btw, n_partitions(159128u) has a looooooooooot more digits than that
2012-01-09T18:41:55  <thestinger> asloane: yeah, it overflows
2012-01-09T18:42:09  <thestinger> maybe I should try mpz_class again
2012-01-09T18:42:24  <asloane> just do all your computations mod 1000000 and save yourself the trouble
2012-01-09T18:42:31  <mleise> ^ that
2012-01-09T18:42:52  <mleise> 43 seconds for the wrong result :( this sucks
2012-01-09T18:47:30  <mleise> asloane: I use *2 in my calculations... I don't think I can modulo this without losing information
2012-01-09T18:47:51  <thestinger> I just use +
2012-01-09T18:47:54  <thestinger> well, +=
2012-01-09T18:48:01  <thestinger> that doesn't matter though
2012-01-09T18:48:43  <thestinger> nice, my code is incredibly slow with gmp
2012-01-09T18:49:16  *** AlliedEnvy <AlliedEnvy!~AlliedEnv@adsl-68-90-47-163.dsl.hstntx.swbell.net> has joined #aichallenge
2012-01-09T18:49:39  <McLeopold> thestinger, eclipse breaks the build into compile and link, should I split the mudflag stuff between them?  also, simple gcc command in terminal works
2012-01-09T18:50:00  <thestinger> well, imo you should just use a Makefile and ignore eclipse's crap :P
2012-01-09T18:50:26  <McLeopold> maybe, but I'd like to understand
2012-01-09T18:50:26  <thestinger> anyway yeah
2012-01-09T18:50:34  <thestinger> -fmudflap in compile, -lmudflap in link
2012-01-09T18:50:55  <McLeopold> http://pastebin.com/kAkbdRfD
2012-01-09T18:51:13  <thestinger> mudflap* :P
2012-01-09T18:51:58  <thestinger> lol, problem 78 is evil
2012-01-09T18:52:55  <McLeopold> http://pastebin.com/sLmvJKEq
2012-01-09T18:55:00  <thestinger>                                         m[n1 * N + i1] += m[x-1 * N + j];
2012-01-09T18:55:14  <X-Scale> heh...I'm loving actually.
2012-01-09T18:55:35  <X-Scale> loving it, that is
2012-01-09T18:55:39  <thestinger> check up to 50k with gmp
2012-01-09T18:55:42  <thestinger> taking forever
2012-01-09T18:55:44  <thestinger> ...
2012-01-09T18:57:51  <thestinger> ok, that's it.
2012-01-09T18:57:54  <thestinger> need to use opencl somehow
2012-01-09T18:58:57  <McLeopold> oooh, nice catch
2012-01-09T18:59:05  <thestinger> McLeopold: well, that's what mudflap said
2012-01-09T18:59:09  <thestinger> it gives a line number
2012-01-09T18:59:14  <McLeopold> where?
2012-01-09T18:59:20  <thestinger> pc=0x40711e location=`../src/EulerC.c:36:25 (main)'
2012-01-09T18:59:23  <thestinger> line 36
2012-01-09T18:59:26  <asloane> wow this takes a while to compute
2012-01-09T18:59:27  <thestinger> I guess 25 is the column
2012-01-09T18:59:52  <asloane> i think i ran out of RAM
2012-01-09T19:00:06  <thestinger> asloane: lol
2012-01-09T19:00:11  <asloane> stuck at 46300
2012-01-09T19:00:30  <thestinger> well, mine goes fast with gmp
2012-01-09T19:00:33  <thestinger> but then it overflows
2012-01-09T19:00:52  <asloane> are you saving the whole p(k,n) matrix?
2012-01-09T19:00:55  *** Redgis <Redgis!~Nex@2a01:e34:ee3b:aa40:cc1d:d6e6:8a9a:e4a2> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T19:00:59  <thestinger> want to see my code?
2012-01-09T19:01:22  <thestinger> asloane: well, I just have a massive array
2012-01-09T19:01:35  <thestinger> so combinations[1] is p(1), combinations[100] is p(100)
2012-01-09T19:01:40  <thestinger> and I calculate the next one based on the last
2012-01-09T19:01:46  <asloane> can you do that?
2012-01-09T19:02:05  <asloane> it's more complicated than that; see wikipedia
2012-01-09T19:02:11  <thestinger> well, it works for 76
2012-01-09T19:02:20  <asloane> http://en.wikipedia.org/wiki/Partition_function_(number_theory)#Partition_function
2012-01-09T19:02:24  <thestinger> I have to go over the whole array, there's a nested loop
2012-01-09T19:04:21  <thestinger> asloane: I'm just using the recursive definition basically
2012-01-09T19:04:25  <thestinger> but without recursion
2012-01-09T19:04:31  <asloane> what recursive definition?
2012-01-09T19:04:55  <thestinger>     p(k, n) = 0 if k > n
2012-01-09T19:04:58  <thestinger>     p(k, n) = 1 if k = n
2012-01-09T19:05:00  <thestinger>     p(k, n) = p(k+1, n) + p(k, n − k) otherwise.
2012-01-09T19:05:11  <thestinger> okay, my code thinks it found the answer
2012-01-09T19:05:13  <asloane> oh.  yeah, but you need to keep track of the p(k,n) table for that
2012-01-09T19:05:30  <thestinger> yeah, I make a std::vector up to target+1
2012-01-09T19:05:38  <thestinger> and then return combinations[target];
2012-01-09T19:05:57  <thestinger> Congratulations, the answer you gave to problem 78 is correct. !!!! :D
2012-01-09T19:06:07  <asloane> is it >100000?
2012-01-09T19:06:09  <thestinger> asloane: I just added a check in my loop
2012-01-09T19:06:14  <thestinger> no, it's under 100k
2012-01-09T19:06:19  <thestinger> the overflow screwed it up
2012-01-09T19:06:37  <X-Scale> How long does it take to find the solution, thestinger ?
2012-01-09T19:06:51  <thestinger> a _long_ time because I hacked something together
2012-01-09T19:06:55  <thestinger> I thought it was above 100k
2012-01-09T19:07:07  <thestinger> I can tell you how long n_partitions(right_answer) takes
2012-01-09T19:08:00  <thestinger>     std::cout << n_partitions<mpz_class>(55374) << std::endl;
2012-01-09T19:08:03  <thestinger> running that now
2012-01-09T19:08:12  <asloane> well thanks for the answer
2012-01-09T19:08:13  <thestinger> gmp makes it slow as hell
2012-01-09T19:08:16  <thestinger> aw crap
2012-01-09T19:08:18  <thestinger> :(
2012-01-09T19:08:32  <thestinger> well, just pretend you didn't see that
2012-01-09T19:09:11  <thestinger> well, that was stupid of me... sorry about that
2012-01-09T19:09:26  <asloane> i don't see how you compute that without 1.5 billion*sizeof(number) entries in a table
2012-01-09T19:09:35  <thestinger> 36325300925435785930832331577396761646715836173633893227071086460709268608053489541731404543537668438991170680745272159154493740615385823202158167635276250554555342115855424598920159035413044811245082197335097953570911884252410730174907784762924663654000000
2012-01-09T19:09:42  <thestinger> that's the answer
2012-01-09T19:09:44  <thestinger> well
2012-01-09T19:09:52  <thestinger> for some reason I thought that was the answer
2012-01-09T19:09:57  <thestinger> I forgot I reversed the function call
2012-01-09T19:10:01  <thestinger> ./solution  84.37s user 0.01s system 99% cpu 1:24.40 total
2012-01-09T19:10:05  <thestinger> takes 1 minute and 24 secs
2012-01-09T19:10:56  <thestinger> asloane: do you want to see the actual code?
2012-01-09T19:11:00  <asloane> sure
2012-01-09T19:11:05  <thestinger> asloane: http://sprunge.us/NBZC
2012-01-09T19:11:20  <thestinger> http://sprunge.us/jIhe and I used that for 31
2012-01-09T19:11:26  <thestinger> I did 31 and 76 in python though
2012-01-09T19:11:38  <asloane> whaat that works?
2012-01-09T19:11:43  <thestinger> yes
2012-01-09T19:12:00  <thestinger> I just added a std::cout << combinations[i] << std::endl; to the outer loop
2012-01-09T19:12:06  <thestinger> and then called it with n_partitions(200000)
2012-01-09T19:12:21  <thestinger> ./solution  919.06s user 0.03s system 99% cpu 15:19.17 total
2012-01-09T19:12:46  <thestinger> 15 mins with 200k as the target, but stopping at 55374
2012-01-09T19:12:58  <asloane> huh.  so you can't reuse partial results from that for another n_partitions(n+1)
2012-01-09T19:13:20  <thestinger> well
2012-01-09T19:13:24  <thestinger> at the end, the whole array is valid
2012-01-09T19:13:31  <thestinger> combinations[100], combinations[200], etc.
2012-01-09T19:13:41  <thestinger> but I couldn't figure out how to do it in a way where it would have an arbitrary limit
2012-01-09T19:14:08  <thestinger> so I had to make guesses at the maximum
2012-01-09T19:14:20  <thestinger> the whole overflow thing made it harder than it should have been...
2012-01-09T19:14:58  <asloane> dang that's slow
2012-01-09T19:15:46  <thestinger> fast for 76 :P
2012-01-09T19:16:22  <asloane> i can verify your solution in 3.6 seconds
2012-01-09T19:16:32  <asloane> but still, that would take a long time to reach from 0
2012-01-09T19:17:21  <thestinger> yeah... especially since I overestimated and used 200k as the cap
2012-01-09T19:17:48  <thestinger> asloane: http://sprunge.us/SDZJ I just brute forced like that
2012-01-09T19:18:21  <McLeopold> can't you just mod 1000000?
2012-01-09T19:18:42  <asloane> yeah i mean, just add this to your n_partitions and get rid of gmp:
2012-01-09T19:18:42  <asloane>       combinations[n] %= 1000000;
2012-01-09T19:19:27  <thestinger> still really slow :P
2012-01-09T19:19:33  <asloane> yes
2012-01-09T19:19:41  <thestinger> ./solution  18.27s user 0.00s system 99% cpu 18.272 total
2012-01-09T19:19:50  <thestinger> with 100k as the target
2012-01-09T19:19:53  <McLeopold> arg, malloc had an interger overflow >:(
2012-01-09T19:20:20  <thestinger> 1500*1500*4? :\
2012-01-09T19:20:27  <McLeopold> 60000^2
2012-01-09T19:20:39  <thestinger> asloane: ./solution  3.82s user 0.00s system 99% cpu 3.826 total
2012-01-09T19:20:45  <thestinger> yeah, that's how long it takes to verify
2012-01-09T19:21:42  <thestinger> maybe some random gcc optimization switch will make it faster
2012-01-09T19:23:56  <thestinger> clang v3 optimizes it a lot better
2012-01-09T19:24:12  <thestinger> the gcc binary is 50% slower
2012-01-09T19:25:11  <X-Scale> I'm still struggling to get the algo right.
2012-01-09T19:25:39  <X-Scale> It's simple, but the limit cases make it a bit difficult
2012-01-09T19:26:04  <asloane> i don't understand thestinger's algorithm but it seems to be correct
2012-01-09T19:26:26  <asloane> i guess you're just enumerating them as shown in the description
2012-01-09T19:27:34  <thestinger> well, I did 76 first and then had to adapt it for 31
2012-01-09T19:27:48  <asloane> there's a way to generate these with pentagonal numbers
2012-01-09T19:28:32  <thestinger> asloane: my way makes sense if you do it for low numbers
2012-01-09T19:29:04  <amstan> asloane: no a1k0n anyome?
2012-01-09T19:29:29  <asloane> w/e
2012-01-09T19:29:30  *** asloane is now known as a1k0n
2012-01-09T19:29:47  <thestinger> recursion in python blows up the stack really fast
2012-01-09T19:29:57  <a1k0n> dude, the triangle number solution would definitely work
2012-01-09T19:30:15  <a1k0n> er, pentagonal
2012-01-09T19:31:15  <thestinger> I think I could somehow make my code work for an arbitrary limit but I can't figure it out
2012-01-09T19:33:08  <thestinger> oh yeah, it looks like some people posted the pentagonal number solution in the forums
2012-01-09T19:35:36  <thestinger> https://en.wikipedia.org/wiki/Euler%27s_function
2012-01-09T19:41:18  *** deltree_ <deltree_!~chatzilla@97.104.16.141> has joined #aichallenge
2012-01-09T19:43:26  <McLeopold> thestinger, http://pastebin.com/zHeCrGSk is this the same as your cpp code?
2012-01-09T19:45:21  <thestinger> N is the number you're checking?
2012-01-09T19:45:27  <McLeopold> yes, it's target
2012-01-09T19:45:38  <thestinger> yeah, that's basically the same I think
2012-01-09T19:45:41  <McLeopold> but I'm just printing all the results
2012-01-09T19:45:47  <McLeopold> and they are wrong :)
2012-01-09T19:47:38  <McLeopold> oops, found it
2012-01-09T19:49:25  <thestinger> oh, yeah
2012-01-09T19:49:29  <thestinger> it's n-i, not n-1
2012-01-09T19:50:02  <thestinger> I still can't figure out how to give it an arbitrary limit
2012-01-09T19:50:27  <thestinger> I coded it like a year ago in python so I don't really understand what the hell I was doing
2012-01-09T19:50:59  <thestinger> well, I know how it works but not why anymore
2012-01-09T19:52:17  <McLeopold> I think I understand how it works now
2012-01-09T19:52:33  <McLeopold> you build the matrix like I do, but in such a way that you don't need to remember it
2012-01-09T19:52:36  <X-Scale> I thought I did...but now some details are not fitting together.
2012-01-09T19:52:57  <McLeopold> that's clever
2012-01-09T19:54:34  <thestinger> McLeopold: I think I was attempting to do 78 in python but never finished
2012-01-09T19:54:56  <McLeopold> I don't think you can have an arbitrary target with that method
2012-01-09T19:55:17  <McLeopold> if you wanted to calc target + 1, you would need a bunch of numbers that already where incremented
2012-01-09T19:55:26  <thestinger> yeah, that's the problem
2012-01-09T19:55:56  <a1k0n> pentagonal numbers method is the answer
2012-01-09T19:56:00  <a1k0n> but it's a bitch to implement
2012-01-09T19:56:22  *** GarfTop <GarfTop!~Garf@78-22-80-252.access.telenet.be> has quit IRC (Quit: Make a new plan, Stan!)
2012-01-09T19:56:28  <thestinger> McLeopold: I think the reason I ended up with this method is because it works for problems like 31
2012-01-09T19:56:43  <thestinger> so i would be an index over an array of coins or whatever
2012-01-09T19:56:53  <McLeopold> I already solved 44, it was just too long ago
2012-01-09T19:58:09  <thestinger> oh, 79 is fun
2012-01-09T19:58:15  <thestinger> I did it on paper though
2012-01-09T19:59:49  <thestinger> problem 80 is basically a 1 liner in python and then 81 to 83 are easy graph search ones
2012-01-09T19:59:53  <cyphase> are you talking about project euler?
2012-01-09T19:59:55  <thestinger> so you'll get further ahead of me :)
2012-01-09T19:59:58  <thestinger> cyphase: yeah
2012-01-09T20:08:37  *** epicmonkey <epicmonkey!~epicmonke@188.134.41.210> has quit IRC (Ping timeout: 248 seconds)
2012-01-09T20:11:03  <a1k0n> holy crap
2012-01-09T20:11:04  <a1k0n> woot!
2012-01-09T20:11:14  <a1k0n> got the pentagonal method implemented... and it solves it in 0.147s
2012-01-09T20:11:18  <thestinger> wow, nice
2012-01-09T20:11:18  <a1k0n> and i have a bug where i compute some of them twice
2012-01-09T20:11:36  <a1k0n> now i don't feel ashamed submitting :)
2012-01-09T20:12:25  *** dapplegate <dapplegate!~dan@206.217.79.178> has quit IRC (Quit: Ex-Chat)
2012-01-09T20:12:43  <thestinger> a1k0n: I felt bad because I couldn't figure out the trick for some of them and just used brute force
2012-01-09T20:13:32  <thestinger> for example for question 40
2012-01-09T20:13:56  <thestinger> ./solution  0.02s user 0.00s system 91% cpu 0.025 total
2012-01-09T20:13:59  <thestinger> "brute force"
2012-01-09T20:16:49  *** Apophis <Apophis!~apophis@80-218-68-103.dclient.hispeed.ch> has quit IRC (Read error: Connection reset by peer)
2012-01-09T20:17:09  *** Apophis <Apophis!~apophis@80-218-68-103.dclient.hispeed.ch> has joined #aichallenge
2012-01-09T20:44:34  <mleise> After generating a longer list of "partitions_n" by brute force, I no longer see any consistent pattern.
2012-01-09T20:44:58  <mleise> I guess I have to let my computer run for a week :)
2012-01-09T20:45:28  <mleise> unless the number in question is very big
2012-01-09T20:45:56  <thestinger> less than 100k
2012-01-09T20:46:18  <mleise> oh wonderful, that can be managed, im at 3200 already
2012-01-09T20:46:50  <thestinger> trying to speed up my python factorize and divisors functions atm
2012-01-09T20:46:52  <mleise> then again I could have an off-by-one in the brute-force function somewhere...
2012-01-09T20:47:19  *** srgpqt <srgpqt!~srgpqt@206-248-134-250.dsl.teksavvy.com> has joined #aichallenge
2012-01-09T20:48:15  <mleise> for primes I guess it is nice to have two functions. One that give a certain fixed number of primes and one that is a generator that spits out the next one on demand (in case you don't know how many you need in advance)
2012-01-09T20:48:38  <thestinger> you don't usually need very many primes though
2012-01-09T20:48:57  <thestinger> you can make a fast is_prime function using a prime sieve
2012-01-09T20:49:09  <thestinger> so you can use primes up to n to check if numbers up to n*n are prime
2012-01-09T20:50:38  <mleise> right, in #32 only about a few of them were needed, when you took care of the limits
2012-01-09T20:50:55  <mleise> 80 or 360 i think
2012-01-09T20:51:15  <amstan> if you like primes you should like this too: https://github.com/sigh/Python-Math/blob/master/primes.py
2012-01-09T20:51:20  <thestinger> ok, so I can get divisors for a big number in a way that's faster than the brute force trial division (up to sqrt(n))
2012-01-09T20:53:02  <mleise> is_prime(n, prime_list) would be my choice, so the function doesn't have to create its own list internally
2012-01-09T20:53:08  <thestinger> yeah
2012-01-09T20:53:14  <thestinger> my functions take an optional argument for that
2012-01-09T20:53:24  <thestinger> def factorize(n, candidates=None):
2012-01-09T20:54:20  <jmcarthur> are you guys golfing a problem?
2012-01-09T20:54:39  <jmcarthur> or racing languages?
2012-01-09T20:55:14  <thestinger> jmcarthur: project euler
2012-01-09T20:55:15  <jmcarthur> oh it sounds like euler now
2012-01-09T20:55:18  <jmcarthur> bah
2012-01-09T20:59:20  <thestinger> well, the way I get divisors is really stupid lol
2012-01-09T20:59:22  <thestinger> need to fix that
2012-01-09T21:00:19  <mleise> cpu load applet still painted blue? ah yes ... ok
2012-01-09T21:01:56  <mleise> alias memoize!partitions_n partitions_n_memo; // <- when you lack the brains use memoize
2012-01-09T21:02:24  <mleise> it makes recursive functions way faster
2012-01-09T21:02:53  <thestinger> oh, you used a recursive function
2012-01-09T21:02:56  <a1k0n> mleise: computation time goes as O(n^2) for those
2012-01-09T21:03:35  <thestinger> mleise: are you actually checking the n_partitions for each n?
2012-01-09T21:03:38  <thestinger> you'll never finish :P
2012-01-09T21:04:06  <a1k0n> i apparently already solved 31 but don't have the code for it
2012-01-09T21:04:08  <mleise> uh... what else would i do? I try every possible way to partition each and every n
2012-01-09T21:04:39  <thestinger> I just count the number of possibilities (which you can do recursively)
2012-01-09T21:04:55  <thestinger> but a year ago I was trying to make it fast in python, and recursion wasn't an option
2012-01-09T21:05:04  <thestinger> so I ended up with a pretty damn good way of doing it with 2 for loops
2012-01-09T21:05:24  <thestinger> anyway, that was still not fast enough for 78
2012-01-09T21:05:26  <mleise> I have that loop construct in the solution to 78
2012-01-09T21:05:58  <thestinger> had to add a check with each iteration of the outer loop so I could just run it once (up to some arbitrary limit)
2012-01-09T21:06:07  <mleise> uh 23 i meant
2012-01-09T21:06:45  <mleise> but the solution to 78 is really below 10,000 ?
2012-01-09T21:06:54  <thestinger> below 100,000
2012-01-09T21:06:57  <thestinger> not 10k
2012-01-09T21:07:04  <mleise> omg
2012-01-09T21:07:09  <mleise> I'll never finish
2012-01-09T21:07:51  <a1k0n> use the pentagonal solution
2012-01-09T21:08:03  <a1k0n> a(n) - a(n-1) - a(n-2) + a(n-5) + a(n-7) - a(n-12) - a(n-15) + ... = 0, where the sum is over n-k and k is a generalized pentagonal number (A001318) <= n and the sign of the k-th term is (-1)^([(k+1)/2]).
2012-01-09T21:08:07  <mleise> the what? where did you read about that?
2012-01-09T21:08:15  <a1k0n> oeis.org
2012-01-09T21:08:25  <a1k0n> can't do projecteuler without OEIS
2012-01-09T21:08:47  <thestinger> I've managed so far, but I haven't gotten very far yet :P
2012-01-09T21:09:02  <a1k0n> with that method it takes 0.14s to solve searching frtom 0
2012-01-09T21:09:22  <thestinger> I should just do what McLeopold suggested and make a massive file with all the primes
2012-01-09T21:09:53  <thestinger> I guess seeking to lines is pretty fast so I could use line numbers as the index
2012-01-09T21:10:00  <mleise> McLeopold is a cheater
2012-01-09T21:10:29  <mleise> thestinger: do you need primes > 64-bit?
2012-01-09T21:10:35  <thestinger> and I'll put the file in /tmp, which is a ramdisk :)
2012-01-09T21:10:43  <thestinger> mleise: not sure
2012-01-09T21:11:11  <mleise> if the answer is no you should use a binary format that you can index even faster than a text file with lines
2012-01-09T21:12:30  <thestinger> I did a lot of questions with python, so I'm not sure if I ended up relying on bigints
2012-01-09T21:14:07  <thestinger> anyway I'm doing them all with C++ now because it's easier than trying to get python fast enough
2012-01-09T21:14:54  <mleise> a1k0n: Solving these problems by always looking up the algorithms somewhere is boring :p
2012-01-09T21:15:05  <thestinger> with pypy it's only around 5x-8x slower than C for these questions if you write them well
2012-01-09T21:15:12  <thestinger> but that 5x to 8x can be a _lot_ of wasted time
2012-01-09T21:15:43  <mleise> so there are questions that have no fast solution?
2012-01-09T21:16:11  <thestinger> I'm sure you _can_ do them all with python
2012-01-09T21:16:54  <thestinger> but I would have to do research to find a good mathematical solution, which ruins the fun
2012-01-09T21:17:12  <thestinger> optimizing python is pretty counterintuitive
2012-01-09T21:17:24  <thestinger> less so with pypy
2012-01-09T21:24:25  *** dorisabayon <dorisabayon!~Fandekasp@KD182249014207.au-net.ne.jp> has joined #aichallenge
2012-01-09T21:25:03  <a1k0n> mleise: yeah, i guess, but it's more like looking up some bizarre number theory facts and stringing them together to form an efficient solution to the particular problem
2012-01-09T21:26:55  *** Fandekasp <Fandekasp!~Fandekasp@KD182249002012.au-net.ne.jp> has quit IRC (Ping timeout: 240 seconds)
2012-01-09T21:27:05  <mleise> bizarre is a good word. i start to think of euler as a hardcore nerd
2012-01-09T21:27:57  <a1k0n> i bought a book about generating functions once as a result of projecteuler
2012-01-09T21:28:02  <mleise> but then again number of partitions is something that I can imagine to be actually useful
2012-01-09T21:28:44  <a1k0n> i never solved p41 but i can already tell it has 7 digits
2012-01-09T21:29:13  <mleise> hehe
2012-01-09T21:29:18  <a1k0n> but i pretty much doubt pandigital numbers are useful anywhere
2012-01-09T21:29:59  <mleise> ok, I'll have to get this generator function right now
2012-01-09T21:31:29  <thestinger> a1k0n: 41 is one of the questions I basically just brute forced
2012-01-09T21:32:16  <thestinger> less than a second in python so it's not really that bad
2012-01-09T21:34:53  <X-Scale> I guess I'm missing something on n=7. p(7)=15 but I can only find 14 cases: 7 ; 6/1 ; 5/2 ; 5/1/1 ; 4/3 ; 4/2/1 ; 4/1/1/1 ; 3/3/1 ; 3/2/1/1 ; 3/1/1/1/1 ; 2/2/2/1 ; 2/2/1/1/1 ; 2/1/1/1/1/1 ; 1/1/1/1/1/1/1
2012-01-09T21:48:54  <jcdjcd> 3/2/2
2012-01-09T21:50:43  <X-Scale> ah...interesting
2012-01-09T22:00:43  *** Chris_0076 <Chris_0076!~Chris_007@adsl-74-176-221-134.asm.bellsouth.net> has quit IRC (Quit: Leaving)
2012-01-09T22:10:00  <amstan> contestbot: seen janzert
2012-01-09T22:10:00  <contestbot> amstan: janzert was last seen in #aichallenge 22 hours, 42 minutes, and 40 seconds ago: <janzert> it is displayed for games where the player ended with 'crashed', 'timeout' or 'invalid'
2012-01-09T22:10:34  <amstan> janzert: i got an email about forum activations, i have a feeling email on the archive server isn't working
2012-01-09T22:10:47  <amstan> see staff
2012-01-09T22:41:34  *** dvladim <dvladim!~dvladim@85.113.131.65> has joined #aichallenge
2012-01-09T23:07:11  <mleise> thestinger: #78 is blazing fast without BigInts. I wouldn't have removed them though if I wasn't hinted to the fact that there is only addition and subtraction, that is more or less uninfluenced by the modulo operator
2012-01-09T23:13:59  *** dvladim <dvladim!~dvladim@85.113.131.65> has quit IRC (Read error: Operation timed out)
2012-01-09T23:23:30  <thestinger> mleise: yeah, it's 2.4s now without gmp and over a minute when using it
2012-01-09T23:23:41  <thestinger> and gmp is fast
2012-01-09T23:23:58  <mleise> oh... you are slow, someone claimed to do 70ms in Java
2012-01-09T23:24:13  <thestinger> well, not using the smart pentagonal number method
2012-01-09T23:25:06  <thestinger> I end up calculating p(n) for each n until it's the answer
2012-01-09T23:25:45  <mleise> that's what I do as well.
2012-01-09T23:26:02  <mleise> but I use the pentagonal numbers to calculate p(n) of course
2012-01-09T23:26:07  <thestinger> ah
2012-01-09T23:28:27  <mleise> I don't know any other methods to be honest, that don't take ages
2012-01-09T23:29:39  <mleise> 49ms and not optimized to total obfuscation: http://codepad.org/lx74QNcJ
2012-01-09T23:30:48  <mleise> I'm also starting to share code between the problems and make it so I can build an executable with all solved problems included
2012-01-09T23:36:14  *** lhb__ <lhb__!~raemde@dslb-088-073-249-254.pools.arcor-ip.net> has joined #aichallenge
2012-01-09T23:40:14  *** raemde_ <raemde_!~raemde@dslb-088-073-209-233.pools.arcor-ip.net> has quit IRC (Ping timeout: 252 seconds)
2012-01-09T23:56:34  *** u_ <u_!~u_@adsl-75-57-162-84.dsl.emhril.sbcglobal.net> has quit IRC (Quit: u_)
